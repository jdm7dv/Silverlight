//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.20506.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 2.0.5.0
// 
namespace SilverBlog.SLFrontend.BlogService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="BlogService.BlogService")]
    public interface BlogService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:BlogService/TestService", ReplyAction="urn:BlogService/TestServiceResponse")]
        System.IAsyncResult BeginTestService(System.AsyncCallback callback, object asyncState);
        
        SilverBlog.DTO.Entry EndTestService(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:BlogService/CreateEntry", ReplyAction="urn:BlogService/CreateEntryResponse")]
        System.IAsyncResult BeginCreateEntry(SilverBlog.DTO.Entry entry, System.AsyncCallback callback, object asyncState);
        
        void EndCreateEntry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:BlogService/GetLast10Entries", ReplyAction="urn:BlogService/GetLast10EntriesResponse")]
        System.IAsyncResult BeginGetLast10Entries(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SilverBlog.DTO.Entry> EndGetLast10Entries(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface BlogServiceChannel : SilverBlog.SLFrontend.BlogService.BlogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TestServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SilverBlog.DTO.Entry Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SilverBlog.DTO.Entry)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLast10EntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLast10EntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SilverBlog.DTO.Entry> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SilverBlog.DTO.Entry>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BlogServiceClient : System.ServiceModel.ClientBase<SilverBlog.SLFrontend.BlogService.BlogService>, SilverBlog.SLFrontend.BlogService.BlogService {
        
        private BeginOperationDelegate onBeginTestServiceDelegate;
        
        private EndOperationDelegate onEndTestServiceDelegate;
        
        private System.Threading.SendOrPostCallback onTestServiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateEntryDelegate;
        
        private EndOperationDelegate onEndCreateEntryDelegate;
        
        private System.Threading.SendOrPostCallback onCreateEntryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLast10EntriesDelegate;
        
        private EndOperationDelegate onEndGetLast10EntriesDelegate;
        
        private System.Threading.SendOrPostCallback onGetLast10EntriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public BlogServiceClient() {
        }
        
        public BlogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BlogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<TestServiceCompletedEventArgs> TestServiceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateEntryCompleted;
        
        public event System.EventHandler<GetLast10EntriesCompletedEventArgs> GetLast10EntriesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverBlog.SLFrontend.BlogService.BlogService.BeginTestService(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTestService(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SilverBlog.DTO.Entry SilverBlog.SLFrontend.BlogService.BlogService.EndTestService(System.IAsyncResult result) {
            return base.Channel.EndTestService(result);
        }
        
        private System.IAsyncResult OnBeginTestService(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SilverBlog.SLFrontend.BlogService.BlogService)(this)).BeginTestService(callback, asyncState);
        }
        
        private object[] OnEndTestService(System.IAsyncResult result) {
            SilverBlog.DTO.Entry retVal = ((SilverBlog.SLFrontend.BlogService.BlogService)(this)).EndTestService(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTestServiceCompleted(object state) {
            if ((this.TestServiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TestServiceCompleted(this, new TestServiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TestServiceAsync() {
            this.TestServiceAsync(null);
        }
        
        public void TestServiceAsync(object userState) {
            if ((this.onBeginTestServiceDelegate == null)) {
                this.onBeginTestServiceDelegate = new BeginOperationDelegate(this.OnBeginTestService);
            }
            if ((this.onEndTestServiceDelegate == null)) {
                this.onEndTestServiceDelegate = new EndOperationDelegate(this.OnEndTestService);
            }
            if ((this.onTestServiceCompletedDelegate == null)) {
                this.onTestServiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTestServiceCompleted);
            }
            base.InvokeAsync(this.onBeginTestServiceDelegate, null, this.onEndTestServiceDelegate, this.onTestServiceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverBlog.SLFrontend.BlogService.BlogService.BeginCreateEntry(SilverBlog.DTO.Entry entry, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateEntry(entry, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SilverBlog.SLFrontend.BlogService.BlogService.EndCreateEntry(System.IAsyncResult result) {
            base.Channel.EndCreateEntry(result);
        }
        
        private System.IAsyncResult OnBeginCreateEntry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SilverBlog.DTO.Entry entry = ((SilverBlog.DTO.Entry)(inValues[0]));
            return ((SilverBlog.SLFrontend.BlogService.BlogService)(this)).BeginCreateEntry(entry, callback, asyncState);
        }
        
        private object[] OnEndCreateEntry(System.IAsyncResult result) {
            ((SilverBlog.SLFrontend.BlogService.BlogService)(this)).EndCreateEntry(result);
            return null;
        }
        
        private void OnCreateEntryCompleted(object state) {
            if ((this.CreateEntryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateEntryAsync(SilverBlog.DTO.Entry entry) {
            this.CreateEntryAsync(entry, null);
        }
        
        public void CreateEntryAsync(SilverBlog.DTO.Entry entry, object userState) {
            if ((this.onBeginCreateEntryDelegate == null)) {
                this.onBeginCreateEntryDelegate = new BeginOperationDelegate(this.OnBeginCreateEntry);
            }
            if ((this.onEndCreateEntryDelegate == null)) {
                this.onEndCreateEntryDelegate = new EndOperationDelegate(this.OnEndCreateEntry);
            }
            if ((this.onCreateEntryCompletedDelegate == null)) {
                this.onCreateEntryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateEntryCompleted);
            }
            base.InvokeAsync(this.onBeginCreateEntryDelegate, new object[] {
                        entry}, this.onEndCreateEntryDelegate, this.onCreateEntryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SilverBlog.SLFrontend.BlogService.BlogService.BeginGetLast10Entries(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLast10Entries(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SilverBlog.DTO.Entry> SilverBlog.SLFrontend.BlogService.BlogService.EndGetLast10Entries(System.IAsyncResult result) {
            return base.Channel.EndGetLast10Entries(result);
        }
        
        private System.IAsyncResult OnBeginGetLast10Entries(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SilverBlog.SLFrontend.BlogService.BlogService)(this)).BeginGetLast10Entries(callback, asyncState);
        }
        
        private object[] OnEndGetLast10Entries(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SilverBlog.DTO.Entry> retVal = ((SilverBlog.SLFrontend.BlogService.BlogService)(this)).EndGetLast10Entries(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLast10EntriesCompleted(object state) {
            if ((this.GetLast10EntriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLast10EntriesCompleted(this, new GetLast10EntriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLast10EntriesAsync() {
            this.GetLast10EntriesAsync(null);
        }
        
        public void GetLast10EntriesAsync(object userState) {
            if ((this.onBeginGetLast10EntriesDelegate == null)) {
                this.onBeginGetLast10EntriesDelegate = new BeginOperationDelegate(this.OnBeginGetLast10Entries);
            }
            if ((this.onEndGetLast10EntriesDelegate == null)) {
                this.onEndGetLast10EntriesDelegate = new EndOperationDelegate(this.OnEndGetLast10Entries);
            }
            if ((this.onGetLast10EntriesCompletedDelegate == null)) {
                this.onGetLast10EntriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLast10EntriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetLast10EntriesDelegate, null, this.onEndGetLast10EntriesDelegate, this.onGetLast10EntriesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SilverBlog.SLFrontend.BlogService.BlogService CreateChannel() {
            return new BlogServiceClientChannel(this);
        }
        
        private class BlogServiceClientChannel : ChannelBase<SilverBlog.SLFrontend.BlogService.BlogService>, SilverBlog.SLFrontend.BlogService.BlogService {
            
            public BlogServiceClientChannel(System.ServiceModel.ClientBase<SilverBlog.SLFrontend.BlogService.BlogService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginTestService(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("TestService", _args, callback, asyncState);
                return _result;
            }
            
            public SilverBlog.DTO.Entry EndTestService(System.IAsyncResult result) {
                object[] _args = new object[0];
                SilverBlog.DTO.Entry _result = ((SilverBlog.DTO.Entry)(base.EndInvoke("TestService", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateEntry(SilverBlog.DTO.Entry entry, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entry;
                System.IAsyncResult _result = base.BeginInvoke("CreateEntry", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCreateEntry(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CreateEntry", _args, result);
            }
            
            public System.IAsyncResult BeginGetLast10Entries(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetLast10Entries", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SilverBlog.DTO.Entry> EndGetLast10Entries(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SilverBlog.DTO.Entry> _result = ((System.Collections.ObjectModel.ObservableCollection<SilverBlog.DTO.Entry>)(base.EndInvoke("GetLast10Entries", _args, result)));
                return _result;
            }
        }
    }
}
