// ----------------------------------------------------------------------------------
// Microsoft Developer & Platform Evangelism
// 
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
// THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, 
// EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES 
// OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
// ----------------------------------------------------------------------------------
// The example companies, organizations, products, domain names,
// e-mail addresses, logos, people, places, and events depicted
// herein are fictitious.  No association with any real company,
// organization, product, domain name, email address, logo, person,
// places, or events is intended or should be inferred.
// ----------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SlEventManagerModel", "FK_AttendeeEvent_Attendee", "Attendee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SlEventManager.Web.Attendee), "AttendeeEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SlEventManager.Web.AttendeeEvent), true)]
[assembly: EdmRelationshipAttribute("SlEventManagerModel", "FK_AttendeeScheduleTalk_Attendee", "Attendee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SlEventManager.Web.Attendee), "AttendeeScheduleTalk", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SlEventManager.Web.AttendeeScheduleTalk), true)]
[assembly: EdmRelationshipAttribute("SlEventManagerModel", "FK_AttendeeEvent_Event", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SlEventManager.Web.Event), "AttendeeEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SlEventManager.Web.AttendeeEvent), true)]
[assembly: EdmRelationshipAttribute("SlEventManagerModel", "FK_AttendeeScheduleTalk_Talk", "Talk", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SlEventManager.Web.Talk), "AttendeeScheduleTalk", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SlEventManager.Web.AttendeeScheduleTalk), true)]
[assembly: EdmRelationshipAttribute("SlEventManagerModel", "FK_EventTrack_Event", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SlEventManager.Web.Event), "EventTrack", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SlEventManager.Web.EventTrack), true)]
[assembly: EdmRelationshipAttribute("SlEventManagerModel", "FK_Talk_EventTrack", "EventTrack", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SlEventManager.Web.EventTrack), "Talk", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SlEventManager.Web.Talk), true)]

#endregion

namespace SlEventManager.Web
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SlEventManagerEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SlEventManagerEntities object using the connection string found in the 'SlEventManagerEntities' section of the application configuration file.
        /// </summary>
        public SlEventManagerEntities() : base("name=SlEventManagerEntities", "SlEventManagerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SlEventManagerEntities object.
        /// </summary>
        public SlEventManagerEntities(string connectionString) : base(connectionString, "SlEventManagerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SlEventManagerEntities object.
        /// </summary>
        public SlEventManagerEntities(EntityConnection connection) : base(connection, "SlEventManagerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Attendee> Attendees
        {
            get
            {
                if ((_Attendees == null))
                {
                    _Attendees = base.CreateObjectSet<Attendee>("Attendees");
                }
                return _Attendees;
            }
        }
        private ObjectSet<Attendee> _Attendees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AttendeeEvent> AttendeeEvents
        {
            get
            {
                if ((_AttendeeEvents == null))
                {
                    _AttendeeEvents = base.CreateObjectSet<AttendeeEvent>("AttendeeEvents");
                }
                return _AttendeeEvents;
            }
        }
        private ObjectSet<AttendeeEvent> _AttendeeEvents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AttendeeScheduleTalk> AttendeeScheduleTalks
        {
            get
            {
                if ((_AttendeeScheduleTalks == null))
                {
                    _AttendeeScheduleTalks = base.CreateObjectSet<AttendeeScheduleTalk>("AttendeeScheduleTalks");
                }
                return _AttendeeScheduleTalks;
            }
        }
        private ObjectSet<AttendeeScheduleTalk> _AttendeeScheduleTalks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Event>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Event> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventTrack> EventTracks
        {
            get
            {
                if ((_EventTracks == null))
                {
                    _EventTracks = base.CreateObjectSet<EventTrack>("EventTracks");
                }
                return _EventTracks;
            }
        }
        private ObjectSet<EventTrack> _EventTracks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Talk> Talks
        {
            get
            {
                if ((_Talks == null))
                {
                    _Talks = base.CreateObjectSet<Talk>("Talks");
                }
                return _Talks;
            }
        }
        private ObjectSet<Talk> _Talks;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Attendees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttendees(Attendee attendee)
        {
            base.AddObject("Attendees", attendee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AttendeeEvents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttendeeEvents(AttendeeEvent attendeeEvent)
        {
            base.AddObject("AttendeeEvents", attendeeEvent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AttendeeScheduleTalks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttendeeScheduleTalks(AttendeeScheduleTalk attendeeScheduleTalk)
        {
            base.AddObject("AttendeeScheduleTalks", attendeeScheduleTalk);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Event @event)
        {
            base.AddObject("Events", @event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventTracks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventTracks(EventTrack eventTrack)
        {
            base.AddObject("EventTracks", eventTrack);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Talks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTalks(Talk talk)
        {
            base.AddObject("Talks", talk);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SlEventManagerModel", Name="Attendee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Attendee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Attendee object.
        /// </summary>
        /// <param name="attendeeID">Initial value of the AttendeeID property.</param>
        /// <param name="aspNetUserId">Initial value of the AspNetUserId property.</param>
        public static Attendee CreateAttendee(global::System.Int32 attendeeID, global::System.Guid aspNetUserId)
        {
            Attendee attendee = new Attendee();
            attendee.AttendeeID = attendeeID;
            attendee.AspNetUserId = aspNetUserId;
            return attendee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttendeeID
        {
            get
            {
                return _AttendeeID;
            }
            set
            {
                if (_AttendeeID != value)
                {
                    OnAttendeeIDChanging(value);
                    ReportPropertyChanging("AttendeeID");
                    _AttendeeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AttendeeID");
                    OnAttendeeIDChanged();
                }
            }
        }
        private global::System.Int32 _AttendeeID;
        partial void OnAttendeeIDChanging(global::System.Int32 value);
        partial void OnAttendeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AspNetUserId
        {
            get
            {
                return _AspNetUserId;
            }
            set
            {
                OnAspNetUserIdChanging(value);
                ReportPropertyChanging("AspNetUserId");
                _AspNetUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AspNetUserId");
                OnAspNetUserIdChanged();
            }
        }
        private global::System.Guid _AspNetUserId;
        partial void OnAspNetUserIdChanging(global::System.Guid value);
        partial void OnAspNetUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] UserPicture
        {
            get
            {
                return StructuralObject.GetValidValue(_UserPicture);
            }
            set
            {
                OnUserPictureChanging(value);
                ReportPropertyChanging("UserPicture");
                _UserPicture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserPicture");
                OnUserPictureChanged();
            }
        }
        private global::System.Byte[] _UserPicture;
        partial void OnUserPictureChanging(global::System.Byte[] value);
        partial void OnUserPictureChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SlEventManagerModel", "FK_AttendeeEvent_Attendee", "AttendeeEvent")]
        public EntityCollection<AttendeeEvent> AttendeeEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AttendeeEvent>("SlEventManagerModel.FK_AttendeeEvent_Attendee", "AttendeeEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AttendeeEvent>("SlEventManagerModel.FK_AttendeeEvent_Attendee", "AttendeeEvent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SlEventManagerModel", "FK_AttendeeScheduleTalk_Attendee", "AttendeeScheduleTalk")]
        public EntityCollection<AttendeeScheduleTalk> AttendeeScheduleTalks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AttendeeScheduleTalk>("SlEventManagerModel.FK_AttendeeScheduleTalk_Attendee", "AttendeeScheduleTalk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AttendeeScheduleTalk>("SlEventManagerModel.FK_AttendeeScheduleTalk_Attendee", "AttendeeScheduleTalk", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SlEventManagerModel", Name="AttendeeEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AttendeeEvent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AttendeeEvent object.
        /// </summary>
        /// <param name="attendeeEventID">Initial value of the AttendeeEventID property.</param>
        /// <param name="attendeeID">Initial value of the AttendeeID property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="isAcknowledged">Initial value of the IsAcknowledged property.</param>
        public static AttendeeEvent CreateAttendeeEvent(global::System.Int32 attendeeEventID, global::System.Int32 attendeeID, global::System.Int32 eventID, global::System.Boolean isAcknowledged)
        {
            AttendeeEvent attendeeEvent = new AttendeeEvent();
            attendeeEvent.AttendeeEventID = attendeeEventID;
            attendeeEvent.AttendeeID = attendeeID;
            attendeeEvent.EventID = eventID;
            attendeeEvent.IsAcknowledged = isAcknowledged;
            return attendeeEvent;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttendeeEventID
        {
            get
            {
                return _AttendeeEventID;
            }
            set
            {
                if (_AttendeeEventID != value)
                {
                    OnAttendeeEventIDChanging(value);
                    ReportPropertyChanging("AttendeeEventID");
                    _AttendeeEventID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AttendeeEventID");
                    OnAttendeeEventIDChanged();
                }
            }
        }
        private global::System.Int32 _AttendeeEventID;
        partial void OnAttendeeEventIDChanging(global::System.Int32 value);
        partial void OnAttendeeEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttendeeID
        {
            get
            {
                return _AttendeeID;
            }
            set
            {
                OnAttendeeIDChanging(value);
                ReportPropertyChanging("AttendeeID");
                _AttendeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttendeeID");
                OnAttendeeIDChanged();
            }
        }
        private global::System.Int32 _AttendeeID;
        partial void OnAttendeeIDChanging(global::System.Int32 value);
        partial void OnAttendeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private global::System.Int32 _EventID;
        partial void OnEventIDChanging(global::System.Int32 value);
        partial void OnEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAcknowledged
        {
            get
            {
                return _IsAcknowledged;
            }
            set
            {
                OnIsAcknowledgedChanging(value);
                ReportPropertyChanging("IsAcknowledged");
                _IsAcknowledged = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAcknowledged");
                OnIsAcknowledgedChanged();
            }
        }
        private global::System.Boolean _IsAcknowledged;
        partial void OnIsAcknowledgedChanging(global::System.Boolean value);
        partial void OnIsAcknowledgedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SlEventManagerModel", "FK_AttendeeEvent_Attendee", "Attendee")]
        public Attendee Attendee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attendee>("SlEventManagerModel.FK_AttendeeEvent_Attendee", "Attendee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attendee>("SlEventManagerModel.FK_AttendeeEvent_Attendee", "Attendee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Attendee> AttendeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attendee>("SlEventManagerModel.FK_AttendeeEvent_Attendee", "Attendee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Attendee>("SlEventManagerModel.FK_AttendeeEvent_Attendee", "Attendee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SlEventManagerModel", "FK_AttendeeEvent_Event", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("SlEventManagerModel.FK_AttendeeEvent_Event", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("SlEventManagerModel.FK_AttendeeEvent_Event", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("SlEventManagerModel.FK_AttendeeEvent_Event", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("SlEventManagerModel.FK_AttendeeEvent_Event", "Event", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SlEventManagerModel", Name="AttendeeScheduleTalk")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AttendeeScheduleTalk : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AttendeeScheduleTalk object.
        /// </summary>
        /// <param name="attendeeScheduleTalkID">Initial value of the AttendeeScheduleTalkID property.</param>
        /// <param name="attendeeID">Initial value of the AttendeeID property.</param>
        /// <param name="talkID">Initial value of the TalkID property.</param>
        public static AttendeeScheduleTalk CreateAttendeeScheduleTalk(global::System.Int32 attendeeScheduleTalkID, global::System.Int32 attendeeID, global::System.Int32 talkID)
        {
            AttendeeScheduleTalk attendeeScheduleTalk = new AttendeeScheduleTalk();
            attendeeScheduleTalk.AttendeeScheduleTalkID = attendeeScheduleTalkID;
            attendeeScheduleTalk.AttendeeID = attendeeID;
            attendeeScheduleTalk.TalkID = talkID;
            return attendeeScheduleTalk;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttendeeScheduleTalkID
        {
            get
            {
                return _AttendeeScheduleTalkID;
            }
            set
            {
                if (_AttendeeScheduleTalkID != value)
                {
                    OnAttendeeScheduleTalkIDChanging(value);
                    ReportPropertyChanging("AttendeeScheduleTalkID");
                    _AttendeeScheduleTalkID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AttendeeScheduleTalkID");
                    OnAttendeeScheduleTalkIDChanged();
                }
            }
        }
        private global::System.Int32 _AttendeeScheduleTalkID;
        partial void OnAttendeeScheduleTalkIDChanging(global::System.Int32 value);
        partial void OnAttendeeScheduleTalkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttendeeID
        {
            get
            {
                return _AttendeeID;
            }
            set
            {
                OnAttendeeIDChanging(value);
                ReportPropertyChanging("AttendeeID");
                _AttendeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttendeeID");
                OnAttendeeIDChanged();
            }
        }
        private global::System.Int32 _AttendeeID;
        partial void OnAttendeeIDChanging(global::System.Int32 value);
        partial void OnAttendeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TalkID
        {
            get
            {
                return _TalkID;
            }
            set
            {
                OnTalkIDChanging(value);
                ReportPropertyChanging("TalkID");
                _TalkID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TalkID");
                OnTalkIDChanged();
            }
        }
        private global::System.Int32 _TalkID;
        partial void OnTalkIDChanging(global::System.Int32 value);
        partial void OnTalkIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SlEventManagerModel", "FK_AttendeeScheduleTalk_Attendee", "Attendee")]
        public Attendee Attendee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attendee>("SlEventManagerModel.FK_AttendeeScheduleTalk_Attendee", "Attendee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attendee>("SlEventManagerModel.FK_AttendeeScheduleTalk_Attendee", "Attendee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Attendee> AttendeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attendee>("SlEventManagerModel.FK_AttendeeScheduleTalk_Attendee", "Attendee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Attendee>("SlEventManagerModel.FK_AttendeeScheduleTalk_Attendee", "Attendee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SlEventManagerModel", "FK_AttendeeScheduleTalk_Talk", "Talk")]
        public Talk Talk
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Talk>("SlEventManagerModel.FK_AttendeeScheduleTalk_Talk", "Talk").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Talk>("SlEventManagerModel.FK_AttendeeScheduleTalk_Talk", "Talk").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Talk> TalkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Talk>("SlEventManagerModel.FK_AttendeeScheduleTalk_Talk", "Talk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Talk>("SlEventManagerModel.FK_AttendeeScheduleTalk_Talk", "Talk", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SlEventManagerModel", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="eventTitle">Initial value of the EventTitle property.</param>
        /// <param name="eventVenueName">Initial value of the EventVenueName property.</param>
        /// <param name="eventStartDate">Initial value of the EventStartDate property.</param>
        /// <param name="eventEndDate">Initial value of the EventEndDate property.</param>
        /// <param name="eventDescription">Initial value of the EventDescription property.</param>
        /// <param name="isLive">Initial value of the IsLive property.</param>
        public static Event CreateEvent(global::System.Int32 eventID, global::System.String eventTitle, global::System.String eventVenueName, global::System.DateTime eventStartDate, global::System.DateTime eventEndDate, global::System.String eventDescription, global::System.Boolean isLive)
        {
            Event @event = new Event();
            @event.EventID = eventID;
            @event.EventTitle = eventTitle;
            @event.EventVenueName = eventVenueName;
            @event.EventStartDate = eventStartDate;
            @event.EventEndDate = eventEndDate;
            @event.EventDescription = eventDescription;
            @event.IsLive = isLive;
            return @event;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                if (_EventID != value)
                {
                    OnEventIDChanging(value);
                    ReportPropertyChanging("EventID");
                    _EventID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventID");
                    OnEventIDChanged();
                }
            }
        }
        private global::System.Int32 _EventID;
        partial void OnEventIDChanging(global::System.Int32 value);
        partial void OnEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventTitle
        {
            get
            {
                return _EventTitle;
            }
            set
            {
                OnEventTitleChanging(value);
                ReportPropertyChanging("EventTitle");
                _EventTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventTitle");
                OnEventTitleChanged();
            }
        }
        private global::System.String _EventTitle;
        partial void OnEventTitleChanging(global::System.String value);
        partial void OnEventTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventVenueName
        {
            get
            {
                return _EventVenueName;
            }
            set
            {
                OnEventVenueNameChanging(value);
                ReportPropertyChanging("EventVenueName");
                _EventVenueName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventVenueName");
                OnEventVenueNameChanged();
            }
        }
        private global::System.String _EventVenueName;
        partial void OnEventVenueNameChanging(global::System.String value);
        partial void OnEventVenueNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventStartDate
        {
            get
            {
                return _EventStartDate;
            }
            set
            {
                OnEventStartDateChanging(value);
                ReportPropertyChanging("EventStartDate");
                _EventStartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventStartDate");
                OnEventStartDateChanged();
            }
        }
        private global::System.DateTime _EventStartDate;
        partial void OnEventStartDateChanging(global::System.DateTime value);
        partial void OnEventStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventEndDate
        {
            get
            {
                return _EventEndDate;
            }
            set
            {
                OnEventEndDateChanging(value);
                ReportPropertyChanging("EventEndDate");
                _EventEndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventEndDate");
                OnEventEndDateChanged();
            }
        }
        private global::System.DateTime _EventEndDate;
        partial void OnEventEndDateChanging(global::System.DateTime value);
        partial void OnEventEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventDescription
        {
            get
            {
                return _EventDescription;
            }
            set
            {
                OnEventDescriptionChanging(value);
                ReportPropertyChanging("EventDescription");
                _EventDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventDescription");
                OnEventDescriptionChanged();
            }
        }
        private global::System.String _EventDescription;
        partial void OnEventDescriptionChanging(global::System.String value);
        partial void OnEventDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLive
        {
            get
            {
                return _IsLive;
            }
            set
            {
                OnIsLiveChanging(value);
                ReportPropertyChanging("IsLive");
                _IsLive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLive");
                OnIsLiveChanged();
            }
        }
        private global::System.Boolean _IsLive;
        partial void OnIsLiveChanging(global::System.Boolean value);
        partial void OnIsLiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SlEventManagerModel", "FK_AttendeeEvent_Event", "AttendeeEvent")]
        public EntityCollection<AttendeeEvent> AttendeeEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AttendeeEvent>("SlEventManagerModel.FK_AttendeeEvent_Event", "AttendeeEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AttendeeEvent>("SlEventManagerModel.FK_AttendeeEvent_Event", "AttendeeEvent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SlEventManagerModel", "FK_EventTrack_Event", "EventTrack")]
        public EntityCollection<EventTrack> EventTracks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventTrack>("SlEventManagerModel.FK_EventTrack_Event", "EventTrack");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventTrack>("SlEventManagerModel.FK_EventTrack_Event", "EventTrack", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SlEventManagerModel", Name="EventTrack")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventTrack : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventTrack object.
        /// </summary>
        /// <param name="eventTrackID">Initial value of the EventTrackID property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="eventTrackTitle">Initial value of the EventTrackTitle property.</param>
        public static EventTrack CreateEventTrack(global::System.Int32 eventTrackID, global::System.Int32 eventID, global::System.String eventTrackTitle)
        {
            EventTrack eventTrack = new EventTrack();
            eventTrack.EventTrackID = eventTrackID;
            eventTrack.EventID = eventID;
            eventTrack.EventTrackTitle = eventTrackTitle;
            return eventTrack;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventTrackID
        {
            get
            {
                return _EventTrackID;
            }
            set
            {
                if (_EventTrackID != value)
                {
                    OnEventTrackIDChanging(value);
                    ReportPropertyChanging("EventTrackID");
                    _EventTrackID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventTrackID");
                    OnEventTrackIDChanged();
                }
            }
        }
        private global::System.Int32 _EventTrackID;
        partial void OnEventTrackIDChanging(global::System.Int32 value);
        partial void OnEventTrackIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private global::System.Int32 _EventID;
        partial void OnEventIDChanging(global::System.Int32 value);
        partial void OnEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventTrackTitle
        {
            get
            {
                return _EventTrackTitle;
            }
            set
            {
                OnEventTrackTitleChanging(value);
                ReportPropertyChanging("EventTrackTitle");
                _EventTrackTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventTrackTitle");
                OnEventTrackTitleChanged();
            }
        }
        private global::System.String _EventTrackTitle;
        partial void OnEventTrackTitleChanging(global::System.String value);
        partial void OnEventTrackTitleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SlEventManagerModel", "FK_EventTrack_Event", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("SlEventManagerModel.FK_EventTrack_Event", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("SlEventManagerModel.FK_EventTrack_Event", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("SlEventManagerModel.FK_EventTrack_Event", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("SlEventManagerModel.FK_EventTrack_Event", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SlEventManagerModel", "FK_Talk_EventTrack", "Talk")]
        public EntityCollection<Talk> Talks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Talk>("SlEventManagerModel.FK_Talk_EventTrack", "Talk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Talk>("SlEventManagerModel.FK_Talk_EventTrack", "Talk", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SlEventManagerModel", Name="Talk")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Talk : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Talk object.
        /// </summary>
        /// <param name="talkID">Initial value of the TalkID property.</param>
        /// <param name="eventTrackID">Initial value of the EventTrackID property.</param>
        /// <param name="talkTitle">Initial value of the TalkTitle property.</param>
        /// <param name="talkAbstract">Initial value of the TalkAbstract property.</param>
        /// <param name="talkStartTime">Initial value of the TalkStartTime property.</param>
        /// <param name="talkEndTime">Initial value of the TalkEndTime property.</param>
        public static Talk CreateTalk(global::System.Int32 talkID, global::System.Int32 eventTrackID, global::System.String talkTitle, global::System.String talkAbstract, global::System.DateTime talkStartTime, global::System.DateTime talkEndTime)
        {
            Talk talk = new Talk();
            talk.TalkID = talkID;
            talk.EventTrackID = eventTrackID;
            talk.TalkTitle = talkTitle;
            talk.TalkAbstract = talkAbstract;
            talk.TalkStartTime = talkStartTime;
            talk.TalkEndTime = talkEndTime;
            return talk;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TalkID
        {
            get
            {
                return _TalkID;
            }
            set
            {
                if (_TalkID != value)
                {
                    OnTalkIDChanging(value);
                    ReportPropertyChanging("TalkID");
                    _TalkID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TalkID");
                    OnTalkIDChanged();
                }
            }
        }
        private global::System.Int32 _TalkID;
        partial void OnTalkIDChanging(global::System.Int32 value);
        partial void OnTalkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventTrackID
        {
            get
            {
                return _EventTrackID;
            }
            set
            {
                OnEventTrackIDChanging(value);
                ReportPropertyChanging("EventTrackID");
                _EventTrackID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventTrackID");
                OnEventTrackIDChanged();
            }
        }
        private global::System.Int32 _EventTrackID;
        partial void OnEventTrackIDChanging(global::System.Int32 value);
        partial void OnEventTrackIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TalkTitle
        {
            get
            {
                return _TalkTitle;
            }
            set
            {
                OnTalkTitleChanging(value);
                ReportPropertyChanging("TalkTitle");
                _TalkTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TalkTitle");
                OnTalkTitleChanged();
            }
        }
        private global::System.String _TalkTitle;
        partial void OnTalkTitleChanging(global::System.String value);
        partial void OnTalkTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TalkAbstract
        {
            get
            {
                return _TalkAbstract;
            }
            set
            {
                OnTalkAbstractChanging(value);
                ReportPropertyChanging("TalkAbstract");
                _TalkAbstract = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TalkAbstract");
                OnTalkAbstractChanged();
            }
        }
        private global::System.String _TalkAbstract;
        partial void OnTalkAbstractChanging(global::System.String value);
        partial void OnTalkAbstractChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TalkStartTime
        {
            get
            {
                return _TalkStartTime;
            }
            set
            {
                OnTalkStartTimeChanging(value);
                ReportPropertyChanging("TalkStartTime");
                _TalkStartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TalkStartTime");
                OnTalkStartTimeChanged();
            }
        }
        private global::System.DateTime _TalkStartTime;
        partial void OnTalkStartTimeChanging(global::System.DateTime value);
        partial void OnTalkStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TalkEndTime
        {
            get
            {
                return _TalkEndTime;
            }
            set
            {
                OnTalkEndTimeChanging(value);
                ReportPropertyChanging("TalkEndTime");
                _TalkEndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TalkEndTime");
                OnTalkEndTimeChanged();
            }
        }
        private global::System.DateTime _TalkEndTime;
        partial void OnTalkEndTimeChanging(global::System.DateTime value);
        partial void OnTalkEndTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SlEventManagerModel", "FK_AttendeeScheduleTalk_Talk", "AttendeeScheduleTalk")]
        public EntityCollection<AttendeeScheduleTalk> AttendeeScheduleTalks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AttendeeScheduleTalk>("SlEventManagerModel.FK_AttendeeScheduleTalk_Talk", "AttendeeScheduleTalk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AttendeeScheduleTalk>("SlEventManagerModel.FK_AttendeeScheduleTalk_Talk", "AttendeeScheduleTalk", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SlEventManagerModel", "FK_Talk_EventTrack", "EventTrack")]
        public EventTrack EventTrack
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventTrack>("SlEventManagerModel.FK_Talk_EventTrack", "EventTrack").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventTrack>("SlEventManagerModel.FK_Talk_EventTrack", "EventTrack").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventTrack> EventTrackReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventTrack>("SlEventManagerModel.FK_Talk_EventTrack", "EventTrack");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventTrack>("SlEventManagerModel.FK_Talk_EventTrack", "EventTrack", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}