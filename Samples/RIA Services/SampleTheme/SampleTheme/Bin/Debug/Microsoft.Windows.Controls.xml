<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Windows.Controls</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Windows.Controls.InteractionHelper">
            <summary>
            The InteractionHelper provides controls with support for all of the
            common interactions like mouse movement, mouse clicks, key presses,
            etc., and also incorporates proper event semantics when the control is
            disabled.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.InteractionHelper.SequentialClickThresholdInMilliseconds">
            <summary>
            The threshold used to determine whether two clicks are temporally
            local and considered a double click (or triple, quadruple, etc.).
            500 milliseconds is the default double click value on Windows.
            This value would ideally be pulled form the system settings.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.InteractionHelper.SequentialClickThresholdInPixelsSquared">
            <summary>
            The threshold used to determine whether two clicks are spatially
            local and considered a double click (or triple, quadruple, etc.)
            in pixels squared.  We use pixels squared so that we can compare to
            the distance delta without taking a square root.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.InteractionHelper._updateVisualState">
            <summary>
            Reference used to call UpdateVisualState on the base class.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.InteractionHelper.#ctor(System.Windows.Controls.Control)">
            <summary>
            Initializes a new instance of the InteractionHelper class.
            </summary>
            <param name="control">Control receiving interaction.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.InteractionHelper.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
            <remarks>
            UpdateVisualState works differently than the rest of the injected
            functionality.  Most of the other events are overridden by the
            calling class which calls Allow, does what it wants, and then calls
            Base.  UpdateVisualState is the opposite because a number of the
            methods in InteractionHelper need to trigger it in the calling
            class.  We do this using the IUpdateVisualState internal interface.
            </remarks>
        </member>
        <member name="M:Microsoft.Windows.Controls.InteractionHelper.UpdateVisualStateBase(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:Microsoft.Windows.Controls.InteractionHelper.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the control's Loaded event.
            </summary>
            <param name="sender">The control.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.InteractionHelper.OnIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle changes to the control's IsEnabled property.
            </summary>
            <param name="sender">The control.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.InteractionHelper.OnApplyTemplateBase">
            <summary>
            Update the visual state of the control when its template is changed.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.InteractionHelper.AllowGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Check if the control's GotFocus event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.InteractionHelper.OnGotFocusBase">
            <summary>
            Base implementation of the virtual GotFocus event handler.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.InteractionHelper.AllowLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Check if the control's LostFocus event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.InteractionHelper.OnLostFocusBase">
            <summary>
            Base implementation of the virtual LostFocus event handler.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.InteractionHelper.AllowMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Check if the control's MouseEnter event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.InteractionHelper.OnMouseEnterBase">
            <summary>
            Base implementation of the virtual MouseEnter event handler.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.InteractionHelper.AllowMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Check if the control's MouseLeave event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.InteractionHelper.OnMouseLeaveBase">
            <summary>
            Base implementation of the virtual MouseLeave event handler.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.InteractionHelper.AllowMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Check if the control's MouseLeftButtonDown event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.InteractionHelper.OnMouseLeftButtonDownBase">
            <summary>
            Base implementation of the virtual MouseLeftButtonDown event
            handler.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.InteractionHelper.AllowMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Check if the control's MouseLeftButtonUp event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.InteractionHelper.OnMouseLeftButtonUpBase">
            <summary>
            Base implementation of the virtual MouseLeftButtonUp event handler.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.InteractionHelper.AllowKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Check if the control's KeyDown event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.InteractionHelper.AllowKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Check if the control's KeyUp event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="P:Microsoft.Windows.Controls.InteractionHelper.Control">
            <summary>
            Gets the control the InteractionHelper is targeting.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.InteractionHelper.IsFocused">
            <summary>
            Gets a value indicating whether the control has focus.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.InteractionHelper.IsMouseOver">
            <summary>
            Gets a value indicating whether the mouse is over the control.
            </summary> 
        </member>
        <member name="P:Microsoft.Windows.Controls.InteractionHelper.IsPressed">
            <summary>
            Gets a value indicating whether the mouse button is pressed down
            over the control.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.InteractionHelper.LastClickTime">
            <summary>
            Gets or sets the last time the control was clicked.
            </summary>
            <remarks>
            The value is stored as Utc time because it is slightly more
            performant than converting to local time.
            </remarks>
        </member>
        <member name="P:Microsoft.Windows.Controls.InteractionHelper.LastClickPosition">
            <summary>
            Gets or sets the mouse position of the last click.
            </summary>
            <remarks>The value is relative to the control.</remarks>
        </member>
        <member name="P:Microsoft.Windows.Controls.InteractionHelper.ClickCount">
            <summary>
            Gets the number of times the control was clicked.
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Controls.VisualTreeExtensions">
            <summary>
            A static class providing methods for working with the visual tree.  
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.VisualTreeExtensions.GetVisualChildren(System.Windows.DependencyObject)">
            <summary>
            Retrieves all the visual children of a framework element.
            </summary>
            <param name="parent">The parent framework element.</param>
            <returns>The visual children of the framework element.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.VisualTreeExtensions.GetLogicalChildrenBreadthFirst(System.Windows.FrameworkElement)">
            <summary>
            Retrieves all the logical children of a framework element using a 
            breadth-first search.  A visual element is assumed to be a logical 
            child of another visual element if they are in the same namescope.
            For performance reasons this method manually manages the queue 
            instead of using recursion.
            </summary>
            <param name="parent">The parent framework element.</param>
            <returns>The logical children of the framework element.</returns>
        </member>
        <member name="T:Microsoft.Windows.Controls.OrientedSize">
            <summary>
            The OrientedSize structure is used to abstract the growth direction from
            the layout algorithms of WrapPanel.  When the growth direction is
            oriented horizontally (ex: the next element is arranged on the side of
            the previous element), then the Width grows directly with the placement
            of elements and Height grows indirectly with the size of the largest
            element in the row.  When the orientation is reversed, so is the
            directional growth with respect to Width and Height.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.OrientedSize._orientation">
            <summary>
            The orientation of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.OrientedSize._direct">
            <summary>
            The size dimension that grows directly with layout placement.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.OrientedSize._indirect">
            <summary>
            The size dimension that grows indirectly with the maximum value of
            the layout row or column.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.OrientedSize.#ctor(System.Windows.Controls.Orientation)">
            <summary>
            Initializes a new OrientedSize structure.
            </summary>
            <param name="orientation">Orientation of the structure.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.OrientedSize.#ctor(System.Windows.Controls.Orientation,System.Double,System.Double)">
            <summary>
            Initializes a new OrientedSize structure.
            </summary>
            <param name="orientation">Orientation of the structure.</param>
            <param name="width">Un-oriented width of the structure.</param>
            <param name="height">Un-oriented height of the structure.</param>
        </member>
        <member name="P:Microsoft.Windows.Controls.OrientedSize.Orientation">
            <summary>
            Gets the orientation of the structure.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.OrientedSize.Direct">
            <summary>
            Gets or sets the size dimension that grows directly with layout
            placement.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.OrientedSize.Indirect">
            <summary>
            Gets or sets the size dimension that grows indirectly with the
            maximum value of the layout row or column.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.OrientedSize.Width">
            <summary>
            Gets or sets the width of the size.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.OrientedSize.Height">
            <summary>
            Gets or sets the height of the size.
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Controls.Automation.Peers.TreeViewItemAutomationPeer">
            <summary>
            Exposes TreeViewItem types to UI Automation.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:Microsoft.Windows.Controls.Automation.Peers.TreeViewItemAutomationPeer.#ctor(Microsoft.Windows.Controls.TreeViewItem)">
            <summary>
            Initializes a new instance of the TreeViewItemAutomationPeer class.
            </summary>
            <param name="owner">
            The TreeViewItem that is associated with this
            TreeViewItemAutomationPeer.
            </param>
        </member>
        <member name="M:Microsoft.Windows.Controls.Automation.Peers.TreeViewItemAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the TreeViewItem that is associated
            with this TreeViewItemAutomationPeer.  This method is called by
            GetAutomationControlType.
            </summary>
            <returns>Tree AutomationControlType.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.Automation.Peers.TreeViewItemAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the TreeViewItem that is associated with this
            TreeViewItemAutomationPeer.  This method is called by GetClassName.
            </summary>
            <returns>The name TreeView.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.Automation.Peers.TreeViewItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the TreeViewItem that is associated
            with this TreeViewItemAutomationPeer.
            </summary>
            <param name="patternInterface">The desired PatternInterface.</param>
            <returns>The desired AutomationPeer or null.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.Automation.Peers.TreeViewItemAutomationPeer.RaiseAutomationIsSelectedChanged(System.Boolean)">
            <summary>
            Raise the IsSelected property changed event.
            </summary>
            <param name="isSelected">
            A value indicating whether the TreeViewItem is selected.
            </param>
        </member>
        <member name="M:Microsoft.Windows.Controls.Automation.Peers.TreeViewItemAutomationPeer.RaiseExpandCollapseAutomationEvent(System.Boolean,System.Boolean)">
            <summary>
            Raise an automation event when a TreeViewItem is expanded or
            collapsed.
            </summary>
            <param name="oldValue">
            A value indicating whether the TreeViewItem was expanded.
            </param>
            <param name="newValue">
            A value indicating whether the TreeViewItem is expanded.
            </param>
        </member>
        <member name="M:Microsoft.Windows.Controls.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
            <summary>
            Displays the child items of the TreeViewItem.
            </summary>
            <remarks>
            This API supports the Silverlight automation infrastructure and is
            not intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:Microsoft.Windows.Controls.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
            <summary>
            Hides all descendent controls of the TreeViewItem.
            </summary>
            <remarks>
            This API supports the Silverlight automation infrastructure and is
            not intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:Microsoft.Windows.Controls.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
            <summary>
            Adds the TreeViewItem to the collection of selected items.
            </summary>
            <remarks>
            This API supports the Silverlight automation infrastructure and is
            not intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:Microsoft.Windows.Controls.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
            <summary>
            Clears selection from currently selected items and then proceeds to
            select the current TreeViewItem.
            </summary>
            <remarks>
            This API supports the Silverlight automation infrastructure and is
            not intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:Microsoft.Windows.Controls.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
            <summary>
            Removes the current TreeViewItem from the collection of selected
            items.
            </summary>
            <remarks>
            This API supports the Silverlight automation infrastructure and is
            not intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:Microsoft.Windows.Controls.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
            <summary>
            Scrolls the content area of a TreeView in order to display the
            TreeViewItem within the visible region (viewport) of the TreeView.
            </summary>
            <remarks>
            This API supports the Silverlight automation infrastructure and is
            not intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:Microsoft.Windows.Controls.Automation.Peers.TreeViewItemAutomationPeer.OwnerTreeViewItem">
            <summary>
            Gets the TreeViewItem that owns this TreeViewItemAutomationPeer.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
            <summary>
            Gets the state (expanded or collapsed) of the TreeViewItem.
            </summary>
            <remarks>
            This API supports the Silverlight automation infrastructure and is
            not intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:Microsoft.Windows.Controls.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
            <summary>
            Gets a value indicating whether the TreeViewItem is selected.
            </summary>
            <remarks>
            This API supports the Silverlight automation infrastructure and is
            not intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:Microsoft.Windows.Controls.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
            <summary>
            Gets the UI Automation provider that implements ISelectionProvider
            and acts as the container for the calling object.
            </summary>
            <remarks>
            This API supports the Silverlight automation infrastructure and is
            not intended to be used directly from your code.
            </remarks>
        </member>
        <member name="T:Microsoft.Windows.Controls.ISelectionAdapter">
            <summary>
            Represents an interface to a control or object that has items and 
            selection members.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:Microsoft.Windows.Controls.ISelectionAdapter.HandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the KeyDown event that occurs when a key is 
            pressed while the control has focus.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="P:Microsoft.Windows.Controls.ISelectionAdapter.SelectedItem">
            <summary>
            Gets or sets the selected item.
            </summary>
        </member>
        <member name="E:Microsoft.Windows.Controls.ISelectionAdapter.SelectionChanged">
            <summary>
            Occurs when the SelectedItem property value changes.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.ISelectionAdapter.ItemsSource">
            <summary>
            Gets or sets a collection that is used to generate the content of 
            the control.
            </summary>
        </member>
        <member name="E:Microsoft.Windows.Controls.ISelectionAdapter.Commit">
            <summary>
            Occurs when a selection has occurred and has been committed.
            </summary>
        </member>
        <member name="E:Microsoft.Windows.Controls.ISelectionAdapter.Cancel">
            <summary>
            Occurs when a selection has occurred and has been canceled.
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Controls.StretchDirection">
            <summary>
            Describes how scaling applies to content and restricts scaling to named
            axis types. 
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:Microsoft.Windows.Controls.StretchDirection.UpOnly">
            <summary>
            The content scales upward only when it is smaller than the parent.
            If the content is larger, no scaling downward is performed.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.StretchDirection.DownOnly">
            <summary>
            The content scales downward only when it is larger than the parent.
            If the content is smaller, no scaling upward is performed.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.StretchDirection.Both">
            <summary>
            The content stretches to fit the parent according to the Stretch
            mode.
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Controls.Label">
            <summary>
            Represents the text label for a control.
            </summary>
            <remarks>
            Label does not provide a Target property because Silverlight controls
            do not currently respect the concept of access keys.
            </remarks>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:Microsoft.Windows.Controls.Label.#ctor">
            <summary>
            Initializes a new instance of the Label class.
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Controls.TypeConverters">
            <summary>
            Common TypeConverter functionality.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.TypeConverters.CanConvertFrom``1(System.Type)">
            <summary>
            Returns a value indicating whether this converter can convert an
            object of the given type to an instance of the expected type.
            </summary>
            <typeparam name="T">Expected type of the converter.</typeparam>
            <param name="sourceType">
            The type of the source that is being evaluated for conversion.
            </param>
            <returns>
            A value indicating whether the converter can convert the provided
            type.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.TypeConverters.ConvertFrom``1(System.ComponentModel.TypeConverter,System.Object)">
            <summary>
            Attempts to convert a specified object to an instance of the
            expected type.
            </summary>
            <typeparam name="T">Expected type of the converter.</typeparam>
            <param name="converter">TypeConverter instance.</param>
            <param name="value">The object being converted.</param>
            <returns>
            The instance of the expected type created from the converted object.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.TypeConverters.CanConvertTo``1(System.Type)">
            <summary>
            Determines whether conversion is possible to a specified type.
            </summary>
            <typeparam name="T">Expected type of the converter.</typeparam>
            <param name="destinationType">
            Identifies the data type to evaluate for conversion.
            </param>
            <returns>
            A value indicating whether conversion is possible.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.TypeConverters.ConvertTo(System.ComponentModel.TypeConverter,System.Object,System.Type)">
            <summary>
            Attempts to convert a specified object to an instance of the
            desired type.
            </summary>
            <param name="converter">TypeConverter instance.</param>
            <param name="value">The object being converted.</param>
            <param name="destinationType">
            The type to convert the value to.
            </param>
            <returns>
            The value of the conversion to the specified type.
            </returns>
        </member>
        <member name="T:Microsoft.Windows.Controls.HierarchicalDataTemplate">
            <summary>
            Represents a DataTemplate that supports HeaderedItemsControl, such as
            TreeViewItem or MenuItem.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:Microsoft.Windows.Controls.HierarchicalDataTemplate._itemTemplate">
            <summary>
            The DataTemplate to apply to the ItemTemplate property on a
            generated HeaderedItemsControl (such as a MenuItem or a
            TreeViewItem), to indicate how to display items from the next level
            in the data hierarchy.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.HierarchicalDataTemplate._itemContainerStyle">
            <summary>
            The Style to apply to the ItemContainerStyle property on a generated
            HeaderedItemsControl (such as a MenuItem or a TreeViewItem), to
            indicate how to style items from the next level in the data
            hierarchy.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.HierarchicalDataTemplate.#ctor">
            <summary>
            Initializes a new instance of the HierarchicalDataTemplate class.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.HierarchicalDataTemplate.ItemsSource">
            <summary>
            Gets or sets the binding for this data template, which indicates
            where to find the collection that represents the next level in the
            data hierarchy. 
            </summary>
            <remarks>
             The default value is null.
            </remarks>
        </member>
        <member name="P:Microsoft.Windows.Controls.HierarchicalDataTemplate.IsItemTemplateSet">
            <summary>
            Gets a value indicating whether the ItemTemplate property was set on
            the template.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.HierarchicalDataTemplate.ItemTemplate">
            <summary>
            Gets or sets the DataTemplate to apply to the ItemTemplate property
            on a generated HeaderedItemsControl (such as a MenuItem or a
            TreeViewItem), to indicate how to display items from the next level
            in the data hierarchy.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.HierarchicalDataTemplate.IsItemContainerStyleSet">
            <summary>
            Gets a value indicating whether the ItemContainerStyle property was
            set on the template.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.HierarchicalDataTemplate.ItemContainerStyle">
            <summary>
            Gets or sets the Style that is applied to the item container for each child item.
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Controls.PopulatedEventArgs">
            <summary>
            Provides data for the AutoCompleteBox Populated event.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:Microsoft.Windows.Controls.PopulatedEventArgs.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the PopulatedEventArgs.
            </summary>
            <param name="data">The IEnumerable of populated data.</param>
        </member>
        <member name="P:Microsoft.Windows.Controls.PopulatedEventArgs.Data">
            <summary>
            Gets the list of suggestions populated in the AutoCompleteBox selection
            adapter.
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Controls.TreeView">
            <summary>
            Represents a control that displays hierarchical data in a tree structure
            that has items that can expand and collapse.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:Microsoft.Windows.Controls.TreeView._allowWrite">
            <summary>
            A value indicating whether a read-only dependency property change
            handler should allow the value to be set.  This is used to ensure
            that read-only properties cannot be changed via SetValue, etc.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.TreeView._ignorePropertyChange">
            <summary>
            A value indicating whether a dependency property change handler
            should ignore the next change notification.  This is used to reset
            the value of properties without performing any of the actions in
            their change handlers.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.TreeView.SelectedItemProperty">
            <summary>
            Identifies the SelectedItem dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeView.OnSelectedItemPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedItemProperty property changed handler.
            </summary>
            <param name="d">TreeView that changed its SelectedItem.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Microsoft.Windows.Controls.TreeView.SelectedValueProperty">
            <summary>
            Identifies the SelectedValue dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeView.OnSelectedValuePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedValueProperty property changed handler.
            </summary>
            <param name="d">TreeView that changed its SelectedValue.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Microsoft.Windows.Controls.TreeView.SelectedValuePathProperty">
            <summary>
            Identifies the SelectedValuePath dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeView.OnSelectedValuePathPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedValuePathProperty property changed handler.
            </summary>
            <param name="d">TreeView that changed its SelectedValuePath.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Microsoft.Windows.Controls.TreeView.ItemContainerStyleProperty">
            <summary>
            Identifies the ItemContainerStyle dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeView.OnItemContainerStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ItemContainerStyleProperty property changed handler.
            </summary>
            <param name="d">
            TreeView that changed its ItemContainerStyle.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeView.#ctor">
            <summary>
            Initializes a new instance of the TreeView class.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeView.OnCreateAutomationPeer">
            <summary>
            Returns a TreeViewAutomationPeer for use by the Silverlight
            automation infrastructure.
            </summary>
            <returns>
            A TreeViewAutomationPeer for the TreeView control.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeView.OnApplyTemplate">
            <summary>
            Builds the visual tree for the TreeView control when a new control
            template is applied.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeView.GetContainerForItemOverride">
            <summary>
            Creates a TreeViewItem to use to display content.
            </summary>
            <returns>
            A new TreeViewItem to use as a container for content.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeView.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines whether the specified item is its own container or can be
            its own container.
            </summary>
            <param name="item">The object to evaluate.</param>
            <returns>
            A value indicating whether the item is a TreeViewItem or not.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeView.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified container to display the specified item.
            </summary>
            <param name="element">
            Container element used to display the specified item.
            </param>
            <param name="item">Specified item to display.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeView.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Undoes the effects of PrepareContainerForItemOverride.
            </summary>
            <param name="element">The container element.</param>
            <param name="item">The contained item.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeView.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Provides class handling for an ItemsChanged event that occurs when
            there is a change in the Items collection.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeView.CheckForSelectedDescendents(System.Collections.Generic.Stack{Microsoft.Windows.Controls.TreeViewItem})">
            <summary>
            Select any descendents when adding TreeViewItems to a TreeView.
            </summary>
            <param name="items">The added items.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeView.GetGenerator(System.Windows.Controls.ItemsControl)">
            <summary>
            Get the ItemContainerGenerator for a TreeView or TreeViewItem.
            </summary>
            <param name="control">TreeView or TreeViewItem.</param>
            <returns>
            The ItemContainerGenerator for a TreeView or TreeViewItem.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeView.PropagateKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Propagate OnKeyDown messages from the root TreeViewItems to their
            TreeView.
            </summary>
            <param name="e">Event arguments.</param>
            <remarks>
            Because Silverlight's ScrollViewer swallows many useful key events
            (which it can ignore on WPF if you override HandlesScrolling or use
            an internal only variable in Silverlight), the root TreeViewItems
            explicitly propagate KeyDown events to their parent TreeView.
            </remarks>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeView.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the KeyDown event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeView.HandleScrollKeys(System.Windows.Input.Key)">
            <summary>
            Handle keys related to scrolling.
            </summary>
            <param name="key">The key to handle.</param>
            <returns>A value indicating whether the key was handled.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeView.HandleScrollByPage(System.Boolean)">
            <summary>
            Handle scrolling a page up or down.
            </summary>
            <param name="up">
            A value indicating whether the page should be scrolled up.
            </param>
            <returns>
            A value indicating whether the scroll was handled.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeView.OnSelectedItemChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
            <summary>
            Raises the SelectedItemChanged event when the SelectedItem property
            value changes.
            </summary>
            <param name="e">
            Provides the item that was previously selected and the item that is
            currently selected for the SelectedItemChanged event.
            </param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeView.ChangeSelection(System.Object,Microsoft.Windows.Controls.TreeViewItem,System.Boolean)">
            <summary>
            Change whether a TreeViewItem is selected.
            </summary>
            <param name="itemOrContainer">
            Item whose selection is changing.
            </param>
            <param name="container">
            Container of the item whose selection is changing.
            </param>
            <param name="selected">
            A value indicating whether the TreeViewItem is selected.
            </param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeView.UpdateSelectedValue(System.Object)">
            <summary>
            Update the selected value of the of the TreeView based on the value
            of the currently selected TreeViewItem and the SelectedValuePath.
            </summary>
            <param name="item">
            Value of the currently selected TreeViewItem.
            </param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeView.SelectFirstItem">
            <summary>
            Select the first item of the TreeView.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeView.FocusFirstItem">
            <summary>
            Focus the first item in the TreeView.
            </summary>
            <returns>A value indicating whether the item was focused.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeView.FocusLastItem">
            <summary>
            Focus the last item in the TreeView.
            </summary>
            <returns>A value indicating whether the item was focused.</returns>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeView.SelectedItem">
            <summary>
            Gets the selected item in a TreeView.
            </summary>
            <remarks>
            The default value is null.
            </remarks>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeView.SelectedValue">
            <summary>
            Gets the object that is at the specified SelectedValuePath of the
            SelectedItem.
            </summary>
            <remarks>
            The default value is null.
            </remarks>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeView.SelectedValuePath">
            <summary>
            Gets or sets the path that is used to get the SelectedValue of the
            SelectedItem in a TreeView.
            </summary>
            <remarks>
            The default value is String.Empty.
            </remarks>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeView.ItemContainerStyle">
            <summary>
            Gets or sets the Style that is applied to the container element
            generated for each item.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeView.SelectedContainer">
            <summary>
            Gets the currently selected TreeViewItem container.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeView.IsSelectedContainerHookedUp">
            <summary>
            Gets a value indicating whether the currently selected TreeViewItem
            container is properly hooked up to the TreeView.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeView.IsSelectionChangeActive">
            <summary>
            Gets or sets a value indicating whether the selected item is
            currently being changed.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeView.ItemContainerGenerator">
            <summary>
            Gets the ItemContainerGenerator that is associated with this
            control.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeView.IsControlKeyDown">
            <summary>
            Gets a value indicating whether the Control key is currently
            pressed.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeView.IsShiftKeyDown">
            <summary>
            Gets a value indicating whether the Shift key is currently pressed.
            </summary>
        </member>
        <member name="E:Microsoft.Windows.Controls.TreeView.SelectedItemChanged">
            <summary>
            Occurs when the SelectedItem changes.
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Controls.ExpandDirection">
            <summary>
            Specifies the direction in which an Expander control opens.
            </summary>
            <QualityBand>Preview</QualityBand>
            <remarks>
            To specify the direction that an Expander control expands, 
            set the ExpandDirection property to one of the enumeration members.
            </remarks>
        </member>
        <member name="F:Microsoft.Windows.Controls.ExpandDirection.Down">
            <summary>
            Expander will expand to the down direction.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.ExpandDirection.Up">
            <summary>
            Expander will expand to the up direction.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.ExpandDirection.Left">
            <summary>
            Expander will expand to the left direction.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.ExpandDirection.Right">
            <summary>
            Expander will expand to the right direction.
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Controls.LengthConverter">
            <summary>
            Converts instances of other types to and from instances of a Double that
            represent an object's length.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:Microsoft.Windows.Controls.LengthConverter.UnitToPixelConversions">
            <summary>
            Conversions from units to pixels.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.LengthConverter.#ctor">
            <summary>
            Initializes a new instance of the LengthConverter class.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.LengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether conversion is possible from a specified type to a
            Double that represents an object's length.
            </summary>
            <param name="typeDescriptorContext">
            The type descriptor context.
            </param>
            <param name="sourceType">
            Identifies the data type to evaluate for conversion.
            </param>
            <returns>true if conversion is possible; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.LengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts instances of other data types into instances of Double that
            represent an object's length.
            </summary>
            <param name="typeDescriptorContext">
            The type descriptor context.
            </param>
            <param name="cultureInfo">The culture used to convert.</param>
            <param name="source">
            The value that is being converted to Double representing the
            object's length.
            </param>
            <returns>
            An instance of Double that is the value of the conversion.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.LengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether conversion is possible to a specified type from a
            Double that represents an object's length.
            </summary>
            <param name="typeDescriptorContext">
            The type descriptor context.
            </param>
            <param name="destinationType">
            Identifies the data type to evaluate for conversion.
            </param>
            <returns>
            A value indicating whether the conversion is possible.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.LengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts other types into instances of Double that represent an
            object's length.
            </summary>
            <param name="typeDescriptorContext">
            The type descriptor context.
            </param>
            <param name="cultureInfo">The culture used to convert.</param>
            <param name="value">
            The value that is being converted to a specified type.
            </param>
            <param name="destinationType">
            The type to convert the value to.
            </param>
            <returns>
            The value of the conversion to the specified type.
            </returns>
        </member>
        <member name="T:Microsoft.Windows.Controls.DockPanel">
            <summary>
            Defines an area where you can arrange child elements either horizontally
            or vertically, relative to each other.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:Microsoft.Windows.Controls.DockPanel._ignorePropertyChange">
            <summary>
            A value indicating whether a dependency property change handler
            should ignore the next change notification.  This is used to reset
            the value of properties without performing any of the actions in
            their change handlers.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.DockPanel.LastChildFillProperty">
            <summary>
            Identifies the LastChildFill dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.DockPanel.OnLastChildFillPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            LastChildFillProperty property changed handler.
            </summary>
            <param name="d">DockPanel that changed its LastChildFill.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.DockPanel.GetDock(System.Windows.UIElement)">
            <summary>
            Gets the value of the Dock attached property for a specified
            UIElement.
            </summary>
            <param name="element">
            The element from which the property value is read.
            </param>
            <returns>The Dock property value for the element.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.DockPanel.SetDock(System.Windows.UIElement,Microsoft.Windows.Controls.Dock)">
            <summary>
            Sets the value of the Dock attached property to a specified element.
            </summary>
            <param name="element">
            The element to which the attached property is written.
            </param>
            <param name="dock">The needed Dock value.</param>
        </member>
        <member name="F:Microsoft.Windows.Controls.DockPanel.DockProperty">
            <summary>
            Identifies the Dock dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.DockPanel.OnDockPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DockProperty property changed handler.
            </summary>
            <param name="d">UIElement that changed its Dock.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.DockPanel.#ctor">
            <summary>
            Initializes a new instance of the DockPanel class.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.DockPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the children of a DockPanel in anticipation of arranging
            them during the ArrangeOverride pass.
            </summary>
            <param name="constraint">A maximum Size to not exceed.</param>
            <returns>The desired size of the DockPanel.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.DockPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content (child elements) of a DockPanel element.
            </summary>
            <param name="arrangeSize">
            The Size the DockPanel uses to arrange its child elements.
            </param>
            <returns>The arranged size of the DockPanel.</returns>
        </member>
        <member name="P:Microsoft.Windows.Controls.DockPanel.LastChildFill">
            <summary>
            Gets or sets a value indicating whether the last child element
            within a DockPanel stretches to fill the remaining available space.
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Controls.AutoCompleteSearch">
            <summary>
            A predefined set of filter functions for the known, built-in 
            AutoCompleteSearchMode enumeration values.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteSearch.GetFilter(Microsoft.Windows.Controls.AutoCompleteSearchMode)">
            <summary>
            Index function that retrieves the filter for the provided 
            AutoCompleteSearchMode.
            </summary>
            <param name="searchMode">The built-in search mode.</param>
            <returns>Returns the string-based comparison function.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteSearch.StartsWith(System.String,System.String)">
            <summary>
            Check if the string value begins with the text.
            </summary>
            <param name="text">The AutoCompleteBox prefix text.</param>
            <param name="value">The item's string value.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteSearch.StartsWithCaseSensitive(System.String,System.String)">
            <summary>
            Check if the string value begins with the text.
            </summary>
            <param name="text">The AutoCompleteBox prefix text.</param>
            <param name="value">The item's string value.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteSearch.Contains(System.String,System.String)">
            <summary>
            Check if the prefix is contained in the string value.
            </summary>
            <param name="text">The AutoCompleteBox prefix text.</param>
            <param name="value">The item's string value.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteSearch.ContainsCaseSensitive(System.String,System.String)">
            <summary>
            Check if the prefix is contained in the string value.
            </summary>
            <param name="text">The AutoCompleteBox prefix text.</param>
            <param name="value">The item's string value.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteSearch.Equals(System.String,System.String)">
            <summary>
            Check if the string values are equal.
            </summary>
            <param name="text">The AutoCompleteBox prefix text.</param>
            <param name="value">The item's string value.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteSearch.EqualsCaseSensitive(System.String,System.String)">
            <summary>
            Check if the string values are equal.
            </summary>
            <param name="text">The AutoCompleteBox prefix text.</param>
            <param name="value">The item's string value.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="T:Microsoft.Windows.Controls.ObjectCollection">
            <summary>
            Implements a collection of objects.
            </summary>
            <remarks>
            ObjectCollection is intended to simplify the task of populating an
            ItemsSource property in XAML.
            </remarks>
            <example>
            <code language="XAML">
            <![CDATA[
            <ItemsControl.ItemsSource>
                <controls:ObjectCollection>
                    <TextBlock Text="Object 1" />
                    <TextBlock Text="Object 2" />
                </controls:ObjectCollection>
            </ItemsControl.ItemsSource>
            ]]>
            </code>
            </example>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:Microsoft.Windows.Controls.ObjectCollection.#ctor">
            <summary>
            Initializes a new instance of the ObjectCollection class.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.ObjectCollection.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the ObjectCollection class.
            </summary>
            <param name="collection">The collection whose elements are copied to the new ObjectCollection.</param>
        </member>
        <member name="T:Microsoft.Windows.Controls.ItemContainerGenerator">
            <summary>
            The ItemContainerGenerator provides useful utilities for mapping between
            the items of an ItemsControl and their generated containers.
            </summary>
            <remarks>
            WPF actually uses the ItemContainerGenerator to create all of the
            containers used by an ItemsControl.  The container generation in
            Silverlight happens in the native implementation of ItemsControl, so
            this ItemContainerGenerator serves only to expose the mapping between
            items and containers in a subset of the WPF API.
            </remarks>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:Microsoft.Windows.Controls.ItemContainerGenerator._itemsHost">
            <summary>
            A Panel that is used as the ItemsHost of the ItemsControl.  This
            property will only be valid when the ItemsControl is live in the
            tree and has generated containers for some of its items.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.ItemContainerGenerator._scrollHost">
            <summary>
            A ScrollViewer that is used to scroll the items in the ItemsHost.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.ItemContainerGenerator.#ctor(System.Windows.Controls.ItemsControl)">
            <summary>
            Initializes a new instance of the ItemContainerGenerator.
            </summary>
            <param name="control">
            The ItemsControl being tracked by the ItemContainerGenerator.
            </param>
        </member>
        <member name="M:Microsoft.Windows.Controls.ItemContainerGenerator.OnApplyTemplate">
            <summary>
            Apply a control template to the ItemsControl.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.ItemContainerGenerator.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object,System.Windows.Style)">
            <summary>
            Prepares the specified container to display the specified item.
            </summary>
            <param name="element">
            Container element used to display the specified item.
            </param>
            <param name="item">Specified item to display.</param>
            <param name="parentItemContainerStyle">
            The ItemContainerStyle for the parent ItemsControl.
            </param>
        </member>
        <member name="M:Microsoft.Windows.Controls.ItemContainerGenerator.HasDefaultValue(System.Windows.Controls.Control,System.Windows.DependencyProperty)">
            <summary>
            Check whether a control has the default value for a property.
            </summary>
            <param name="control">The control to check.</param>
            <param name="property">The property to check.</param>
            <returns>
            True if the property has the default value; false otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.ItemContainerGenerator.PrepareHeaderedItemsControlContainer(Microsoft.Windows.Controls.HeaderedItemsControl,System.Object,System.Windows.Controls.ItemsControl,System.Windows.Style)">
            <summary>
            Prepare a PrepareHeaderedItemsControlContainer container for an
            item.
            </summary>
            <param name="control">Container to prepare.</param>
            <param name="item">Item to be placed in the container.</param>
            <param name="parentItemsControl">The parent ItemsControl.</param>
            <param name="parentItemContainerStyle">
            The ItemContainerStyle for the parent ItemsControl.
            </param>
        </member>
        <member name="M:Microsoft.Windows.Controls.ItemContainerGenerator.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Undoes the effects of PrepareContainerForItemOverride.
            </summary>
            <param name="element">The container element.</param>
            <param name="item">The contained item.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.ItemContainerGenerator.UpdateItemContainerStyle(System.Windows.Style)">
            <summary>
            Update the style of any generated items when the ItemContainerStyle
            has been changed.
            </summary>
            <param name="itemContainerStyle">The ItemContainerStyle.</param>
            <remarks>
            Silverlight does not support setting a Style multiple times, so we
            only attempt to set styles on elements whose style hasn't already
            been set.
            </remarks>
        </member>
        <member name="M:Microsoft.Windows.Controls.ItemContainerGenerator.ContainerFromIndex(System.Int32)">
            <summary>
            Returns the element corresponding to the item at the given index
            within the ItemCollection.
            </summary>
            <param name="index">The index of the desired item.</param>
            <returns>
            Returns the element corresponding to the item at the given index
            within the ItemCollection or returns null if the item is not
            realized.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.ItemContainerGenerator.ContainerFromItem(System.Object)">
            <summary>
            Returns the container corresponding to the given item.
            </summary>
            <param name="item">The item to find the container for.</param>
            <returns>
            A container that corresponds to the given item.  Returns null if the
            item does not belong to the item collection, or if a container has
            not been generated for it.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.ItemContainerGenerator.IndexFromContainer(System.Windows.DependencyObject)">
            <summary>
            Returns the index to an item that corresponds to the specified,
            generated container. 
            </summary>
            <param name="container">
            The DependencyObject that corresponds to the item to the index to be
            returned.
            </param>
            <returns>
            An Int32 index to an item that corresponds to the specified,
            generated container.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.ItemContainerGenerator.ItemFromContainer(System.Windows.DependencyObject)">
            <summary>
            Returns the item that corresponds to the specified, generated
            container.
            </summary>
            <param name="container">
            The DependencyObject that corresponds to the item to be returned.
            </param>
            <returns>
            The contained item, or the container if it had no associated item.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.ItemContainerGenerator.ScrollIntoView(System.Windows.FrameworkElement)">
            <summary>
            Scroll the desired element into the ScrollHost's viewport.
            </summary>
            <param name="element">Element to scroll into view.</param>
        </member>
        <member name="P:Microsoft.Windows.Controls.ItemContainerGenerator.ItemsControl">
            <summary>
            Gets or sets the ItemsControl being tracked by the
            ItemContainerGenerator.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.ItemContainerGenerator.ContainersToItems">
            <summary>
            Gets or sets a dictionary that maps containers to the items they
            display.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.ItemContainerGenerator.ItemsHost">
            <summary>
            Gets a Panel that is used as the ItemsHost of the ItemsControl.
            This property will only be valid when the ItemsControl is live in
            the tree and has generated containers for some of its items.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.ItemContainerGenerator.ScrollHost">
            <summary>
            Gets a ScrollViewer that is used to scroll the items in the
            ItemsHost.
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Controls.PopulatingEventArgs">
            <summary>
            Provides data for the AutoCompleteBox Populating event.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:Microsoft.Windows.Controls.PopulatingEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PopulatingEventArgs.
            </summary>
            <param name="parameter">The population parameter, provided to 
            observers to be used in filtering suggestions.</param>
        </member>
        <member name="P:Microsoft.Windows.Controls.PopulatingEventArgs.Parameter">
            <summary>
            Gets the value of the text parameter used to determine suggestions.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.PopulatingEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the changing event should 
            be canceled.
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Controls.PopulatedEventHandler">
            <summary>
            Represents methods that use the PopulatedEventArgs.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event arguments.</param>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="T:Microsoft.Windows.Controls.ScrollExtensions">
            <summary>
            The ScrollExtensions class provides utility methods for scrolling items
            ScrollViewers.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.ScrollExtensions.LineChange">
            <summary>
            The amount to scroll a ScrollViewer for a line change.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.ScrollExtensions.ScrollByVerticalOffset(System.Windows.Controls.ScrollViewer,System.Double)">
            <summary>
            Scroll a ScrollViewer vertically by a given offset.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="offset">The vertical offset to scroll.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.ScrollExtensions.ScrollByHorizontalOffset(System.Windows.Controls.ScrollViewer,System.Double)">
            <summary>
            Scroll a ScrollViewer horizontally by a given offset.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="offset">The horizontal offset to scroll.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.ScrollExtensions.LineUp(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer up by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.ScrollExtensions.LineDown(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer down by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.ScrollExtensions.LineLeft(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer left by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.ScrollExtensions.LineRight(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer right by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.ScrollExtensions.PageUp(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer up by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.ScrollExtensions.PageDown(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer down by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.ScrollExtensions.PageLeft(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer left by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.ScrollExtensions.PageRight(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer right by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.ScrollExtensions.ScrollToTop(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer to the top.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.ScrollExtensions.ScrollToBottom(System.Windows.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer to the bottom.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.ScrollExtensions.GetTopAndBottom(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.Double@,System.Double@)">
            <summary>
            Get the top and bottom of an element with respect to its parent.
            </summary>
            <param name="element">The element to get the position of.</param>
            <param name="parent">The parent of the element.</param>
            <param name="top">Vertical offset to the top of the element.</param>
            <param name="bottom">
            Vertical offset to the bottom of the element.
            </param>
        </member>
        <member name="M:Microsoft.Windows.Controls.ScrollExtensions.GetTopAndBottom(Microsoft.Windows.Controls.TreeViewItem,System.Windows.FrameworkElement,System.Double@,System.Double@)">
            <summary>
            Get the top and bottom of a TreeViewItem with respect to its parent.
            </summary>
            <param name="item">The item to get the position of.</param>
            <param name="parent">The parent of the item.</param>
            <param name="top">Vertical offset to the top of the item.</param>
            <param name="bottom">
            Vertical offset to the bottom of the item.
            </param>
        </member>
        <member name="T:Microsoft.Windows.Controls.VisualStates">
            <summary>
            Names and helpers for visual states in the controls.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.GroupCommon">
            <summary>
            Common state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.StateNormal">
            <summary>
            Normal state of the Common state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.StateMouseOver">
            <summary>
            MouseOver state of the Common state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.StatePressed">
            <summary>
            Pressed state of the Common state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.StateDisabled">
            <summary>
            Disabled state of the Common state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.GroupFocus">
            <summary>
            Focus state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.StateUnfocused">
            <summary>
            Unfocused state of the Focus state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.StateFocused">
            <summary>
            Focused state of the Focus state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.GroupSelection">
            <summary>
            Selection state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.StateSelected">
            <summary>
            Selected state of the Selection state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.StateUnselected">
            <summary>
            Unselected state of the Selection state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.StateSelectedInactive">
            <summary>
            Selected inactive state of the Selection state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.GroupExpansion">
            <summary>
            Expansion state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.StateExpanded">
            <summary>
            Expanded state of the Expansion state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.StateCollapsed">
            <summary>
            Collapsed state of the Expansion state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.GroupPopup">
            <summary>
            Popup state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.StatePopupOpened">
            <summary>
            Opened state of the Popup state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.StatePopupClosed">
            <summary>
            Closed state of the Popup state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.GroupExpandDirection">
            <summary>
            ExpandDirection state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.StateExpandDown">
            <summary>
            Down expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.StateExpandUp">
            <summary>
            Up expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.StateExpandLeft">
            <summary>
            Left expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.StateExpandRight">
            <summary>
            Right expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.GroupHasItems">
            <summary>
            HasItems state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.StateHasItems">
            <summary>
            HasItems state of the HasItems state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.VisualStates.StateNoItems">
            <summary>
            NoItems state of the HasItems state group.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.VisualStates.GoToState(System.Windows.Controls.Control,System.Boolean,System.String[])">
            <summary>
            Use VisualStateManager to change the visual state of the control.
            </summary>
            <param name="control">
            Control whose visual state is being changed.
            </param>
            <param name="useTransitions">
            A value indicating whether to use transitions when updating the
            visual state, or to snap directly to the new visual state.
            </param>
            <param name="stateNames">
            Ordered list of state names and fallback states to transition into.
            Only the first state to be found will be used.
            </param>
        </member>
        <member name="M:Microsoft.Windows.Controls.VisualStates.GetImplementationRoot(System.Windows.DependencyObject)">
            <summary>
            Gets the implementation root of the Control.
            </summary>
            <param name="dependencyObject">The DependencyObject.</param>
            <remarks>
            Implements Silverlight's corresponding internal property on Control.
            </remarks>
            <returns>Returns the implementation root or null.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.VisualStates.TryGetVisualStateGroup(System.Windows.DependencyObject,System.String)">
            <summary>
            This method tries to get the named VisualStateGroup for the 
            dependency object. The provided object's ImplementationRoot will be 
            looked up in this call.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <param name="groupName">The visual state group's name.</param>
            <returns>Returns null or the VisualStateGroup object.</returns>
        </member>
        <member name="T:Microsoft.Windows.Controls.RoutedPropertyChangingEventHandler`1">
            <summary>
            Represents methods that handle various routed events that track property
            values changing.
            </summary>
            <typeparam name="T">
            The type of the dependency property that is changing.
            </typeparam>
            <param name="sender">
            The object where the event handler is attached.
            </param>
            <param name="e">The event arguments.</param>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="T:Microsoft.Windows.Controls.RoutedPropertyChangingEventArgs`1">
            <summary>
            Arguments for RoutedPropertyChangingEvent.
            It allows event handlers to cancel the event by setting Cancel property to true.
            It allows event thrower to decide whether the event can be canceled by setting IsCancelable.
            </summary>
            <typeparam name="T">Type of the dependency property to be changed.</typeparam>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:Microsoft.Windows.Controls.RoutedPropertyChangingEventArgs`1._cancel">
            <summary>
            Private member variable for Cancel property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.RoutedPropertyChangingEventArgs`1.#ctor(System.Windows.DependencyProperty,`0,`0,System.Boolean)">
            <summary>
            Initializes a new instance of the RoutedPropertyChangingEventArgs.
            </summary>
            <param name="property">The dependency property whose value is changing.</param>
            <param name="oldValue">Old value of the property.</param>
            <param name="newValue">New value of the property.</param>
            <param name="isCancelable">A valid indicating whether the event is cancelable.</param>
        </member>
        <member name="P:Microsoft.Windows.Controls.RoutedPropertyChangingEventArgs`1.Property">
            <summary>
            Gets the DependencyProperty whose value is changing.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.RoutedPropertyChangingEventArgs`1.OldValue">
            <summary>
            Gets old value of the property.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.RoutedPropertyChangingEventArgs`1.NewValue">
            <summary>
            Gets or sets new value of the property.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.RoutedPropertyChangingEventArgs`1.IsCancelable">
            <summary>
            Gets a value indicating whether the changing event can be canceled. 
            When this is false, setting Cancel to true will cause an InvalidOperationException.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.RoutedPropertyChangingEventArgs`1.Cancel">
            <summary>
            Gets or sets a value indicating whether the changing event should be canceled. 
            If IsCancelable is false, setting this value to true will cause an InvalidOperationException.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.RoutedPropertyChangingEventArgs`1.InCoercion">
            <summary>
            Gets or sets a value indicating whether we are in the middle of Value coercion.
            </summary>
            <remarks>
            This is a total hack to work around the class hierarchy for Value coercion in NumericUpDown.
            </remarks>
        </member>
        <member name="T:Microsoft.Windows.Controls.Extensions">
            <summary>
            This set of internal extension methods provide general solutions and 
            utilities in a small enough number to not warrant a dedicated extension
            methods class.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.Extensions.Invert(System.Windows.Media.Matrix,System.Windows.Media.Matrix@)">
            <summary>
            Inverts a Matrix. The Invert functionality on the Matrix type is 
            internal to the framework only. Since Matrix is a struct, an out 
            parameter must be presented.
            </summary>
            <param name="m">The Matrix object.</param>
            <param name="outputMatrix">The matrix to return by an output 
            parameter.</param>
            <returns>Returns a value indicating whether the type was 
            successfully inverted. If the determinant is 0.0, then it cannot 
            be inverted and the original instance will remain untouched.</returns>
        </member>
        <member name="T:Microsoft.Windows.Controls.AutoCompleteSearchMode">
            <summary>
            Represents the different types of built-in search modes available to 
            the AutoCompleteBox control.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteSearchMode.None">
            <summary>
            No search mode, all elements in a collection will be included in 
            the results. This value would be used for a data source.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteSearchMode.StartsWith">
            <summary>
            Matches the text value to start of the string, a case insensitive 
            ordinal comparison is used.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteSearchMode.StartsWithCaseSensitive">
            <summary>
            Matches the text value to start of the string, an ordinal 
            comparison is used.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteSearchMode.Contains">
            <summary>
            Matches the text value if it is contained inside the string, a case 
            insensitive comparison is used. Uses the current culture value.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteSearchMode.ContainsCaseSensitive">
            <summary>
            Matches the text value if it is contained inside the string. Uses 
            the current culture value.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteSearchMode.Equals">
            <summary>
            Matches that the text if it's value equals the string, an ordinal 
            case insensitive comparison is used.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteSearchMode.EqualsCaseSensitive">
            <summary>
            Matches that the text if it's value equals the string using an 
            ordinal case sensitive comparison operator.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteSearchMode.Custom">
            <summary>
            Custom search mode: setting any of the item or text delegate 
            dependency properties and this value will enable non-standard, 
            custom functions and lambdas to be used.
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Controls.WrapPanel">
            <summary>
            Positions child elements in sequential position from left to right,
            breaking content to the next line at the edge of the containing box.
            Subsequent ordering happens sequentially from top to bottom or from
            right to left, depending on the value of the Orientation property.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:Microsoft.Windows.Controls.WrapPanel._ignorePropertyChange">
            <summary>
            A value indicating whether a dependency property change handler
            should ignore the next change notification.  This is used to reset
            the value of properties without performing any of the actions in
            their change handlers.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.WrapPanel.ItemHeightProperty">
            <summary>
            Identifies the ItemHeight dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.WrapPanel.ItemWidthProperty">
            <summary>
            Identifies the ItemWidth dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.WrapPanel.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.WrapPanel.OnOrientationPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            OrientationProperty property changed handler.
            </summary>
            <param name="d">WrapPanel that changed its Orientation.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.WrapPanel.#ctor">
            <summary>
            Initializes a new instance of the WrapPanel class.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.WrapPanel.OnItemHeightOrWidthPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Property changed handler for ItemHeight and ItemWidth.
            </summary>
            <param name="d">
            WrapPanel that changed its ItemHeight or ItemWidth.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.WrapPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the child elements of a WrapPanel in anticipation of 
            arranging them during the ArrangeOverride pass.
            </summary>
            <param name="constraint">
            An upper limit Size that should not be exceeded.
            </param>
            <returns>
            Desired size of the WrapPanel and its child elements.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content of a WrapPanel element.
            </summary>
            <param name="finalSize">
            The Size that this element should use to arrange its child elements.
            </param>
            <returns>
            The arranged size of this WrapPanel element and its children.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.WrapPanel.ArrangeLine(System.Int32,System.Int32,System.Nullable{System.Double},System.Double,System.Double)">
            <summary>
            Arrange a sequence of elements in a single line.
            </summary>
            <param name="lineStart">
            Index of the first element in the sequence to arrange.
            </param>
            <param name="lineEnd">
            Index of the last element in the sequence to arrange.
            </param>
            <param name="directDelta">
            Optional fixed growth in the primary direction.
            </param>
            <param name="indirectOffset">
            Offset of the line in the indirect direction.
            </param>
            <param name="indirectGrowth">
            Shared indirect growth of the elements on this line.
            </param>
        </member>
        <member name="P:Microsoft.Windows.Controls.WrapPanel.ItemHeight">
            <summary>
            Gets or sets the Double that represents the uniform height of all
            items that are contained within the WrapPanel.  
            </summary>
            <remarks>
            The default value is NaN.
            </remarks>
        </member>
        <member name="P:Microsoft.Windows.Controls.WrapPanel.ItemWidth">
            <summary>
            Gets or sets a Double that represents the uniform width of all items
            that are contained within the WrapPanel.  
            </summary>
            <remarks>
            The default value is NaN.
            </remarks>
        </member>
        <member name="P:Microsoft.Windows.Controls.WrapPanel.Orientation">
            <summary>
            Gets or sets a value that specifies the dimension in which 
            child content is arranged.
            </summary>
            <remarks>
            The default value is Horizontal.
            </remarks>
        </member>
        <member name="T:Microsoft.Windows.Controls.TreeViewItem">
            <summary>
            Implements a selectable item in a TreeView control.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="T:Microsoft.Windows.Controls.HeaderedItemsControl">
            <summary>
            Represents a control that contains multiple items and have a header.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:Microsoft.Windows.Controls.HeaderedItemsControl.HeaderProperty">
            <summary>
            Identifies the Header dependency property.
            </summary>
            <remarks>
            Note: WPF defines this property via a call to AddOwner of
            HeaderedContentControl's HeaderProperty.
            </remarks>
        </member>
        <member name="M:Microsoft.Windows.Controls.HeaderedItemsControl.OnHeaderPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HeaderProperty property changed handler.
            </summary>
            <param name="d">
            HeaderedItemsControl that changed its Header.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Microsoft.Windows.Controls.HeaderedItemsControl.HeaderTemplateProperty">
            <summary>
            Identifies the HeaderTemplate dependency property.
            </summary>
            <remarks>
            Note: WPF defines this property via a call to AddOwner of
            HeaderedContentControl's HeaderTemplateProperty.
            </remarks>
        </member>
        <member name="M:Microsoft.Windows.Controls.HeaderedItemsControl.OnHeaderTemplatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HeaderTemplateProperty property changed handler.
            </summary>
            <param name="d">
            HeaderedItemsControl that changed its HeaderTemplate.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Microsoft.Windows.Controls.HeaderedItemsControl.ItemContainerStyleProperty">
            <summary>
            Identifies the ItemContainerStyle dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.HeaderedItemsControl.OnItemContainerStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ItemContainerStyleProperty property changed handler.
            </summary>
            <param name="d">
            HeaderedItemsControl that changed its ItemContainerStyle.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.HeaderedItemsControl.#ctor">
            <summary>
            Initializes a new instance of the HeaderedItemsControl class.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.HeaderedItemsControl.OnHeaderChanged(System.Object,System.Object)">
            <summary>
            Called when the Header property of a HeaderedItemsControl changes.
            </summary>
            <param name="oldHeader">
            The old value of the Header property.
            </param>
            <param name="newHeader">
            The new value of the Header property.
            </param>
        </member>
        <member name="M:Microsoft.Windows.Controls.HeaderedItemsControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
            <summary>
            Called when the HeaderTemplate property changes.
            </summary>
            <param name="oldHeaderTemplate">
            The old value of the HeaderTemplate property.
            </param>
            <param name="newHeaderTemplate">
            The new value of the HeaderTemplate property.
            </param>
        </member>
        <member name="M:Microsoft.Windows.Controls.HeaderedItemsControl.OnApplyTemplate">
            <summary>
            Apply a control template to the control.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.HeaderedItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified container to display the specified item.
            </summary>
            <param name="element">
            Container element used to display the specified item.
            </param>
            <param name="item">Specified item to display.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.HeaderedItemsControl.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Undoes the effects of PrepareContainerForItemOverride.
            </summary>
            <param name="element">The container element.</param>
            <param name="item">The contained item.</param>
        </member>
        <member name="P:Microsoft.Windows.Controls.HeaderedItemsControl.HeaderIsItem">
            <summary>
            Gets or sets a value indicating whether the Header property has been
            set to the item of an ItemsControl.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.HeaderedItemsControl.Header">
            <summary>
            Gets or sets an object that labels the HeaderedItemsControl.  The
            default value is null.  The header can be a string, UIElement, or
            any other content.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.HeaderedItemsControl.HeaderTemplate">
            <summary>
            Gets or sets a data template used to display a control's header. The
            default is null.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.HeaderedItemsControl.ItemContainerStyle">
            <summary>
            Gets or sets the Style that is applied to the container element
            generated for each item.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.HeaderedItemsControl.ItemContainerGenerator">
            <summary>
            Gets the ItemContainerGenerator that is associated with this
            control.
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Controls.IUpdateVisualState">
            <summary>
            The IUpdateVisualState interface is used to provide the
            InteractionHelper with access to the type's UpdateVisualState method.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.IUpdateVisualState.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="F:Microsoft.Windows.Controls.TreeViewItem.ExpanderButtonName">
            <summary>
            The name of the ExpanderButton template part.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.TreeViewItem.HeaderName">
            <summary>
            The name of the Header template part.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.TreeViewItem._expanderButton">
            <summary>
            The ExpanderButton template part is used to expand and collapse the
            TreeViewItem.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.TreeViewItem._headerElement">
            <summary>
            The Header template part is used to distinguish the bound Header
            content of the TreeViewItem.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.TreeViewItem._expansionStateGroup">
            <summary>
            The ExpansionStates visual state group.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.TreeViewItem._allowWrite">
            <summary>
            A value indicating whether a read-only dependency property change
            handler should allow the value to be set.  This is used to ensure
            that read-only properties cannot be changed via SetValue, etc.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.TreeViewItem.HasItemsProperty">
            <summary>
            Identifies the HasItems dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.OnHasItemsPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HasItemsProperty property changed handler.
            </summary>
            <param name="d">TreeViewItem that changed its HasItems.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Microsoft.Windows.Controls.TreeViewItem.IsExpandedProperty">
            <summary>
            Identifies the IsExpanded dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.OnIsExpandedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsExpandedProperty property changed handler.
            </summary>
            <param name="d">TreeViewItem that changed its IsExpanded.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Microsoft.Windows.Controls.TreeViewItem.IsSelectedProperty">
            <summary>
            Identifies the IsSelected dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.OnIsSelectedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsSelectedProperty property changed handler.
            </summary>
            <param name="d">TreeViewItem that changed its IsSelected.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Microsoft.Windows.Controls.TreeViewItem.IsSelectionActiveProperty">
            <summary>
            Identifies the IsSelectionActive dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.OnIsSelectionActivePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsSelectionActiveProperty property changed handler.
            </summary>
            <param name="d">TreeViewItem that changed its IsSelectionActive.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Microsoft.Windows.Controls.TreeViewItem._parentItemsControl">
            <summary>
            A reference to the parent ItemsControl of a TreeViewItem.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.#ctor">
            <summary>
            Initializes a new instance of the TreeViewItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.OnCreateAutomationPeer">
            <summary>
            Returns a TreeViewItemAutomationPeer for use by the Silverlight
            automation infrastructure.
            </summary>
            <returns>
            A TreeViewItemAutomationPeer object for the TreeViewItem.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.OnApplyTemplate">
            <summary>
            Builds the visual tree for the TreeViewItem control when a new
            control template is applied.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.OnExpansionStateGroupStateChanged(System.Object,System.Windows.VisualStateChangedEventArgs)">
            <summary>
            Provides handling for the ExpansionStates CurrentChanged event.
            </summary>
            <param name="sender">The ExpansionState VisualStateGroup.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.Microsoft#Windows#Controls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.GetContainerForItemOverride">
            <summary>
            Creates a new TreeViewItem to use to display the object.
            </summary>
            <returns>A new TreeViewItem.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines whether an object is a TreeViewItem.
            </summary>
            <param name="item">The object to evaluate.</param>
            <returns>true if item is a TreeViewItem; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">
            Element used to display the specified item.
            </param>
            <param name="item">Specified item.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Undoes the effects of PrepareContainerForItemOverride.
            </summary>
            <param name="element">The container element.</param>
            <param name="item">The contained item.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Provides handling for the ItemsChanged event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.RaiseEvent(System.Windows.RoutedEventHandler,System.Windows.RoutedEventArgs)">
            <summary>
            Raise a RoutedEvent.
            </summary>
            <param name="handler">Event handler.</param>
            <param name="args">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.OnExpanded(System.Windows.RoutedEventArgs)">
            <summary>
            Raises an Expanded event when the IsExpanded property changes from
            false to true.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.OnCollapsed(System.Windows.RoutedEventArgs)">
            <summary>
            Raises a Collapsed event when the IsExpanded property changes from
            true to false.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.ToggleExpanded(System.Windows.RoutedEventHandler,System.Windows.RoutedEventArgs)">
            <summary>
            Handle changes to the IsExpanded property.
            </summary>
            <param name="handler">Event handler.</param>
            <param name="args">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.OnSelected(System.Windows.RoutedEventArgs)">
            <summary>
            Raises the Selected event when the IsSelected property changes from
            false to true.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.OnUnselected(System.Windows.RoutedEventArgs)">
            <summary>
            Raises the Unselected event when the IsSelected property changes
            from true to false.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the GotFocus event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the LostFocus event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.OnExpanderGotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the ExpanderButton's GotFocus event.
            </summary>
            <param name="sender">The ExpanderButton.</param>
            <param name="e">Event Arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseEnter event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseLeave event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.OnHeaderMouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the Header's MouseLeftButtonDown event.
            </summary>
            <param name="sender">The Header template part.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.OnExpanderClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the ExpanderButton's Click event.
            </summary>
            <param name="sender">The ExpanderButton.</param>
            <param name="e">Event Arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the MouseLeftButtonUp event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the KeyDown event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.HandleDownKey">
            <summary>
            Try moving the focus down from the selected item.
            </summary>
            <returns>
            A value indicating whether the focus was successfully moved.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the KeyUp event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.HandleUpKey">
            <summary>
            Try moving the focus up from the selected item.
            </summary>
            <returns>
            A value indicating whether the focus was successfully moved.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.HandleScrollByPage(System.Boolean,System.Windows.Controls.ScrollViewer,System.Double,System.Double,System.Double,System.Double@)">
            <summary>
            Handle scrolling a page up or down.
            </summary>
            <param name="up">
            A value indicating whether the page should be scrolled up.
            </param>
            <param name="scrollHost">The ScrollViewer being scrolled.</param>
            <param name="viewportHeight">The height of the viewport.</param>
            <param name="top">The top of item to start from.</param>
            <param name="bottom">The bottom of the item to start from.</param>
            <param name="currentDelta">The height of this item.</param>
            <returns>
            A value indicating whether the scroll was handled.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.CalculateDelta(System.Boolean,System.Windows.FrameworkElement,System.Windows.Controls.ScrollViewer,System.Double,System.Double,System.Double@)">
            <summary>
            Calculate the distance between this TreeViewItem and the item being
            paged from.
            </summary>
            <param name="up">
            A value indicating whether the page should be scrolled up.
            </param>
            <param name="element">The element being paged from.</param>
            <param name="scrollHost">The ScrollViewer being scrolled.</param>
            <param name="top">The top of item to start from.</param>
            <param name="bottom">The bottom of the item to start from.</param>
            <param name="closeEdge">
            The distance between the top/bottom of one item to the other.
            </param>
            <returns>
            A value indicating whether the scroll was handled.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.Select(System.Boolean)">
            <summary>
            Change the selected status of the TreeViewItem.
            </summary>
            <param name="selected">
            A value indicating whether the TreeViewItem is selected.
            </param>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.UpdateContainsSelection(System.Boolean)">
            <summary>
            Update the ancestors of this item when it changes selection.
            </summary>
            <param name="selected">
            A value indicating whether the item is selected.
            </param>
            <remarks>
            Unselection updates need to occur before selection updates because
            the old and new selected items may share a partial path.
            </remarks>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.AllowKeyHandleEvent">
            <summary>
            Determine whether the TreeViewItem should be allowed to handle a key
            event.
            </summary>
            <returns>
            A value indicating whether the key event should be handled.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.FocusDown">
            <summary>
            Navigate the focus to the next TreeViewItem below this item.
            </summary>
            <returns>
            A value indicating whether the focus was navigated.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.FocusInto">
            <summary>
            Navigate the focus to the very last TreeViewItem descendent of the
            this item.
            </summary>
            <returns>
            A value indicating whether the focus was navigated.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.FindNextFocusableItem(System.Boolean)">
            <summary>
            Find the next focusable TreeViewItem below this item.
            </summary>
            <param name="recurse">
            A value indicating whether the item should recurse into its child
            items when searching for the next focusable TreeViewItem.
            </param>
            <returns>The next focusable TreeViewItem below this item.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.FindLastFocusableItem">
            <summary>
            Find the last focusable TreeViewItem contained by this item.
            </summary>
            <returns>
            The last focusable TreeViewItem contained by this item.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.TreeViewItem.FindPreviousFocusableItem">
            <summary>
            Find the previous focusable TreeViewItem above this item.
            </summary>
            <returns>
            The previous focusable TreeViewItem above this item.
            </returns>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeViewItem.ExpanderButton">
            <summary>
            Gets or sets the ExpanderButton template part is used to expand and
            collapse the TreeViewItem.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeViewItem.HeaderElement">
            <summary>
            Gets the Header template part that is used to distinguish the bound
            Header content of the TreeViewItem.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeViewItem.ExpansionStateGroup">
            <summary>
            Gets or sets the ExpansionStates visual state group.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeViewItem.IgnorePropertyChange">
            <summary>
            Gets or sets a value indicating whether a dependency property change
            handler should ignore the next change notification.  This is used to
            reset the value of properties without performing any of the actions
            in their change handlers.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeViewItem.HasItems">
            <summary>
            Gets a value indicating whether the TreeViewItem contains items.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeViewItem.IsExpanded">
            <summary>
            Gets or sets a value indicating whether the nested items in a
            TreeViewItem are expanded or collapsed.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeViewItem.IsSelected">
            <summary>
            Gets or sets a value indicating whether the TreeViewItem is
            selected.
            </summary>
            <remarks>
            The default value is false.
            </remarks>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeViewItem.IsSelectionActive">
            <summary>
            Gets a value indicating whether the TreeViewItem has keyboard
            focus.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeViewItem.Interaction">
            <summary>
            Gets the helper that provides all of the standard
            interaction functionality.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeViewItem.ContainsSelection">
            <summary>
            Gets or sets a value indicating whether the TreeView's currently
            selected item is a descendent of this TreeViewItem.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeViewItem.CancelGotFocusBubble">
            <summary>
            Gets or sets a value indicating whether the TreeViewItem should
            ignore the next GotFocus event it receives because it has already
            been handled by one of its children.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeViewItem.RequiresContainsSelectionUpdate">
            <summary>
            Gets or sets a value indicating whether checking ContainsSelection
            should actually perform the update notifications because the item
            was selected before it was in the visual tree.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeViewItem.ParentItemsControl">
            <summary>
            Gets or sets a reference to the parent ItemsControl of a
            TreeViewItem.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeViewItem.ParentTreeViewItem">
            <summary>
            Gets a reference to the parent TreeViewItem of this TreeViewItem.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeViewItem.ParentTreeView">
            <summary>
            Gets a reference to the parent TreeView of the TreeViewItem.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeViewItem.IsRoot">
            <summary>
            Gets a value indicating whether this TreeViewItem is a root of the
            TreeView.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.TreeViewItem.CanExpandOnInput">
            <summary>
            Gets a value indicating whether the TreeViewItem can expand when it
            receives appropriate user input.
            </summary>
        </member>
        <member name="E:Microsoft.Windows.Controls.TreeViewItem.Collapsed">
            <summary>
            Occurs when the IsExpanded property changes from true to false.
            </summary>
        </member>
        <member name="E:Microsoft.Windows.Controls.TreeViewItem.Expanded">
            <summary>
            Occurs when the IsExpanded property changes from false to true.
            </summary>
        </member>
        <member name="E:Microsoft.Windows.Controls.TreeViewItem.Selected">
            <summary>
            Occurs when the IsSelected property of a TreeViewItem changes from
            false to true.
            </summary>
        </member>
        <member name="E:Microsoft.Windows.Controls.TreeViewItem.Unselected">
            <summary>
            Occurs when the IsSelected property of a TreeViewItem changes from
            true to false.
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Controls.Automation.Peers.TreeViewAutomationPeer">
            <summary>
            Exposes TreeView types to UI Automation.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:Microsoft.Windows.Controls.Automation.Peers.TreeViewAutomationPeer.#ctor(Microsoft.Windows.Controls.TreeView)">
            <summary>
            Initializes a new instance of the TreeViewAutomationPeer class.
            </summary>
            <param name="owner">
            The TreeView that is associated with this TreeViewAutomationPeer.
            </param>
        </member>
        <member name="M:Microsoft.Windows.Controls.Automation.Peers.TreeViewAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the TreeView that is associated
            with this TreeViewAutomationPeer.  This method is called by
            GetAutomationControlType.
            </summary>
            <returns>Tree AutomationControlType.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.Automation.Peers.TreeViewAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the TreeView that is associated with this
            TreeViewAutomationPeer.  This method is called by GetClassName.
            </summary>
            <returns>The name TreeView.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.Automation.Peers.TreeViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the TreeView that is associated with
            this TreeViewAutomationPeer.
            </summary>
            <param name="patternInterface">The desired PatternInterface.</param>
            <returns>The desired AutomationPeer or null.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.Automation.Peers.TreeViewAutomationPeer.GetChildrenCore">
            <summary>
            Gets the collection of child elements of the TreeView that is
            associated with this TreeViewAutomationPeer.  This method is called
            by GetChildren.
            </summary>
            <returns>
            A collection of TreeViewItemAutomationPeer elements, or null if the
            TreeView that is associated with this TreeViewAutomationPeer is
            empty.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.Automation.Peers.TreeViewAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
            <summary>
            Retrieves a UI Automation provider for each child element that is
            selected.
            </summary>
            <returns>A collection of UI Automation providers.</returns>
            <remarks>
            This API supports the Silverlight automation infrastructure and is
            not intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:Microsoft.Windows.Controls.Automation.Peers.TreeViewAutomationPeer.OwnerTreeView">
            <summary>
            Gets the TreeView that owns this TreeViewAutomationPeer.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Automation.Peers.TreeViewAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
            <summary>
            Gets a value indicating whether the UI Automation provider allows
            more than one child element to be selected concurrently.
            </summary>
            <remarks>
            This API supports the Silverlight automation infrastructure and is
            not intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:Microsoft.Windows.Controls.Automation.Peers.TreeViewAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
            <summary>
            Gets a value indicating whether the UI Automation provider requires
            at least one child element to be selected.
            </summary>
            <remarks>
            This API supports the Silverlight automation infrastructure and is
            not intended to be used directly from your code.
            </remarks>
        </member>
        <member name="T:Microsoft.Windows.Controls.Dock">
            <summary>
            Specifies the Dock position of a child element that is inside a
            DockPanel.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:Microsoft.Windows.Controls.Dock.Left">
            <summary>
            A child element that is positioned on the left side of the
            DockPanel.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.Dock.Top">
            <summary>
            A child element that is positioned at the top of the DockPanel.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.Dock.Right">
            <summary>
            A child element that is positioned on the right side of the
            DockPanel.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.Dock.Bottom">
            <summary>
            A child element that is positioned at the bottom of the DockPanel.
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Controls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Properties.Resources.AutoComplete_OnMaxDropDownHeightPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid maximum drop down height value &apos;{0}&apos;. The value must be greater than or equal to zero..
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Properties.Resources.AutoComplete_OnMinimumPopulateDelayPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid MinimumPopulateDelay value &apos;{0}&apos;. The value must be greater than or equal to zero..
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Properties.Resources.AutoComplete_OnSearchModePropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid SearchMode enumeration value. The value must be one of the defined AutoCompleteSearchMode values to be accepted..
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Properties.Resources.AutoComplete_OnSearchTextPropertyChanged_InvalidWrite">
            <summary>
              Looks up a localized string similar to Cannot set read-only property SearchText..
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Properties.Resources.AutoComplete_OnSelectedItemPropertyChanged_InvalidWrite">
            <summary>
              Looks up a localized string similar to Cannot set read-only property SelectedItem..
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Properties.Resources.Automation_OperationCannotBePerformed">
            <summary>
              Looks up a localized string similar to Cannot perform operation..
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Properties.Resources.DockPanel_OnDockPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid Dock value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Properties.Resources.Expander_OnExpandDirectionPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid ExpandDirection value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Properties.Resources.ParameterCollection_EnsureCanChangeCollection_IsReadOnly">
            <summary>
              Looks up a localized string similar to ConstructorParameters cannot be changed because ObjectDataProvider is using a user-assigned ObjectInstance..
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Properties.Resources.ResolveElementNameEventArgs_ctor_ElementNameEmpty">
            <summary>
              Looks up a localized string similar to The elementName should not be empty..
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Properties.Resources.RoutedPropertyChangingEventArgs_CancelSet_InvalidOperation">
            <summary>
              Looks up a localized string similar to The RoutedPropertyChangingEvent cannot be canceled!.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Properties.Resources.TreeView_OnSelectedItemPropertyChanged_InvalidWrite">
            <summary>
              Looks up a localized string similar to Cannot set read-only property SelectedItem..
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Properties.Resources.TreeView_OnSelectedValuePropertyChanged_InvalidWrite">
            <summary>
              Looks up a localized string similar to Cannot set read-only property SelectedValue..
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Properties.Resources.TreeViewItem_OnHasItemsPropertyChanged_InvalidWrite">
            <summary>
              Looks up a localized string similar to Cannot set read-only property HasItems..
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Properties.Resources.TreeViewItem_OnIsSelectionActivePropertyChanged_InvalidWrite">
            <summary>
              Looks up a localized string similar to Cannot set read-only property IsSelectionActive..
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Properties.Resources.TypeConverters_Convert_CannotConvert">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is unable to convert &apos;{1}&apos; to &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Properties.Resources.TypeConverters_ConvertFrom_CannotConvertFromType">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; cannot convert from &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Properties.Resources.Viewbox_OnApplyTemplate_OnlyOnce">
            <summary>
              Looks up a localized string similar to The template can only be applied one time..
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Properties.Resources.Viewbox_OnStretchDirectionPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid StretchDirection value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Properties.Resources.Viewbox_OnStretchPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid Stretch value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Properties.Resources.WrapPanel_OnItemHeightOrWidthPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid length value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Properties.Resources.WrapPanel_OnOrientationPropertyChanged_InvalidValue">
            <summary>
              Looks up a localized string similar to Invalid Orientation value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Controls.HeaderedContentControl">
            <summary>
            The base class for all controls that contain single content and have a header.
            </summary>
            <remarks>
            HeaderedContentControl adds Header and HeaderTemplatefeatures to a ContentControl.
            HasHeader and HeaderTemplateSelector are removed for lack of support 
            and consistency with other Silverlight controls.
            </remarks>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:Microsoft.Windows.Controls.HeaderedContentControl.HeaderProperty">
            <summary>
            Identifies the Header dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.HeaderedContentControl.OnHeaderPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HeaderProperty property changed handler.
            </summary>
            <param name="d">HeaderedContentControl whose Header property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs, which contains the old and new value.</param>
        </member>
        <member name="F:Microsoft.Windows.Controls.HeaderedContentControl.HeaderTemplateProperty">
            <summary>
            Identifies the HeaderTemplate dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.HeaderedContentControl.OnHeaderTemplatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HeaderTemplateProperty property changed handler.
            </summary>
            <param name="d">HeaderedContentControl whose HeaderTemplate property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs, which contains the old and new value.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.HeaderedContentControl.#ctor">
            <summary>
            Default DependencyObject constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.HeaderedContentControl.OnHeaderChanged(System.Object,System.Object)">
            <summary>
            This method is invoked when the Header property changes.
            </summary>
            <param name="oldHeader">The old value of the Header property.</param>
            <param name="newHeader">The new value of the Header property.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.HeaderedContentControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
            <summary>
            This method is invoked when the HeaderTemplate property changes.
            </summary>
            <param name="oldHeaderTemplate">The old value of the HeaderTemplate property.</param>
            <param name="newHeaderTemplate">The new value of the HeaderTemplate property.</param>
        </member>
        <member name="P:Microsoft.Windows.Controls.HeaderedContentControl.Header">
            <summary>
            Gets or sets an object that labels the HeaderedContentControl.  The
            default value is null.  The header can be a string, UIElement, or
            any other content.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.HeaderedContentControl.HeaderTemplate">
            <summary>
            Gets or sets the template used to display a control's header.
            The default is null.
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Controls.Expander">
            <summary>
            Represents a control that displays a header and has a collapsible 
            content window.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:Microsoft.Windows.Controls.Expander.ElementExpanderButtonName">
            <summary>
            The name of the ExpanderButton template part.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.Expander._expanderButton">
            <summary>
            The ExpanderButton template part is a templated ToggleButton that's used 
            to expand and collapse the ExpandSite, which hosts the content.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.Expander.ExpandDirectionProperty">
            <summary>
            Identifies the ExpandDirection dependency property. 
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.Expander.OnExpandDirectionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ExpandDirectionProperty PropertyChangedCallback call back static function.
            This function validates the new value before calling virtual function OnExpandDirectionChanged.
            </summary>
            <param name="d">Expander object whose ExpandDirection property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs which contains the old and new values.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.Expander.IsValidExpandDirection(System.Object)">
            <summary>
            Check whether the passed in value o is a valid ExpandDirection enum value.
            </summary>
            <param name="o">The value to be checked.</param>
            <returns>True if o is a valid ExpandDirection enum value, false o/w.</returns>
        </member>
        <member name="F:Microsoft.Windows.Controls.Expander.IsExpandedProperty">
            <summary>
            Identifies the IsExpanded dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.Expander.OnIsExpandedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ExpandedProperty PropertyChangedCallback static function.
            </summary>
            <param name="d">Expander object whose Expanded property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs which contains the old and new values.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.Expander.#ctor">
            <summary>
            Initializes a new instance of the Expander class.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.Expander.OnApplyTemplate">
            <summary>
            Builds the visual tree for the Expander control when a new 
            template is applied.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.Expander.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the KeyDown event.
            </summary>
            <param name="e">Key event args.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.Expander.OnExpanded">
            <summary>
            Raises the Expanded event when the IsExpanded property changes 
            from false to true.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.Expander.OnCollapsed">
            <summary>
            Raises the Collapsed event when the IsExpanded property changes 
            from true to false.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.Expander.ToggleExpanded(System.Windows.RoutedEventHandler,System.Windows.RoutedEventArgs)">
            <summary>
            Handle changes to the IsExpanded property.
            </summary>
            <param name="handler">Event handler.</param>
            <param name="args">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.Expander.RaiseEvent(System.Windows.RoutedEventHandler,System.Windows.RoutedEventArgs)">
            <summary>
            Raise a RoutedEvent.
            </summary>
            <param name="handler">Event handler.</param>
            <param name="args">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.Expander.OnExpanderButtonClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle ExpanderButton's click event.
            </summary>
            <param name="sender">The ExpanderButton in template.</param>
            <param name="e">Routed event arg.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.Expander.Microsoft#Windows#Controls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:Microsoft.Windows.Controls.Expander.UpdateVisualState(System.Boolean)">
            <summary>
            Update the current visual state of the button.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="P:Microsoft.Windows.Controls.Expander.ExpanderButton">
            <summary>
            Gets or sets the ExpanderButton template part.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Expander.ExpandDirection">
            <summary>
            Gets or sets the direction in which the Expander content window opens.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Expander.IsExpanded">
            <summary>
            Gets or sets a value indicating whether the Expander content 
            window is visible.
            </summary>
        </member>
        <member name="E:Microsoft.Windows.Controls.Expander.Expanded">
            <summary>
            Occurs when the content window of an Expander control opens to 
            display both its header and content.
            </summary>
        </member>
        <member name="E:Microsoft.Windows.Controls.Expander.Collapsed">
            <summary>
            Occurs when the content window of an Expander control closes and 
            only the Header is visible.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Expander.Interaction">
            <summary>
            Gets or sets the helper that provides all of the standard
            interaction functionality.
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Controls.PopulatingEventHandler">
            <summary>
            Represents the method that will handle the Populating event of an 
            AutoCompleteBox.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event arguments.</param>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="T:Microsoft.Windows.Controls.NumericExtensions">
            <summary>
            Numeric utility methods used by controls.  These methods are similar in
            scope to the WPF DoubleUtil class.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.NumericExtensions.IsZero(System.Double)">
            <summary>
            Check if a number is zero.
            </summary>
            <param name="value">The number to check.</param>
            <returns>True if the number is zero, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.NumericExtensions.IsNaN(System.Double)">
            <summary>
            Check if a number isn't really a number.
            </summary>
            <param name="value">The number to check.</param>
            <returns>
            True if the number is not a number, false if it is a number.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.NumericExtensions.IsGreaterThan(System.Double,System.Double)">
            <summary>
            Determine if one number is greater than another.
            </summary>
            <param name="left">First number.</param>
            <param name="right">Second number.</param>
            <returns>
            True if the first number is greater than the second, false
            otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.NumericExtensions.IsLessThanOrClose(System.Double,System.Double)">
            <summary>
            Determine if one number is less than or close to another.
            </summary>
            <param name="left">First number.</param>
            <param name="right">Second number.</param>
            <returns>
            True if the first number is less than or close to the second, false
            otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.NumericExtensions.AreClose(System.Double,System.Double)">
            <summary>
            Determine if two numbers are close in value.
            </summary>
            <param name="left">First number.</param>
            <param name="right">Second number.</param>
            <returns>
            True if the first number is close in value to the second, false
            otherwise.
            </returns>
        </member>
        <member name="T:Microsoft.Windows.Controls.NumericExtensions.NanUnion">
            <summary>
            NanUnion is a C++ style type union used for efficiently converting
            a double into an unsigned long, whose bits can be easily
            manipulated.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.NumericExtensions.NanUnion.FloatingValue">
            <summary>
            Floating point representation of the union.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.NumericExtensions.NanUnion.IntegerValue">
            <summary>
            Integer representation of the union.
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Controls.SelectorSelectionAdapter">
            <summary>
            Used as a wrapper object by AutoCompleteBox to represent a Selector 
            control.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:Microsoft.Windows.Controls.SelectorSelectionAdapter._selector">
            <summary>
            The Selector instance.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.SelectorSelectionAdapter.#ctor">
            <summary>
            Initializes a new instance of the SelectorSelectionAdapter class.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.SelectorSelectionAdapter.#ctor(System.Windows.Controls.Primitives.Selector)">
            <summary>
            Initializes a new instance of the SelectorSelectionAdapter class.
            </summary>
            <param name="selector">A selector control instance.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.SelectorSelectionAdapter.ResetScrollViewer">
            <summary>
            If the control contains a ScrollViewer, this will reset the viewer 
            to be scrolled to the top.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.SelectorSelectionAdapter.OnSelectorMouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the mouse left button up event on the selector control.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.SelectorSelectionAdapter.OnSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Handles the SelectionChanged event on the Selector control.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The selection changed event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.SelectorSelectionAdapter.SelectedIndexIncrement">
            <summary>
            Increment the selected index, or wrap.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.SelectorSelectionAdapter.SelectedIndexDecrement">
            <summary>
            Decrement the SelectedIndex, or wrap around, inside the nested 
            SelectionAdapter's control.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.SelectorSelectionAdapter.HandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the KeyDown event that occurs when a key is 
            pressed while the control has focus.
            </summary>
            <param name="e">The key event arguments object.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.SelectorSelectionAdapter.OnCommit">
            <summary>
            Fires the Commit event.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.SelectorSelectionAdapter.OnCommit(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Fires the Commit event.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.SelectorSelectionAdapter.OnCancel">
            <summary>
            Fires the Cancel event.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.SelectorSelectionAdapter.OnCancel(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Fires the Cancel event.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.SelectorSelectionAdapter.AfterAdapterAction">
            <summary>
            Change the selection after the actions are complete.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.SelectorSelectionAdapter.IgnoringSelectionChanged">
            <summary>
            Gets or sets a value indicating whether the selection change event 
            should not be fired.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.SelectorSelectionAdapter.SelectorControl">
            <summary>
            Gets or sets the underlying Selector control.
            </summary>
        </member>
        <member name="E:Microsoft.Windows.Controls.SelectorSelectionAdapter.SelectionChanged">
            <summary>
            Occurs when the SelectedItem property value changes.
            </summary>
        </member>
        <member name="E:Microsoft.Windows.Controls.SelectorSelectionAdapter.Commit">
            <summary>
            Occurs when a selection has occurred and has been committed.
            </summary>
        </member>
        <member name="E:Microsoft.Windows.Controls.SelectorSelectionAdapter.Cancel">
            <summary>
            Occurs when a selection has occurred and has been canceled.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.SelectorSelectionAdapter.SelectedItem">
            <summary>
            Gets or sets the selected item through the adapter.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.SelectorSelectionAdapter.ItemsSource">
            <summary>
            Gets or sets a collection that is used to generate the 
            content of the control.
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Controls.Viewbox">
            <summary>
            Defines a content decorator that can stretch and scale a single child to
            fill the available space.
            </summary>
            <remarks>
            Viewbox should inherit from Decorator (which inherits from
            FrameworkElement), but the closest base in Silverlight is the Control
            class.  This provides a number of extra APIs not present in WPF that
            should be avoided (including the Template property which should not be
            changed from its default value).  Viewbox has been sealed to prevent
            the creation of derived classes that depend on these features not
            available on its WPF counterpart.
            </remarks>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:Microsoft.Windows.Controls.Viewbox.ChildElementName">
            <summary>
            Name of  child element in Viewbox's default template.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.Viewbox.DefaultTemplateMarkup">
            <summary>
            XAML markup used to define the write-once Viewbox template.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.Viewbox._child">
            <summary>
            The single child element of a Viewbox.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.Viewbox.StretchProperty">
            <summary>
            Identifies the Stretch dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.Viewbox.OnStretchPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            StretchProperty property changed handler.
            </summary>
            <param name="d">Viewbox that changed its Stretch.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.Viewbox.IsValidStretchValue(System.Object)">
            <summary>
            Check whether the passed in object value is a valid Stretch enum value.
            </summary>
            <param name="o">The object typed value to be checked.</param>
            <returns>True if o is a valid Stretch enum value, false o/w.</returns>
        </member>
        <member name="F:Microsoft.Windows.Controls.Viewbox.StretchDirectionProperty">
            <summary>
            Identifies the StretchDirection dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.Viewbox.OnStretchDirectionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            StretchDirectionProperty property changed handler.
            </summary>
            <param name="d">Viewbox that changed its StretchDirection.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.Viewbox.IsValidStretchDirectionValue(System.Object)">
            <summary>
            Check whether the passed in object value is a valid StretchDirection enum value.
            </summary>
            <param name="o">The object typed value to be checked.</param>
            <returns>True if o is a valid StretchDirection enum value, false o/w.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.Viewbox.#ctor">
            <summary>
            Initializes a new instance of the Viewbox class.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.Viewbox.OnApplyTemplate">
            <summary>
            Builds the visual tree for the ViewBox control when a new template is applied.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.Viewbox.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the child element of a Viewbox to prepare for arranging
            it during the ArrangeOverride pass.
            </summary>
            <remarks>
            Viewbox measures it's child at an infinite constraint; it allows the child to be however large it so desires.
            The child's returned size will be used as it's natural size for scaling to Viewbox's size during Arrange.
            </remarks>
            <param name="availableSize">
            An upper limit Size that should not be exceeded.
            </param>
            <returns>The target Size of the element.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.Viewbox.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content of a Viewbox element.
            Viewbox always sets the child to its desired size.  It then computes and applies a transformation
            from that size to the space available: Viewbox's own input size less child margin.
            </summary>
            <param name="finalSize">
            The Size this element uses to arrange its child content.
            </param>
            <returns>
            The Size that represents the arranged size of this Viewbox element
            and its child.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.Viewbox.ComputeScaleFactor(System.Windows.Size,System.Windows.Size)">
            <summary>
            Compute the scale factor of the Child content.
            </summary>
            <param name="availableSize">
            Available size to fill with content.
            </param>
            <param name="contentSize">Desired size of the content.</param>
            <returns>Width and Height scale factors.</returns>
        </member>
        <member name="P:Microsoft.Windows.Controls.Viewbox.DefaultTemplate">
            <summary>
            Gets or sets the default ControlTemplate of the Viewbox.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Viewbox.ChildElement">
            <summary>
            Gets or sets the element of the Viewbox that will render the child.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Viewbox.Scale">
            <summary>
            Gets or sets the transformation on the ChildElement used to scale the
            Child content.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Viewbox.Child">
            <summary>
            Gets or sets the single child element of a Viewbox.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Viewbox.Stretch">
            <summary>
            Gets or sets the Viewbox Stretch mode, which determines how content
            fits into the available space.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.Viewbox.StretchDirection">
            <summary>
            Gets or sets the StretchDirection, which determines how scaling is
            applied to the contents of a Viewbox.
            </summary>
        </member>
        <member name="T:Microsoft.Windows.Controls.AutoCompleteSearchPredicate`1">
            <summary>
            Represents a method that filters items and determines whether they are 
            valid suggestions given the search parameter.
            </summary>
            <param name="search">The search string.</param>
            <param name="item">The string representation of the current item being 
            evaluated by the predicate.</param>
            <typeparam name="T">Whether the predicate will operate on object or 
            string values.</typeparam>
            <returns>Returns true if the item should be included as a suggestion 
            given the search term.</returns>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="T:Microsoft.Windows.Controls.AutoCompleteBox">
            <summary>
            Represents a control that combines a text box and a drop down popup 
            containing a selection control. AutoCompleteBox allows users to filter 
            an items list.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox.ElementSelectionAdapter">
            <summary>
            Specifies the name of the ListBox TemplatePart.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox.ElementDropDownToggle">
            <summary>
            Specifies the name of the ToggleButton TemplatePart.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox.ElementPopup">
            <summary>
            Specifies the name of the Popup TemplatePart.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox.ElementTextBox">
            <summary>
            The name for the text box part.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox.ElementTextBoxStyle">
            <summary>
            The name for the text box style.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox.ElementItemContainerStyle">
            <summary>
            The name for the adapter's item container style.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox.MinimumPrefixLengthProperty">
            <summary>
            Identifies the MinimumPrefixLength dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnMinimumPrefixLengthPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MinimumPrefixLengthProperty property changed handler.
            </summary>
            <param name="d">AutoCompleteBox that changed its MinimumPrefixLength.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox.MinimumPopulateDelayProperty">
            <summary>
            Identifies the MinimumPopulateDelay dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnMinimumPopulateDelayPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MinimumPopulateDelayProperty property changed handler. Any current 
            dispatcher timer will be stopped. The timer will not be restarted 
            until the next TextUpdate call by the user.
            </summary>
            <param name="d">AutoCompleteTextBox that changed its 
            MinimumPopulateDelay.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox.IsTextCompletionEnabledProperty">
            <summary>
            Identifies the IsTextCompletionEnabled dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox.ItemTemplateProperty">
            <summary>
            Identifies the ItemTemplate dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox.ItemContainerStyleProperty">
            <summary>
            Identifies the ItemContainerStyle dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox.TextBoxStyleProperty">
            <summary>
            Identifies the TextBoxStyle dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox.MaxDropDownHeightProperty">
            <summary>
            Identifies the MaxDropDownHeight dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnMaxDropDownHeightPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            MaxDropDownHeightProperty property changed handler.
            </summary>
            <param name="d">AutoCompleteTextBox that changed its MaxDropDownHeight.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox.IsDropDownOpenProperty">
            <summary>
            Identifies the IsDropDownOpen dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnIsDropDownOpenPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsDropDownOpenProperty property changed handler.
            </summary>
            <param name="d">AutoCompleteTextBox that changed its IsDropDownOpen.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnItemsSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ItemsSourceProperty property changed handler.
            </summary>
            <param name="d">AutoCompleteBox that changed its ItemsSource.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox.SelectedItemProperty">
            <summary>
            Identifies the SelectedItem dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnSelectedItemPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedItemProperty property changed handler. Fires the 
            SelectedItemChanged event. The event data will contain any non-null
            removed items and non-null additions.
            </summary>
            <param name="d">AutoCompleteBox that changed its SelectedItem.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox.TextProperty">
            <summary>
            Identifies the Text dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnTextPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            TextProperty property changed handler.
            </summary>
            <param name="d">AutoCompleteBox that changed its Text.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox.SearchTextProperty">
            <summary>
            Identifies the SearchText dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnSearchTextPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            OnSearchTextProperty property changed handler.
            </summary>
            <param name="d">AutoCompleteBox that changed its SearchText.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox.SearchModeProperty">
            <summary>
            Identifies the SearchMode dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnSearchModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SearchModeProperty property changed handler.
            </summary>
            <param name="d">AutoCompleteBox that changed its SearchMode.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox.ItemFilterProperty">
            <summary>
            Identifies the ItemFilter dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnItemFilterPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ItemFilterProperty property changed handler.
            </summary>
            <param name="d">AutoCompleteBox that changed its ItemFilter.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox.TextFilterProperty">
            <summary>
            Identifies the TextFilter dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox.ConverterProperty">
            <summary>
            Identifies the Converter dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox.ConverterParameterProperty">
            <summary>
            Identifies the ConverterParameter dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnConverterParameterPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ConverterParameterProperty property changed handler.
            </summary>
            <param name="d">
            AutoCompleteBox that changed its ConverterParameter.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox.ConverterCultureProperty">
            <summary>
            Identifies the ConverterCulture dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnConverterCulturePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ConverterCultureProperty property changed handler.
            </summary>
            <param name="d">
            AutoCompleteBox that changed its ConverterCulture.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox._toggleButton">
            <summary>
            The toggle button template part.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox._text">
            <summary>
            The TextBox template part.
            </summary>
        </member>
        <member name="F:Microsoft.Windows.Controls.AutoCompleteBox._adapter">
            <summary>
            The SelectionAdapter.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.#ctor">
            <summary>
            Initializes a new instance of the AutoCompleteBox control class.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges and sizes the auto complete control and its contents.
            </summary>
            <param name="finalSize">The provided arrangement bounds object.</param>
            <returns>Returns the arrangement bounds, unchanged.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnApplyTemplate">
            <summary>
            Builds the visual tree for the AutoCompleteBox control when a 
            new template is applied.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.FocusChanged(System.Boolean)">
            <summary>
            Handles the FocusChanged event.
            </summary>
            <param name="hasFocus">A value indicating whether the control 
            currently has the focus.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.HasFocus">
            <summary>
            Checks to see if the control has focus currently.
            </summary>
            <returns>Returns a value indicating whether the control or its popup
            have focus.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides class handling for the GotFocus event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the LostFocus event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.ControlIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle the change of the IsEnabled property.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnPopupClosedStateChanged(System.Object,System.Windows.VisualStateChangedEventArgs)">
            <summary>
            Actually closes the popup after the VSM state animation completes.
            </summary>
            <param name="sender">Event source.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.TryGetSelectionAdapter(System.Object)">
            <summary>
            Attempts to return an ISelectionAdapter wrapper for a specified object.
            </summary>
            <param name="value">The object value.</param>
            <returns>Returns an IItemsSelector wrapping the value.</returns>
            <remarks>
            The specified object will be returned if it implements 
            ISelectionAdapter. If the specified object can be placed in a known 
            implementation of ISelectionAdapter, one containing the specified 
            object will be returned. Otherwise null will be returned.
            
            Custom adapters can be added by deriving a new control from 
            AutoCompleteBox and overriding the TryGetSelectionAdapter method.</remarks>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.PopulateDropDown(System.Object,System.EventArgs)">
            <summary>
            Handles the timer tick when using a populate delay.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnPopulating(Microsoft.Windows.Controls.PopulatingEventArgs)">
            <summary>
            Raises the Populating event when the AutoCompleteBox is populating the 
            selection adapter with suggestions based on the text property.
            </summary>
            <param name="e">The populating event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnPopulated(Microsoft.Windows.Controls.PopulatedEventArgs)">
            <summary>
            Raises the Populated event when the AutoCompleteBox has populated the 
            selection adapter with suggestions based on the text property.
            </summary>
            <param name="e">The populated event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnSelectedItemChanged(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Raises the SelectedItemChanged event when the selected item has changed.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnDropDownOpening(Microsoft.Windows.Controls.RoutedPropertyChangingEventArgs{System.Boolean})">
            <summary>
            Raises an DropDownOpening event when the IsDropDownOpen property is 
            changing from false to true.
            </summary>
            <param name="e">
            Provides any observers the opportunity to cancel the operation and 
            halt opening the drop down.
            </param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnDropDownOpened(System.Windows.RoutedPropertyChangedEventArgs{System.Boolean})">
            <summary>
            Raises an DropDownOpened event when the IsDropDownOpen property 
            changed from false to true.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnDropDownClosing(Microsoft.Windows.Controls.RoutedPropertyChangingEventArgs{System.Boolean})">
            <summary>
            Raises an DropDownClosing event when the IsDropDownOpen property is 
            changing from true to false.
            </summary>
            <param name="e">
            Provides any observers the opportunity to cancel the operation 
            and halt closing the drop down.
            </param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnDropDownClosed(System.Windows.RoutedPropertyChangedEventArgs{System.Boolean})">
            <summary>
            Raises an DropDownClosed event when the IsDropDownOpen property 
            changed from true to false.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.FormatValue(System.Object)">
            <summary>
            Formats an Item for text comparisons based on Converter 
            and ConverterCulture properties.
            </summary>
            <param name="value">The object to format.</param>
            <returns>Formatted Value.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnTextChanged(System.Windows.RoutedEventArgs)">
            <summary>
            Raises the TextChanged event when the text has changed.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnTextBoxTextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Handle the TextChanged event that is directly attached to the 
            TextBox part. This ensures that only user initiated actions will 
            result in an AutoCompleteBox suggestion and operation.
            </summary>
            <param name="sender">The source TextBox object.</param>
            <param name="e">The TextChanged event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnTextBoxSelectionChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            When selection changes, save the location of the selection start.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.SetTextBoxValue(System.String)">
            <summary>
            Directly sets the text value of the TextBox, unless it is equal to
            the last known string that was set. Will ignore the next changed 
            event handler.
            </summary>
            <param name="newText">The new string value.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.SetTextValue(System.String)">
            <summary>
            Directly sets the text property value, unless it is equal to the 
            last known string that was set. Will ignore the next changed event 
            handler. Notifies observers by firing the TextChanged event.
            </summary>
            <param name="newText">The new string value.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.TextUpdated(System.String,System.Boolean)">
            <summary>
            Handle the update of the text for the control from any source, 
            including the TextBox part and the Text dependency property.
            </summary>
            <param name="newText">The new text.</param>
            <param name="userInitiated">A value indicating whether the update 
            is a user-initiated action. This should be a True value when the 
            TextUpdated method is called from a TextBox event handler.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.PopulateComplete">
            <summary>
            Notifies AutoCompleteBox that ItemsSource has been populated and 
            suggestions can now be computed using that data.
            </summary>
            <remarks>
            Allows a developer to continue the population event after setting 
            the Cancel property to True. This allows for custom, 
            developer-driven AutoCompleteBox scenarios.
            </remarks>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.TryGetMatch(System.String,System.Collections.ObjectModel.ObservableCollection{System.Object},Microsoft.Windows.Controls.AutoCompleteSearchPredicate{System.String})">
            <summary>
            Attempts to look through the view and locate the specific exact 
            text match.
            </summary>
            <param name="searchText">The search text.</param>
            <param name="view">The view reference.</param>
            <param name="predicate">The predicate to use for the partial or 
            exact match.</param>
            <returns>Returns the object or null.</returns>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.ClearView">
            <summary>
            A simple helper method to clear the view and ensure that a view 
            object is always present and not null.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.RefreshView">
            <summary>
            Walks through the items enumeration. Performance is not going to be 
            perfect with the current implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Handle any change to the ItemsSource dependency property, update 
            the underlying ObservableCollection view, and set the selection 
            adapter's ItemsSource to the view if appropriate.
            </summary>
            <param name="oldValue">The old enumerable reference.</param>
            <param name="newValue">The new enumerable reference.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnAdapterSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Handles the SelectionChanged event of the selection adapter.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The selection changed event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnAdapterSelectionComplete(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Commit event on the selection adapter.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnAdapterSelectionCanceled(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Cancel event on the selection adapter.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnMaxDropDownHeightChanged(System.Double)">
            <summary>
            Handles MaxDropDownHeightChanged by re-arranging and updating the 
            popup arrangement.
            </summary>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OpenDropDown(System.Boolean,System.Boolean)">
            <summary>
            Private method that directly opens the popup, checks the expander 
            button, and then fires the Opened event.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.CloseDropDown(System.Boolean,System.Boolean)">
            <summary>
            Private method that directly closes the popup, flips the Checked 
            value, and then fires the Closed event.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.PopupChild_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            The popup child has received focus.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.PopupChild_LostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            The popup child has lost focus.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.PopupChild_MouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            The popup child has had the mouse enter its bounds.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.PopupChild_MouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            The mouse has left the popup child's bounds.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.PopupChild_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            The size of the popup child has changed.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OutsidePopup_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            The mouse has clicked outside of the popup.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.ArrangePopup">
            <summary>
            Arrange the drop down popup.
            </summary>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.ToggleDropDown(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Toggles the drop down visibility. If visible, the text updated 
            method will be called, eventually refreshing the selection adapter's
            view and making the appropriate visibility call on the drop down. 
            If no items are in the filtered view, the drop down will not be 
            displayed.
            </summary>
            <param name="sender">The source object.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides class handling for the KeyDown event that occurs when a 
            key is pressed while the control has focus.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnTextBoxKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs when the KeyDown event fires and the drop down is not open.
            </summary>
            <param name="e">The key event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.OnDropDownKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Raises the DropDownKeyDown event when a key down event occurs 
            when the drop down is open.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.Microsoft#Windows#Controls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:Microsoft.Windows.Controls.AutoCompleteBox.UpdateVisualState(System.Boolean)">
            <summary>
            Update the current visual state of the button.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.Items">
            <summary>
            Gets or sets a list of items built from the ItemsSource enumeration.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.View">
            <summary>
            Gets or sets the observable collection that contains references to 
            all of the items in the generated view of data that is provided to 
            the selection-style control adapter.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.IgnoreTextPropertyChange">
            <summary>
            Gets or sets a value to ignore a number of pending change handlers. 
            The value is decremented after each use. This is used to reset the 
            value of properties without performing any of the actions in their 
            change handlers.
            </summary>
            <remarks>The int is important as a value because the TextBox 
            TextChanged event does not immediately fire, and this will allow for
            nested property changes to be ignored.</remarks>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.IgnorePropertyChange">
            <summary>
            Gets or sets a value indicating whether to ignore calling a pending 
            change handlers. 
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.IgnoreTextSelectionChange">
            <summary>
            Gets or sets a value indicating whether to ignore the selection 
            changed event.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.TextSelectionStart">
            <summary>
            Gets or sets the last observed text box selection start location.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.UserCalledPopulate">
            <summary>
            Gets or sets a value indicating whether the user initiated the 
            current populate call.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.PopupClosedVisualState">
            <summary>
            Gets or sets a value indicating whether a visual popup state is 
            being used in the current template for the Closed state. Setting 
            this value to true will delay the actual setting of Popup.IsOpen 
            to false until after the visual state's transition for Closed is 
            complete.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.DelayTimer">
            <summary>
            Gets or sets the DispatcherTimer used for the MinimumPopulateDelay 
            condition for auto completion.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.AllowWrite">
            <summary>
            Gets or sets a value indicating whether a read-only dependency 
            property change handler should allow the value to be set.  This is 
            used to ensure that read-only properties cannot be changed via 
            SetValue, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.Interaction">
            <summary>
            Gets or sets the helper that provides all of the standard
            interaction functionality. Making it internal for subclass access.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.MinimumPrefixLength">
            <summary>
            Gets or sets the minimum text length before the AutoCompleteBox can 
            display suggestions.
            </summary>
            <remarks>
            The default MinimumPrefixLength value is 1 character. Valid integers
            range from -1 to any reasonable maximum. -1 effectively disables the 
            AutoCompleteBox functionality of the control.
            </remarks>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.MinimumPopulateDelay">
            <summary>
            Gets or sets the minimum delay required, in milliseconds, before 
            the AutoCompleteBox control will lookup and provide suggestions for 
            the current Text.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.IsTextCompletionEnabled">
            <summary>
            Gets or sets a value indicating whether the first suggestion found 
            during a lookup will be automatically displayed in the TextBox.
            </summary>
            <remarks>
            Additionally, performs a lookup for the associated item value 
            belonging to the first suggestion.
            </remarks>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.ItemTemplate">
            <summary>
            Gets or sets the DataTemplate used to display each item in the 
            drop down.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.ItemContainerStyle">
            <summary>
            Gets or sets the Style that is applied to the selection adapter.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.TextBoxStyle">
            <summary>
            Gets or sets the Style that is applied to the TextBox.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.MaxDropDownHeight">
            <summary>
            Gets or sets the maximum drop down height.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.IsDropDownOpen">
            <summary>
            Gets or sets a value indicating whether the drop down is open.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.ItemsSource">
            <summary>
            Gets or sets a collection that is used to generate the content of 
            the control.
            </summary>
            <remarks>
            AutoCompleteBox does not properly support the INotifyCollectionChanged 
            interface. Directly set ItemsSource to a new value if the source 
            data has changed.</remarks>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.SelectedItem">
            <summary>
            Gets the selected item's value. This is a read-only property.
            </summary>
            <remarks>
            The IsTextCompletionEnabled property of the control impacts the 
            SelectedItem behavior: if the property is set to false, and the 
            user enters a valid items' textual representation, without 
            selection, the SelectedItem value will be null. The lookup between 
            text and items is only done when the IsTextCompletionEnabled property 
            is true (the default value). This is the same behavior that the 
            ComboBox control has in WPF.
            </remarks>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.Text">
            <summary>
            Gets or sets the contents of the TextBox.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.SearchText">
            <summary>
            Gets the text value used to search. This is a read-only dependency 
            property.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.SearchMode">
            <summary>
            Gets or sets the built-in, predefined search mode to use for 
            searching the ItemsSource.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.ItemFilter">
            <summary>
            Gets or sets a search filter that determines whether an item object 
            is a valid suggestion given the search string.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.TextFilter">
            <summary>
            Gets or sets a search filter that determines whether a string is a 
            valid suggestion given the search text.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.Converter">
            <summary>
            Gets or sets the value converter used to convert item instances to 
            string values.
            </summary>
            <remarks>
            This enables high performance lookups. The conversion is from object 
            to type of string. 
            </remarks>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.ConverterParameter">
            <summary>
            Gets or sets the parameter used with the converter property.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.ConverterCulture">
            <summary>
            Gets or sets the culture used in with the converter property.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.DropDownToggleButton">
            <summary>
            Gets or sets the template's ToggleButton part.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.DropDownPopup">
            <summary>
            Gets or sets the drop down popup control.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.TextBox">
            <summary>
            Gets or sets the Text template part.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.SelectionAdapter">
            <summary>
            Gets or sets the adapter that represents a selection control.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.PopupChild">
            <summary>
            Gets or sets the popup child content.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.OutsidePopupCanvas">
            <summary>
            Gets or sets the expansive area outside of the popup.
            </summary>
        </member>
        <member name="P:Microsoft.Windows.Controls.AutoCompleteBox.PopupChildCanvas">
            <summary>
            Gets or sets the canvas for the popup child.
            </summary>
        </member>
        <member name="E:Microsoft.Windows.Controls.AutoCompleteBox.TextChanged">
            <summary>
            Occurs when the text changes.
            </summary>
        </member>
        <member name="E:Microsoft.Windows.Controls.AutoCompleteBox.Populating">
            <summary>
            Occurs when the AutoCompleteBox is populating the selection adapter 
            with suggestions based on the text property. 
            </summary>
            <remarks>
            If Canceled, the control will not continue the automatic suggestion 
            process, which will be left to the handler.
            </remarks>
        </member>
        <member name="E:Microsoft.Windows.Controls.AutoCompleteBox.Populated">
            <summary>
            Occurs when the AutoCompleteBox has populated the selection adapter 
            with suggestions based on the text property.
            </summary>
        </member>
        <member name="E:Microsoft.Windows.Controls.AutoCompleteBox.DropDownOpening">
            <summary>
            Occurs when the IsDropDownOpen property is changing from false to 
            true. The event can be cancelled.
            </summary>
        </member>
        <member name="E:Microsoft.Windows.Controls.AutoCompleteBox.DropDownOpened">
            <summary>
            Occurs when the IsDropDownOpen property was changed from false to true.
            </summary>
        </member>
        <member name="E:Microsoft.Windows.Controls.AutoCompleteBox.DropDownClosing">
            <summary>
            Occurs when the IsDropDownOpen property is changing from true to 
            false. The event can be cancelled.
            </summary>
        </member>
        <member name="E:Microsoft.Windows.Controls.AutoCompleteBox.DropDownClosed">
            <summary>
            Occurs when the IsDropDownOpen property was changed from true to 
            false.
            </summary>
        </member>
        <member name="E:Microsoft.Windows.Controls.AutoCompleteBox.SelectedItemChanged">
            <summary>
            Occurs when the selected item has changed.
            </summary>
        </member>
    </members>
</doc>
