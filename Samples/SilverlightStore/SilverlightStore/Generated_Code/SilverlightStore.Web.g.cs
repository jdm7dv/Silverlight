//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4016
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SilverlightStore
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using System.Runtime.Serialization;
    using System.Web.Ria.Data;
    using System.Windows.Ria.Data;
    
    
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/SilverlightStore")]
    public sealed partial class Product : Entity
    {
        
        private CategoryType _category;
        
        private string _details;
        
        private Uri _imageLarge;
        
        private Uri _imageLogo;
        
        private Uri _imageSmall;
        
        private string _name;
        
        private Uri _permalink;
        
        private decimal _price;
        
        private Uri _purchaseUrl;
        
        private string _summary;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnCategoryChanging(CategoryType value);
        partial void OnCategoryChanged();
        partial void OnDetailsChanging(string value);
        partial void OnDetailsChanged();
        partial void OnImageLargeChanging(Uri value);
        partial void OnImageLargeChanged();
        partial void OnImageLogoChanging(Uri value);
        partial void OnImageLogoChanged();
        partial void OnImageSmallChanging(Uri value);
        partial void OnImageSmallChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnPermalinkChanging(Uri value);
        partial void OnPermalinkChanged();
        partial void OnPriceChanging(decimal value);
        partial void OnPriceChanged();
        partial void OnPurchaseUrlChanging(Uri value);
        partial void OnPurchaseUrlChanged();
        partial void OnSummaryChanging(string value);
        partial void OnSummaryChanged();

        #endregion
        
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Product()
        {
            this.OnCreated();
        }
        
        [DataMember()]
        public CategoryType Category
        {
            get
            {
                return this._category;
            }
            set
            {
                if ((this._category != value))
                {
                    this.ValidateProperty("Category", value);
                    this.OnCategoryChanging(value);
                    this.RaiseDataMemberChanging("Category");
                    this._category = value;
                    this.RaiseDataMemberChanged("Category");
                    this.OnCategoryChanged();
                }
            }
        }
        
        [DataMember()]
        public string Details
        {
            get
            {
                return this._details;
            }
            set
            {
                if ((this._details != value))
                {
                    this.ValidateProperty("Details", value);
                    this.OnDetailsChanging(value);
                    this.RaiseDataMemberChanging("Details");
                    this._details = value;
                    this.RaiseDataMemberChanged("Details");
                    this.OnDetailsChanged();
                }
            }
        }
        
        [DataMember()]
        public Uri ImageLarge
        {
            get
            {
                return this._imageLarge;
            }
            set
            {
                if ((this._imageLarge != value))
                {
                    this.ValidateProperty("ImageLarge", value);
                    this.OnImageLargeChanging(value);
                    this.RaiseDataMemberChanging("ImageLarge");
                    this._imageLarge = value;
                    this.RaiseDataMemberChanged("ImageLarge");
                    this.OnImageLargeChanged();
                }
            }
        }
        
        [DataMember()]
        public Uri ImageLogo
        {
            get
            {
                return this._imageLogo;
            }
            set
            {
                if ((this._imageLogo != value))
                {
                    this.ValidateProperty("ImageLogo", value);
                    this.OnImageLogoChanging(value);
                    this.RaiseDataMemberChanging("ImageLogo");
                    this._imageLogo = value;
                    this.RaiseDataMemberChanged("ImageLogo");
                    this.OnImageLogoChanged();
                }
            }
        }
        
        [DataMember()]
        public Uri ImageSmall
        {
            get
            {
                return this._imageSmall;
            }
            set
            {
                if ((this._imageSmall != value))
                {
                    this.ValidateProperty("ImageSmall", value);
                    this.OnImageSmallChanging(value);
                    this.RaiseDataMemberChanging("ImageSmall");
                    this._imageSmall = value;
                    this.RaiseDataMemberChanged("ImageSmall");
                    this.OnImageSmallChanged();
                }
            }
        }
        
        [DataMember()]
        [Key()]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.ValidateProperty("Name", value);
                    this.OnNameChanging(value);
                    this.RaiseDataMemberChanging("Name");
                    this._name = value;
                    this.RaiseDataMemberChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        [DataMember()]
        public Uri Permalink
        {
            get
            {
                return this._permalink;
            }
            set
            {
                if ((this._permalink != value))
                {
                    this.ValidateProperty("Permalink", value);
                    this.OnPermalinkChanging(value);
                    this.RaiseDataMemberChanging("Permalink");
                    this._permalink = value;
                    this.RaiseDataMemberChanged("Permalink");
                    this.OnPermalinkChanged();
                }
            }
        }
        
        [DataMember()]
        public decimal Price
        {
            get
            {
                return this._price;
            }
            set
            {
                if ((this._price != value))
                {
                    this.ValidateProperty("Price", value);
                    this.OnPriceChanging(value);
                    this.RaiseDataMemberChanging("Price");
                    this._price = value;
                    this.RaiseDataMemberChanged("Price");
                    this.OnPriceChanged();
                }
            }
        }
        
        [DataMember()]
        public Uri PurchaseUrl
        {
            get
            {
                return this._purchaseUrl;
            }
            set
            {
                if ((this._purchaseUrl != value))
                {
                    this.ValidateProperty("PurchaseUrl", value);
                    this.OnPurchaseUrlChanging(value);
                    this.RaiseDataMemberChanging("PurchaseUrl");
                    this._purchaseUrl = value;
                    this.RaiseDataMemberChanged("PurchaseUrl");
                    this.OnPurchaseUrlChanged();
                }
            }
        }
        
        [DataMember()]
        public string Summary
        {
            get
            {
                return this._summary;
            }
            set
            {
                if ((this._summary != value))
                {
                    this.ValidateProperty("Summary", value);
                    this.OnSummaryChanging(value);
                    this.RaiseDataMemberChanging("Summary");
                    this._summary = value;
                    this.RaiseDataMemberChanged("Summary");
                    this.OnSummaryChanged();
                }
            }
        }
        
        public override object GetIdentity()
        {
            return this._name;
        }
    }
    
    public sealed partial class ProductsDomainContext : DomainContext
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public ProductsDomainContext() : 
                this(new HttpDomainClient(new Uri("DataService.axd/SilverlightStore-ProductsDomainService/", System.UriKind.Relative)))
        {
        }
        
        /// <summary>
        /// Constructor used to specify a data service URI.
        /// </summary>
        /// <param name="serviceUri">
        /// The ProductsDomainService data service URI.
        /// </param>
        public ProductsDomainContext(Uri serviceUri) : 
                this(new HttpDomainClient(serviceUri))
        {
        }
        
        /// <summary>
        /// Constructor used to specify a DomainClient instance.
        /// </summary>
        /// <param name="domainClient">
        /// The DomainClient instance the DomainContext should use.
        /// </param>
        public ProductsDomainContext(DomainClient domainClient) : 
                base(domainClient)
        {
            this.OnCreated();
        }
        
        public EntityList<Product> Products
        {
            get
            {
                return base.Entities.GetEntityList<Product>();
            }
        }
        
        /// <summary>
        /// Returns an EntityQuery for query operation 'GetProducts'.
        /// </summary>
        public EntityQuery<Product> GetProductsQuery()
        {
            return base.CreateQuery<Product>("GetProducts", null, false, true);
        }
        
        protected override EntityContainer CreateEntityContainer()
        {
            return new ProductsDomainContextEntityContainer();
        }
        
        internal sealed class ProductsDomainContextEntityContainer : EntityContainer
        {
            
            public ProductsDomainContextEntityContainer()
            {
                this.CreateEntityList<Product>(EntityListOperations.None);
            }
        }
    }
    
    /// <summary>
    /// Context for the RIA application.
    /// </summary>
    /// <remarks>
    /// This context extends the base to make application services and types available
    /// for consumption from code and xaml.
    /// </remarks>
    public sealed partial class RiaContext : System.Windows.Ria.RiaContextBase
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the RiaContext class.
        /// </summary>
        public RiaContext()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets the context that is registered as a lifetime object with the current application.
        /// </summary>
        /// <exception cref="InvalidOperationException"> is thrown if there is no current application,
        /// no contexts have been added, or more than one context has been added.
        /// </exception>
        /// <seealso cref="Application.ApplicationLifetimeObjects"/>
        public new static RiaContext Current
        {
            get
            {
                return ((RiaContext)(System.Windows.Ria.RiaContextBase.Current));
            }
        }
    }
}
