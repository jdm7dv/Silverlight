<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Web.DynamicData</name>
    </assembly>
    <members>
        <member name="T:System.Web.DynamicData.MetaModel">
            <summary>
            Object that represents a database or a number of databases used by the dynamic data. It can have multiple different data contexts registered on it.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaModel.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaModel.GetModel(System.Type)">
            <summary>
            Gets the model instance that had the contextType registered with it
            </summary>
            <param name="contextType">A DataContext or ObjectContext type (e.g. NorthwindDataContext)</param>
            <returns>a model</returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type)">
            <summary>
            Registers a context. Uses the default ContextConfiguration options.
            </summary>
            <param name="contextType"></param>
        </member>
        <member name="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)">
            <summary>
            Registers a context. Uses the the given ContextConfiguration options.
            </summary>
            <param name="contextType"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})">
            <summary>
            Registers a context. Uses default ContextConfiguration. Accepts a context factory that is a delegate used for
            instantiating the context. This allows developers to instantiate context using a custom constructor.
            </summary>
            <param name="contextFactory"></param>
        </member>
        <member name="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)">
            <summary>
            Registers a context. Uses given ContextConfiguration. Accepts a context factory that is a delegate used for
            instantiating the context. This allows developers to instantiate context using a custom constructor.
            </summary>
            <param name="contextFactory"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)">
            <summary>
            Register context using give model provider. Uses default context configuration.
            </summary>
            <param name="dataModelProvider"></param>
        </member>
        <member name="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)">
            <summary>
            Register context using give model provider. Uses given context configuration.
            </summary>
            <param name="dataModelProvider"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:System.Web.DynamicData.MetaModel.ResetRegistrationException">
            <summary>
            Reset any previous registration error that may have happened. Normally, the behavior is that when an error
            occurs during registration, the exception is cached and rethrown on all subsequent operations. This is done
            so that if an error occurs in Application_Start, it shows up on every request.  Calling this method clears
            out the error and potentially allows new RegisterContext calls.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)">
            <summary>
            Instantiate a MetaTable object. Can be overridden to instantiate a derived type 
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaModel.GetTable(System.Type)">
            <summary>
            Looks up a MetaTable by the entity type. Throws an exception if one is not found.
            </summary>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)">
            <summary>
            Tries to look up a MetaTable by the entity type.
            </summary>
            <param name="entityType"></param>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaModel.GetTable(System.String)">
            <summary>
            Looks up a MetaTable by unique name. Throws if one is not found. The unique name defaults to the table name, or an override
            can be provided via ContextConfiguration when the context that contains the table is registered. The unique name uniquely
            identifies a table within a give MetaModel. It is used for URL generation.
            </summary>
            <param name="uniqueTableName"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)">
            <summary>
            Tries to look up a MetaTable by unique name. Doe
            </summary>
            <param name="uniqueTableName"></param>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)">
            <summary>
            Looks up a MetaTable by the contextType/tableName combination. Throws if one is not found.
            </summary>
            <param name="tableName"></param>
            <param name="contextType"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)">
            <summary>
            Lets you get an action path (URL) to an action for a particular table/action/entity instance combo.
            </summary>
            <param name="tableName"></param>
            <param name="action"></param>
            <param name="row">An object representing a single row of data in a table. Used to provide values for query string parameters.</param>
            <returns></returns>
        </member>
        <member name="P:System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath">
            <summary>
            allows for setting of the DynamicData folder for this mode. The default is ~/DynamicData/
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaModel.Default">
            <summary>
            Returns a reference to the first instance of MetaModel that is created in an app. Provides a simple way of referencing
            the default MetaModel instance. Applications that will use multiple models will have to provide their own way of storing
            references to any additional meta models. One way of looking them up is by using the GetModel method.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaModel.Tables">
            <summary>
            Returns a collection of all the tables that are part of the context, regardless of whether they are visible or not.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaModel.VisibleTables">
            <summary>
            Returns a collection of the currently visible tables for this context. Currently visible is defined as:
            - a table with scaffolding enabled
            - a table for which a custom page for the list action can be found and that can be read by the current User
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaModel.FieldTemplateFactory">
            <summary>
            Lets you set a custom IFieldTemplateFactory. An IFieldTemplateFactor lets you customize which field templates are created
            for the various columns.
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.IFieldTemplateHost">
            <summary>
            Interface implemented by the object that drives field template. Typically, this is the DynamicControl.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.IFieldTemplateHost.Column">
            <summary>
            The MetaColumn for which the field template is needed
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.IFieldTemplateHost.Mode">
            <summary>
            The mode (Readonly, Edit, Insert) for which the field template is needed
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.IFieldTemplateHost.FormattingOptions">
            <summary>
            The various formatting options that should be applied to the field template
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.IFieldTemplateHost.ValidationGroup">
            <summary>
            The validation group that the field template need to be in
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.FilterRepeater">
            <summary>
            Repeater Control that enumerates over all the filterable columns in a table
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.IWhereParametersProvider">
            <summary>
            Interface implemented by Parameter classes that want to contribute one or many Where parameters.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.IWhereParametersProvider.GetWhereParameters(System.Web.DynamicData.IDynamicDataSource)">
            <summary>
            Get the list of Where parameters that should be added to the Where param collection.
            Typically, this Where paramater is replaced by the parameters it contributes.
            </summary>
            <param name="dataSource">The data source that this parameter was found on</param>
            <returns>A list of Paramaters</returns>
        </member>
        <member name="M:System.Web.DynamicData.FilterRepeater.DataBind">
            <summary>
            same as base.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.FilterRepeater.GetFilteredColumns">
            <summary>
            Returns an enumeration of the columns belonging to the table associated with
            this filter repeater that are sortable (by default, foreign key and boolean columns)
            that are scaffoldable
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.FilterRepeater.OnFilterItemCreated(System.Web.UI.WebControls.RepeaterItem)">
            <summary>
            gets called for every item and alternating item template being instantiated by this
            repeater during databinding
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:System.Web.DynamicData.FilterRepeater.OnInit(System.EventArgs)">
            <summary>
            See base class documentation
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.FilterRepeater.OnItemCreated(System.Web.UI.WebControls.RepeaterItemEventArgs)">
            <summary>
            See base class documentation
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.FilterRepeater.GetWhereParameters(System.Web.DynamicData.IDynamicDataSource)">
            <summary>
            See IWhereParametersProvider
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FilterRepeater.ContextTypeName">
            <summary>
            The context that the filtered table belongs to
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FilterRepeater.DynamicFilterContainerId">
            <summary>
            ID of the filter control in the ItemTemplate. By default, it's "DynamicFilter".
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FilterRepeater.Table">
            <summary>
            Returns the table associated with this filter repeater.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FilterRepeater.TableName">
            <summary>
            Name of the table being filtered
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.ModelProviders.AssociationDirection">
            <summary>
            Specifies the association cardinality
            </summary>
        </member>
        <member name="F:System.Web.DynamicData.ModelProviders.AssociationDirection.OneToOne">
            <summary>
            1-1
            </summary>
        </member>
        <member name="F:System.Web.DynamicData.ModelProviders.AssociationDirection.OneToMany">
            <summary>
            one to many
            </summary>
        </member>
        <member name="F:System.Web.DynamicData.ModelProviders.AssociationDirection.ManyToOne">
            <summary>
            many to one
            </summary>
        </member>
        <member name="F:System.Web.DynamicData.ModelProviders.AssociationDirection.ManyToMany">
            <summary>
            many to many
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.ModelProviders.AssociationProvider">
            <summary>
            Base provider class for associations between columns
            Each provider type (e.g. Linq To Sql, Entity Framework, 3rd party) extends this class.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.ModelProviders.AssociationProvider.GetSortExpression(System.Web.DynamicData.ModelProviders.ColumnProvider)">
            <summary>
            Returns a string representing the sort expression that would be used for
            sorting the column represented by this association. The parameter is the
            property of the strongly typed entity used as the sort key for that entity.
            For example, assume that this association represents the Category column
            in the Products table. The sortColumn paramater is "CategoryName",
            meaning that this method is being asked to return the sort expression for
            sorting the Category column by the CategoryName property of the Category entity.
            The result sort expression would be "Category.CategoryName".
            The result of this method should be affected by whether the underlying data
            model is capable of sorting the entity by the given sort column (see
            ColumnProvider.IsSortable). The method can return a null value to indicate
            that sorting is not supported.
            </summary>
            <param name="sortColumn">the column to sort the entity by</param>
            <returns>the sort expression string, or null if sort is not supported for the
            given sort column</returns>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.AssociationProvider.Direction">
            <summary>
            The type of association
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.AssociationProvider.FromColumn">
            <summary>
            The source column of the association
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.AssociationProvider.ToTable">
            <summary>
            The destination table of the association
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.AssociationProvider.ToColumn">
            <summary>
            The destination column of the association
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.AssociationProvider.IsPrimaryKeyInThisTable">
            <summary>
            Returns true if the From Column part of the primary key of its table
            e.g. Order and Product are PKs in the Order_Details table
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.AssociationProvider.ForeignKeyNames">
            <summary>
            The names of the underlying foreign keys that make up this association
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.DataControlReference">
            <summary>
            Registers a DataControl for use with Dynamic Data
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DataControlReference.Owner">
            <summary>
            Dynamic data manager registering the data control
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DataControlReference.ControlID">
            <summary>
            ControlID of the DataControl
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.DynamicDataManager">
            <summary>
            Adds behavior to certain control to make them work with Dynamic Data 
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataManager.OnInit(System.EventArgs)">
            <summary>
            See base class documentation
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataManager.OnLoad(System.EventArgs)">
            <summary>
            See base class documentation
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataManager.RegisterControl(System.Web.UI.Control)">
            <summary>
            Register a data control to give it Dynamic Data behavior
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataManager.RegisterControl(System.Web.UI.Control,System.Boolean)">
            <summary>
            Register a data control to give it Dynamic Data behavior
            </summary>
            <param name="setSelectionFromUrl">When true, if a primary key is found in the route values
                (typically on the query string), it will get be set as the selected item. This only applies
                to list controls.</param>
        </member>
        <member name="P:System.Web.DynamicData.DynamicDataManager.AutoLoadForeignKeys">
            <summary>
            Causes foreign entities to be loaded as well setting the proper DataLoadOptions.
            Only works with Linq To Sql.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicDataManager.Visible">
            <summary>
            See base class documentation
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.ModelProviders.DataModelProvider">
            <summary>
            Base data model provider class 
            Each provider type (e.g. Linq To Sql, Entity Framework, 3rd party) extends this class.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.ModelProviders.DataModelProvider.CreateContext">
            <summary>
            Create an instance of the data context
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.DataModelProvider.Tables">
            <summary>
             The list of tables exposed by this data model
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.DataModelProvider.ContextType">
            <summary>
             The type of the data context
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.PageAction">
            <summary>
            Class that holds the name of common Actions for convenience
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.PageAction.Details">
            <summary>
            Returns "Details"
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.PageAction.List">
            <summary>
            Returns "List"
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.PageAction.Edit">
            <summary>
            Returns "Edit"
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.PageAction.Insert">
            <summary>
            Returns "Insert"
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.ModelProviders.TableProvider">
            <summary>
            Base provider class for tables.
            Each provider type (e.g. Linq To Sql, Entity Framework, 3rd party) extends this class.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.#ctor(System.Web.DynamicData.ModelProviders.DataModelProvider)">
            <summary>
            ctor
            </summary>
            <param name="model">the model this table belongs to</param>
        </member>
        <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.ToString">
            <summary>
            readable representation
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.GetQuery(System.Object)">
            <summary>
            The IQueryable that returns the elements of this table
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.EvaluateForeignKey(System.Object,System.String)">
            <summary>
            Get the value of a foreign key for a given row. By default, it just looks up a property by that name
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.CanDelete(System.Security.Principal.IPrincipal)">
            <summary>
            Returns whether the passed in user is allowed to delete items from the table
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.CanInsert(System.Security.Principal.IPrincipal)">
            <summary>
            Returns whether the passed in user is allowed to insert into the table
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.CanRead(System.Security.Principal.IPrincipal)">
            <summary>
            Returns whether the passed in user is allowed to read from the table
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.CanUpdate(System.Security.Principal.IPrincipal)">
            <summary>
            Returns whether the passed in user is allowed to make changes tothe table
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.Attributes">
            <summary>
            Provides access to attributes defined for the table represented by this provider.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.Name">
            <summary>
            The name of the table.  Typically, this is the name of the property in the data context class
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.EntityType">
            <summary>
            The CLR type that represents this table
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.Columns">
            <summary>
            The collection of columns in this table
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.DataModel">
            <summary>
            The data model provider that this table is part of
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.ParentEntityType">
            <summary>
            Return the parent type of this entity's inheritance hierarchy; if the type is at the top
            of an inheritance hierarchy or does not have any inheritance, will return null.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.RootEntityType">
            <summary>
            Return the root type of this entity's inheritance hierarchy; if the type is at the top
            of an inheritance hierarchy or does not have any inheritance, will return EntityType.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.DataContextPropertyName">
            <summary>
            Name of table coming from the property on the data context. E.g. the value is "Products" for
            a table that is part of the NorthwindDataContext.Products collection. If this value has not
            been set, it will return the value of the Name property.
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.DynamicControl">
            <summary>
            Control used to render Dynamic Data driven UI
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.IFieldFormattingOptions">
            <summary>
            Interface that encapsulates common formatting fields used in multiple places
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.IFieldFormattingOptions.ApplyFormatInEditMode">
            <summary>
            Same semantic as the same property on System.Web.UI.WebControls.BoundField
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.IFieldFormattingOptions.DataFormatString">
            <summary>
            Same semantic as the same property on System.Web.UI.WebControls.BoundField
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.IFieldFormattingOptions.ConvertEmptyStringToNull">
            <summary>
            Same semantic as the same property on System.Web.UI.WebControls.BoundField
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.IFieldFormattingOptions.NullDisplayText">
            <summary>
            Same semantic as the same property on System.Web.UI.WebControls.BoundField
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.IFieldFormattingOptions.HtmlEncode">
            <summary>
            Same semantic as the same property on System.Web.UI.WebControls.BoundField
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicControl.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicControl.#ctor(System.Web.UI.WebControls.DataBoundControlMode)">
            <param name="mode">The mode that the associated field template should be in (readonly, edit, insert)</param>
        </member>
        <member name="M:System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)">
            <summary>
            See base class documentation
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicControl.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the underlying field template control. If this DynamicControl's CssClass tag is defined,
            the underlying control's output will be wrapped in a span tag with that css class applied.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:System.Web.DynamicData.DynamicControl.GetAttribute(System.String)">
            <summary>
            See IAttributeAccessor
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicControl.SetAttribute(System.String,System.String)">
            <summary>
            See IAttributeAccessor
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicControl.DataField">
            <summary>
            The name of the column that this control handles
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicControl.Column">
            <summary>
            The MetaColumn that this control is working with
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicControl.UIHint">
            <summary>
            The UIHint used by this control to locate the proper field template
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicControl.CssClass">
            <summary>
            Gets or sets the CSS class property of the DynamicControl
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicControl.Table">
            <summary>
            The MetaTable that this control is associated with
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicControl.Mode">
            <summary>
            The rendering mode: readonly, edit or insert
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicControl.ValidationGroup">
            <summary>
            The validation group that the field template need to be in
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicControl.FieldTemplate">
            <summary>
            The Field Template that was created for this control
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull">
            <summary>
            See IFieldFormattingOptions
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode">
            <summary>
            See IFieldFormattingOptions
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicControl.DataFormatString">
            <summary>
            See IFieldFormattingOptions
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicControl.HtmlEncode">
            <summary>
            See IFieldFormattingOptions
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicControl.NullDisplayText">
            <summary>
            See IFieldFormattingOptions
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.EntityTemplateUserControl">
            <summary>
            Used as the base type for UserControls acting as entity templates.
            </summary>
        </member>
        <member name="T:System.Web.Resources.DynamicDataResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.AssociationProvider_DirectionDoesNotSupportSorting">
            <summary>
              Looks up a localized string similar to This association has direction {0} and does not support sorting..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.AssociationProvider_SortColumnDoesNotBelongToEndTable">
            <summary>
              Looks up a localized string similar to The given sort column does not belong to this association&apos;s end table..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.Common_PageCannotBeNull">
            <summary>
              Looks up a localized string similar to Page cannot be null. Please ensure that this operation is being performed in the context of an ASP.NET request..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.DataControlReference_ControlID">
            <summary>
              Looks up a localized string similar to The data control&apos;s control ID..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.DataSourceUtil_CantDetermineTable">
            <summary>
              Looks up a localized string similar to Unable to retrieve table from control &apos;{0}&apos; and a table name could not be inferred from the URL..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.DynamicControl_ControlMustHaveDateFieldAttribute">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; control &apos;{1}&apos; must have a DataField attribute..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.DynamicControl_ControlNeedsToExistInADataControlUsingDynamicDataSource">
            <summary>
              Looks up a localized string similar to The DynamicControl/DynamicField needs to exist inside a data control that is bound to a data source that supports Dynamic Data..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.DynamicControlDesignRender">
            <summary>
              Looks up a localized string similar to Databound.
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.DynamicControlParameter_DynamicDataSourceColumnNotCompatibleWithTable">
            <summary>
              Looks up a localized string similar to The column &apos;{0}&apos; is not compatible with the table &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.DynamicControlParameter_DynamicDataSourceControlCannotBeUsedAsParent">
            <summary>
              Looks up a localized string similar to The control &apos;{0}&apos; cannot be used as a parent control..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.DynamicControlParameter_DynamicDataSourceControlNotFound">
            <summary>
              Looks up a localized string similar to The control &apos;{0}&apos; could not be found..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.DynamicControlParameter_InvalidPK">
            <summary>
              Looks up a localized string similar to The DynamicControlParameter has no Name property, which means that you are setting the primary key. However, the control &apos;{0}&apos; is for table &apos;{1}&apos;, which is not compatible with table &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.DynamicDataExtensions_ContextTypePropertyOfDynamicDataSourceMustBeSpecified">
            <summary>
              Looks up a localized string similar to The ContextTypeName property of control &apos;{0}&apos; must specify a data context..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.DynamicDataManager_AutoLoadForeignKeys">
            <summary>
              Looks up a localized string similar to Whether foreign keys should be loaded automatically when executing Linq to SQL queries..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.DynamicDataManager_ControlNotFound">
            <summary>
              Looks up a localized string similar to A DataControl with ID &apos;{0}&apos; could not be found for the DynamicDataManager to register..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.DynamicDataManager_EnableQueryStringSelection">
            <summary>
              Looks up a localized string similar to Sets whether the selection may be set from key values in the query string..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.DynamicDataManager_OnlyOneDynamicDataManager">
            <summary>
              Looks up a localized string similar to Only one instance of a DynamicDataManager can be added to the page..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.DynamicDataManager_UnsupportedControl">
            <summary>
              Looks up a localized string similar to Controls of type {0} are not supported..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.DynamicEntity_CantFindTemplate">
            <summary>
              Looks up a localized string similar to Cannot find an entity template for table &apos;{0}&apos; under the entity template path: &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.DynamicEntity_ControlNeedsToExistInAContextSupportingDynamicData">
            <summary>
              Looks up a localized string similar to The DynamicEntity control &apos;{0}&apos; needs to exist in a data control that is bound to a data source that supports Dynamic Data..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.DynamicHyperLink_CannotBindToNull">
            <summary>
              Looks up a localized string similar to The DynamicHyperLink control &apos;{0}&apos; cannot data bind to a null item..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.DynamicHyperLink_CannotDetermineTable">
            <summary>
              Looks up a localized string similar to The DynamicHyperLink control &apos;{0}&apos; could not determine the MetaTable to base the link on. Make sure that the the control is in a page that is in the context of a Dynamic Data route or that the ContextTypeName and TableName properties are set correctly..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.DynamicHyperLink_CannotSetTableAndContextWhenDatabinding">
            <summary>
              Looks up a localized string similar to The DynamicHyperLink control &apos;{0}&apos; cannot have the properties &apos;TableName&apos; or &apos;ContextTypeName&apos; set when data binding..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.DynamicParameter_NeedExpansion">
            <summary>
              Looks up a localized string similar to You need to have a DynamicManager control on the page and register your data control with it in order to use a {0}..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.DynamicValidator_CannotConvertValue">
            <summary>
              Looks up a localized string similar to The value is not valid..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.DynamicValidator_ControlNotFound">
            <summary>
              Looks up a localized string similar to Unable to find control id &apos;{0}&apos; referenced by the &apos;ControlToValidate&apos; property of &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FieldTemplateFactory_FolderNotFound">
            <summary>
              Looks up a localized string similar to The field template folder &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FieldTemplateUserControl_ColumnIsNotChildren">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not a children column and cannot be used here..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FieldTemplateUserControl_ColumnIsNotFK">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not a foreign key column and cannot be used here..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FieldTemplateUserControl_CompareValidationError_Date">
            <summary>
              Looks up a localized string similar to The field {0} must be a valid date..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FieldTemplateUserControl_CompareValidationError_Decimal">
            <summary>
              Looks up a localized string similar to The field {0} must be a valid decimal..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FieldTemplateUserControl_CompareValidationError_Integer">
            <summary>
              Looks up a localized string similar to The field {0} must be a valid integer..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FilterRepeater_CantInferInformationFromUrl">
            <summary>
              Looks up a localized string similar to FilterRepeater &apos;{0}&apos; does not specify a context type name and a table name and this information could not be inferred from the URL. Set the ContextTypeName and TableName properties on this control or make sure that the path for this request maps to a registered Dynamic Data Route..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FilterRepeater_CouldNotFindControlInTemplate">
            <summary>
              Looks up a localized string similar to FilterRepeater &apos;{0}&apos; does not contain a control of type &apos;{1}&apos; with ID &apos;{2}&apos; in its item templates..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FilterRepeater_InvalidContextTypeName">
            <summary>
              Looks up a localized string similar to FilterRepeater &apos;{0}&apos; has an invalid context type name &apos;{1}&apos;. Make sure its ContextTypeName property contains a valid context type name..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FilterRepeater_InvalidTableName">
            <summary>
              Looks up a localized string similar to FilterRepeater &apos;{0}&apos; has an invalid table name &apos;{1}&apos;. Make sure its TableName property contains a valid table name..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FilterRepeater_MissingContextTypeName">
            <summary>
              Looks up a localized string similar to FilterRepeater &apos;{0}&apos; is associated with a table but is missing a context type name. Make sure its ContextTypeName property has a valid context type..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FilterRepeater_MissingTableName">
            <summary>
              Looks up a localized string similar to FilterRepeater &apos;{0}&apos; is associated with a context type but is missing the table name. Make sure its TableName property contains a valid table name..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FilterRepeater_UnknownContextTypeName">
            <summary>
              Looks up a localized string similar to FilterRepeater &apos;{0}&apos; has an unknown context type name &apos;{1}&apos; that is not registered with any model. Make sure its ContextTypeName property contains a valid context type name that has been registered with a MetaModel..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FilterUserControlBase_BooleanFilter_FalseString">
            <summary>
              Looks up a localized string similar to false.
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FilterUserControlBase_BooleanFilter_TrueString">
            <summary>
              Looks up a localized string similar to true.
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FilterUserControlBase_CantInferInformationFromRequestUrl">
            <summary>
              Looks up a localized string similar to The filter control &apos;{0}&apos; does not specify a context type name and a table name and this information could not be inferred from the URL. Set the ContextTypeName and TableName properties on this control or make sure that the path for this request maps to a registered Dynamic Data Route..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FilterUserControlBase_InvalidContextTypeName">
            <summary>
              Looks up a localized string similar to The filter control &apos;{0}&apos; has an invalid context type name &apos;{1}&apos;. Make sure its ContextTypeName property contains a valid context type name..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FilterUserControlBase_InvalidDataField">
            <summary>
              Looks up a localized string similar to The filter control &apos;{0}&apos; has an invalid data field name &apos;{1}&apos;. Make sure its DataField property contains a valid field name..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FilterUserControlBase_InvalidTableName">
            <summary>
              Looks up a localized string similar to The filter control &apos;{0}&apos; has an invalid table name &apos;{1}&apos;. Make sure its TableName property contains a valid table name..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FilterUserControlBase_MissingContextTypeName">
            <summary>
              Looks up a localized string similar to The filter control &apos;{0}&apos; is associated with a table but is missing the context type name. Make sure its ContextTypeName property contains a valid context type name..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FilterUserControlBase_MissingDataField">
            <summary>
              Looks up a localized string similar to The filter control &apos;{0}&apos; is not associated with a field. Make sure its DataField property contains a valid field name..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FilterUserControlBase_MissingTableName">
            <summary>
              Looks up a localized string similar to The filter control &apos;{0}&apos; is associated with a context type but is missing the table name. Make sure its TableName property contains a valid table name..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FilterUserControlBase_SelectedDataKeyNotSupportedForThisField">
            <summary>
              Looks up a localized string similar to The filter control &apos;{0}&apos; is associated with the &apos;{1}&apos; data field and does not support this operation..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FilterUserControlBase_UnknownContextType">
            <summary>
              Looks up a localized string similar to The filter control &apos;{0}&apos; has an unknown context type name &apos;{1}&apos; that is not registered with any model. Make sure its ContextTypeName property contains a valid context type name that has been registered with a MetaModel..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.FilterUserControlBase_UnsupportedDataField">
            <summary>
              Looks up a localized string similar to The filter control &apos;{0}&apos; does not support this operation because it is associated with an unsupported column &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.MetadataHandlerRegistration_ContextAlreadyRegistered">
            <summary>
              Looks up a localized string similar to The data context &apos;{0}&apos; has already been registered. Each data context can be registered only once..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.MetadataHandlerRegistration_InvalidDataContextType">
            <summary>
              Looks up a localized string similar to The provided data context type &apos;{0}&apos; must inherit from one of the following types: {1}..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.MetadataValidator_UnknownContextType">
            <summary>
              Looks up a localized string similar to The context is of an unknown type {0}..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.MetaModel_ContextAlreadyRegistered">
            <summary>
              Looks up a localized string similar to The context type &apos;{0}&apos; has already been registered. A context type can only be registered once..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.MetaModel_ContextDoesNotBelongToModel">
            <summary>
              Looks up a localized string similar to The context type {0} does not belong to any registered model..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.MetaModel_ContextFactoryReturnsNull">
            <summary>
              Looks up a localized string similar to The context factory function must return a non-null value..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.MetaModel_ContextTypeNotSupported">
            <summary>
              Looks up a localized string similar to The context type &apos;{0}&apos; is not supported..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.MetaModel_EntityNameConflict">
            <summary>
              Looks up a localized string similar to The name for entity &apos;{0}&apos; in context &apos;{1}&apos; conflicts with the name for the entity &apos;{2}&apos; in context &apos;{3}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.MetaModel_EntityNameOverrideConflict">
            <summary>
              Looks up a localized string similar to The name override &apos;{0}&apos; for entity &apos;{1}&apos; in context &apos;{2}&apos; conflicts with the name for the entity &apos;{3}&apos; in context &apos;{4}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.MetaModel_EntityTypeDoesNotBelongToModel">
            <summary>
              Looks up a localized string similar to The entity type {0} does not belong to any registered model..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.MetaModel_RegistrationErrorOccurred">
            <summary>
              Looks up a localized string similar to An error occurred during model registration and this operation cannot be performed..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.MetaModel_UnknownContextType">
            <summary>
              Looks up a localized string similar to Unknown context type &apos;{0}&apos;. This context type has not been registered..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.MetaModel_UnknownEntityType">
            <summary>
              Looks up a localized string similar to Unknown entity type &apos;{0}&apos;. This entity type is not part of any registered context..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.MetaModel_UnknownTable">
            <summary>
              Looks up a localized string similar to Unknown table name &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.MetaModel_UnknownTableInContext">
            <summary>
              Looks up a localized string similar to The context &apos;{0}&apos; does not have a table with the context-specific name &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.MetaTable_CantFindDisplayColumn">
            <summary>
              Looks up a localized string similar to The display column &apos;{0}&apos; specified for the table &apos;{1}&apos; does not exist..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.MetaTable_CantFindSortColumn">
            <summary>
              Looks up a localized string similar to The sort column &apos;{0}&apos; specified for the table &apos;{1}&apos; does not exist..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.MetaTable_CantUseChildrenColumnAsSortColumn">
            <summary>
              Looks up a localized string similar to Cannot use the column &apos;{0}&apos; in table &apos;{1}&apos; as a sort column because it represents a 1-to-many relationship..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.MetaTable_NoSuchColumn">
            <summary>
              Looks up a localized string similar to The table &apos;{0}&apos; does not have a column named &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.Misc_CannotConvertType">
            <summary>
              Looks up a localized string similar to Unable to convert type &apos;{0}&apos; to &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.Misc_NoNamingContainer">
            <summary>
              Looks up a localized string similar to The {0} control &apos;{1}&apos; does not have a naming container..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.QueryStringHandler_VirtualPathCannotBeEmpty">
            <summary>
              Looks up a localized string similar to The virtual path must be a non-empty string..
            </summary>
        </member>
        <member name="P:System.Web.Resources.DynamicDataResources.SchemaCreator_UnknownModel">
            <summary>
              Looks up a localized string similar to Unknown model type {0}..
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.TableNameAttribute">
            <summary>
            Allows for overriding the name of a table. (What previously TableOptions was used for).
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.TableNameAttribute.#ctor(System.String)">
            <summary>
            Creates a new instance
            </summary>
            <param name="name">the new name override</param>
        </member>
        <member name="P:System.Web.DynamicData.TableNameAttribute.Name">
            <summary>
            The new name of the table
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.DynamicDataRoute">
            <summary>
            Route used by Dynamic Data
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataRoute.#ctor(System.String)">
            <summary>
            Construct a DynamicDataRoute
            </summary>
            <param name="url">url passed to the base ctor</param>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)">
            <summary>
            See base class documentation
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataRoute.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)">
            <summary>
            See base class documentation
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataRoute.GetTableFromRouteData(System.Web.Routing.RouteData)">
            <summary>
            Extract the MetaTable from the RouteData. Fails if it can't find it
            </summary>
            <param name="routeData">The route data</param>
            <returns>The found MetaTable</returns>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataRoute.GetActionFromRouteData(System.Web.Routing.RouteData)">
            <summary>
            Extract the Action from the RouteData. Fails if it can't find it
            </summary>
            <param name="routeData">The route data</param>
            <returns>The found Action</returns>
        </member>
        <member name="P:System.Web.DynamicData.DynamicDataRoute.Table">
            <summary>
            Name of the table that this route applies to. Can be omitted.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicDataRoute.Action">
            <summary>
            Action that this route applies to. Can be omitted.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicDataRoute.ViewName">
            <summary>
            The ViewName is the name of the page used to handle the request. If omitted, it defaults to the Action name.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicDataRoute.Model">
            <summary>
            The MetaModel that this route applies to
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicDataRoute.RouteHandler">
            <summary>
            Strongly typed version of Route.RouteHandler for convenience
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.DataControlReferenceCollection">
            <summary>
            Represents a collectin of DataControlReferences
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.ContainerType">
            <summary>
            A data control container type
            </summary>
        </member>
        <member name="F:System.Web.DynamicData.ContainerType.List">
            <summary>
            A list container, such as ListView, GridView, Repeater (or a control implementing IDataBoundListControl)
            </summary>
        </member>
        <member name="F:System.Web.DynamicData.ContainerType.Item">
            <summary>
            An item container, such as DetailsView, FormView (or a control implementing IDataBoundItemControl)
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.MetaChildrenColumn">
            <summary>
            A special column representing 1-many relationships
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.MetaColumn">
            <summary>
            Object that represents a database column used by dynamic data
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaColumn.BuildAttributeCollection">
            <summary>
            Build the attribute collection, later made available through the Attributes property
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaColumn.Initialize">
            <summary>
            Perform initialization logic for this column
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaColumn.ResetMetadata">
            <summary>
            Resets cached column metadata (i.e. information coming from attributes). The metadata cache will be rebuilt
            the next time any metadata-derived information gets requested.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaColumn.ToString">
            <summary>
            Shows the column name. Mostly for debugging purpose.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.Attributes">
            <summary>
            The collection of metadata attributes that apply to this column
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.ColumnType">
            <summary>
            The CLR type of the property/column
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.DataTypeAttribute">
            <summary>
             The DataTypeAttribute used for the column
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.DefaultValue">
            <summary>
            This column's defalut value. It is typically used to populate the field when creating a new entry.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.Description">
            <summary>
            A description for this column
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.DisplayName">
            <summary>
            A friendly display name for this column
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.EntityTypeProperty">
            <summary>
            The PropertyInfo of the property that represents this column on the entity type
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.IsBinaryData">
            <summary>
            Does this column contain binary data
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.IsCustomProperty">
            <summary>
            meant to indicate that a member is an extra property that was declared in a partial class 
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint">
            <summary>
            Is this column a floating point type (float, double, decimal)
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent">
            <summary>
            This is set for columns that are part of a foreign key. Note that it is NOT set for
            the strongly typed entity ref columns (though those columns 'use' one or more columns
            where IsForeignKeyComponent is set).
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.IsGenerated">
            <summary>
            Is this column's value auto-generated in the database
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.IsInteger">
            <summary>
            Is this column a integer
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.IsLongString">
            <summary>
            Is this column a 'long' string. This is used to determine whether a textbox or textarea should be used.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.IsPrimaryKey">
            <summary>
            Is this column part if the table's primary key
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.IsReadOnly">
            <summary>
            Is this a readonly column
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.IsRequired">
            <summary>
            Does this column require a value
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.IsString">
            <summary>
            Is this column a string
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.MaxLength">
            <summary>
            The maximun length allowed for this column (applies to string columns)
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.Model">
            <summary>
            The MetaModel that this column belongs to
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.Name">
            <summary>
            The column's name
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.Prompt">
            <summary>
            A value that can be used as a watermark in UI bound to value represented by this column.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.Provider">
            <summary>
            the abstraction provider object that was used to construct this metacolumn.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.RequiredErrorMessage">
            <summary>
            The error message used if this column is required and it is set to empty
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.Scaffold">
            <summary>
            Is it a column that should be displayed (e.g. in a GridView's auto generate mode) 
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.ScaffoldNoCache">
            <summary>
            Look at various pieces of data on the column to determine whether it's
            Scaffold mode should be on.  This only gets called once per column and the result
            is cached
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.ShortDisplayName">
            <summary>
            A friendly short display name for this column. Meant to be used in GridView and similar controls where there might be
            limited column header space
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.SortExpression">
            <summary>
            The expression used to determine the sort order for this column
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.Table">
            <summary>
            The MetaTable that this column belongs to
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.TypeCode">
            <summary>
            The TypeCode of this column. It is derived from the ColumnType
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.UIHint">
            <summary>
             The UIHint used for the column
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode">
            <summary>
            Same semantic as the same property on System.Web.UI.WebControls.BoundField
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull">
            <summary>
            Same semantic as the same property on System.Web.UI.WebControls.BoundField
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.DataFormatString">
            <summary>
            Same semantic as the same property on System.Web.UI.WebControls.BoundField
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.HtmlEncode">
            <summary>
            Same semantic as the same property on System.Web.UI.WebControls.BoundField
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaColumn.NullDisplayText">
            <summary>
            Same semantic as the same property on System.Web.UI.WebControls.BoundField
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaChildrenColumn.Initialize">
            <summary>
            Perform initialization logic for this column
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath(System.Object)">
            <summary>
            Shortcut for getting the path to the list action for all entities in the child table that have the given row as a parent.
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="P:System.Web.DynamicData.MetaChildrenColumn.IsManyToMany">
            <summary>
            Returns whether this entity set column is in a Many To Many relationship
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaChildrenColumn.ChildTable">
            <summary>
            The child table (e.g. Products in Categories&lt;-Products)
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable">
            <summary>
            A pointer to the MetaColumn in the other table
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaChildrenColumn.SortExpressionInternal">
            <summary>
            Override disabling sorting
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.IFieldTemplateFactory">
            <summary>
            Interface implemented by objects that know how to create field temnplates
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)">
            <summary>
            Initialize the FieldTemplateFactory, passing it the meta model that it will work with
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)">
            <summary>
            Create a field template based on various pieces of data
            </summary>
            <param name="column">The MetaColumn for which the field template is needed</param>
            <param name="mode">The mode (Readonly, Edit, Insert) for which the field template is needed</param>
            <param name="uiHint">The UIHint (if any) that should affect the field template lookup</param>
            <returns></returns>
        </member>
        <member name="T:System.Web.DynamicData.IControlParameterTarget">
            <summary>
            Interface implemented by controls that can provide data to a DynamicControlParameter's.
            i.e. the control implmenting this interface can be set as the ControlId of the DynamicControlParameter.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.IControlParameterTarget.GetPropertyNameExpression(System.String)">
            <summary>
            Get the expression that can be used as a ControlParameter's 'PropertyName'
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.IControlParameterTarget.Table">
            <summary>
            The type of data being served by this provider
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.IControlParameterTarget.FilteredColumn">
            <summary>
            The column on which the parameter is being applied, if available.  e.g. a FilterUserControl
            can provide it, but a GridView selection cannot.
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.DynamicDataExtensions">
            <summary>
            Extension methods used by DynamicData
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataExtensions.GetTable(System.Web.DynamicData.IDynamicDataSource)">
            <summary>
            Return the MetaTable association with a datasource
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataExtensions.SetTable(System.Web.UI.IDataSource,System.Type)">
            <summary>
            Sets the MetaTable associated with a DataSource. Normally, this method will only be
            required if you're using inheritance, since the data source will need to know the exact
            type of the data that will be returned so that it can correctly set up the fields
            and filters.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataExtensions.SetTable(Microsoft.Web.Data.UI.WebControls.QueryExtender,System.Type)">
            <summary>
            Sets the MetaTable associated with a QueryExtender. Normally, this method will only be
            required if you're using inheritance, since the data source will need to know the exact
            type of the data that will be returned so that it can correctly set up the fields
            and filters.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataExtensions.SetTable(System.Web.UI.IDataSource,System.Web.DynamicData.MetaTable)">
            <summary>
            Sets the MetaTable associated with a DataSource. Normally, this method will only be
            required if you're using inheritance, since the data source will need to know the exact
            type of the data that will be returned so that it can correctly set up the fields
            and filters.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataExtensions.SetTable(Microsoft.Web.Data.UI.WebControls.QueryExtender,System.Web.DynamicData.MetaTable)">
            <summary>
            Sets the MetaTable associated with a QueryExtender. Normally, this method will only be
            required if you're using inheritance, since the data source will need to know the exact
            type of the data that will be returned so that it can correctly set up the fields
            and filters.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataExtensions.SetTableFromRoute(System.Web.UI.IDataSource)">
            <summary>
            Sets the MetaTable associated with a DataSource for any page which is displayed
            as part of a scaffold URL. It determines the actual table type from the URL.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataExtensions.SetTableFromRoute(Microsoft.Web.Data.UI.WebControls.QueryExtender)">
            <summary>
            Sets the MetaTable associated with a QueryExtender for any page which is displayed
            as part of a scaffold URL. It determines the actual table type from the URL.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataExtensions.ExpandDynamicWhereParameters(System.Web.DynamicData.IDynamicDataSource)">
            <summary>
            Expand Dynamic where parameter (e.g. DynamicControlParameter, DynamicQueryStringParameter) into
            'regular' parameters that the datasource can understand
            </summary>
            <param name="dataSource">The datasource which Where parameters need to be expanded</param>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(System.Web.UI.Control)">
            <summary>
            Find the containing data control, and return the data source it points to
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(System.Web.UI.Control)">
            <summary>
            Find the containing data control, and return the MetaTable associated with it, if any
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control,System.String)">
            <summary>
            Find the field template for a column within the current naming container
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataExtensions.EnablePersistedSelection(System.Web.UI.WebControls.BaseDataBoundControl)">
            <summary>
            Make the SelectedIndex sync up with the PersistedSelection. Concretely, what it means is that
            if you select a row and then page away (or sort), the selection remains on that row
            even if it's not currently visible.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys(Microsoft.Web.Data.UI.WebControls.LinqDataSource,System.Type)">
            <summary>
            Set the DataLoadOptions on a Linq To Sql datasource to force all the FK entities
            to be directly loaded.
            </summary>
            <param name="dataSource">The data source for which we want to preload FKs</param>
            <param name="rowType">The type of the entities returned by the data source</param>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataExtensions.FormatValue(System.Web.DynamicData.IFieldFormattingOptions,System.Object)">
            <summary>
            Apply potential HTML encoding and formatting to a string that needs to be displayed
            This logic is mostly copied from BoundField.FormatDataValue, but omits the old Whidbey behavior path
            </summary>
            <param name="fieldValue">The value that should be formatted</param>
            <param name="formattingOptions">The IFieldFormattingOptions to use. This is useful when using options different from the column's</param>
            <returns>the formatted value</returns>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataExtensions.FormatEditValue(System.Web.DynamicData.IFieldFormattingOptions,System.Object)">
            <summary>
            Similar to FormatValue, but the string is to be used when the field is in edit mode
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataExtensions.ConvertEditedValue(System.Web.DynamicData.IFieldFormattingOptions,System.String)">
            <summary>
            Return either the input value or null based on ConvertEmptyStringToNull and NullDisplayText
            </summary>
            <param name="formattingOptions">the formatting options object</param>
            <param name="value">The input value</param>
            <returns>The converted value</returns>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataExtensions.GetEnumType(System.Web.DynamicData.MetaColumn)">
            <summary>
            If this column represents an enumeration type, this method returns that type. The caloumn can represent
            an enumeration type if the underlying type is an enum, or if it is decoareted with EnumDataTypeAttribute.
            If this column does not represent an enum, this method returns null.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="P:System.Web.DynamicData.DynamicFilter.FilterTemplate">
            <summary>
            Returns the filter template that was created for this control.
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.DynamicFilterExpression">
            <summary>
            This is a Dynamic Data-specific extension of DataSourceExpression that works by forwarding the processing of an IQueryable to
            a specialized control such as QueryableFilterRepeater or DynamicFilter.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicFilterExpression.GetQueryable(System.Linq.IQueryable)">
            <summary>
            Delegates the processing of the source queryable to the control referenced by ControlID.
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="P:System.Web.DynamicData.DynamicFilterExpression.ControlID">
            <summary>
            References the ID of a QueryableFilterRepeater or DynamicFilter control on the page.
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.QueryableFilterRepeater">
            <summary>
            A templated control that automatically generates a collection of filters for a table associated with a given data source.
            It is designed to work with the QueryExtender architecture and it will not render anything unless it's referenced by a
            DynamicFilterExpression inside of a QueryExtender.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.QueryableFilterRepeater.DynamicFilterContainerId">
            <summary>
            The ID of a DynamicFilter control inside of the template that will be used configured to be a filter for a particular column.
            The default value is "DynamicFilter"
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.QueryableFilterRepeater.ItemTemplate">
            <summary>
            The template in which the layout of each filter can be specified. Just like ItemTempalte in Repeater.
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.FilterUserControlBase">
            <summary>
            Base class for the filter user control
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.FilterUserControlBase.PopulateListControl(System.Web.UI.WebControls.ListControl)">
            <summary>
            Populate a ListControl with all the items in the foreign table (or true/false for boolean fields)
            </summary>
            <param name="listControl"></param>
        </member>
        <member name="P:System.Web.DynamicData.FilterUserControlBase.TableName">
            <summary>
            Name of the table that the filter applies to
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FilterUserControlBase.DataField">
            <summary>
            Name of the column that the filter applies to
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FilterUserControlBase.ContextTypeName">
            <summary>
            The type of the context that the table/column is part of
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FilterUserControlBase.SelectedValue">
            <summary>
            The value selcted in the drop down
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FilterUserControlBase.SelectedDataKey">
            <summary>
            The DataKey of the selected item
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FilterUserControlBase.InitialValue">
            <summary>
            The initial value of the filter when it gets populated (i.e. the current value)
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FilterUserControlBase.Column">
            <summary>
            The column this filter applies to
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.QueryableFilterUserControl.PopulateListControl(System.Web.UI.WebControls.ListControl)">
            <summary>
            Populate a ListControl with all the items in the foreign table (or true/false for boolean fields)
            </summary>
            <param name="listControl"></param>
        </member>
        <member name="M:System.Web.DynamicData.QueryableFilterUserControl.OnFilterChanged">
            <summary>
            Raises the FilterChanged event. This is necessary to notify the data source that the filter selection
            has changed and the query needs to be reevaluated.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.QueryableFilterUserControl.FilterControl">
            <summary>
            Returns the data control that handles the filter inside the filter template. Can be null if the filter template does not override it.
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.DynamicHyperLink">
            <summary>
            <para>A control that displays links to table actions based on routing rules. It will not generate links for actions that are not
            allowed by the routing rules. It can work in 3 modes: explicit, databinding to MetaTable, or databinding to a data row.</para>
            <para>Databinding to MetaTable allows for creating links to actions for a collection of MetaTable objects (such as in the Default.aspx
            page in the project templates)</para>
            <para>Databinding to a data row allows for creating links to actions for data rows retrieved from a database. These are usually used with
            Edit and Details actions.</para>
            <para>Explicit mode allows for links to non-item-specific actions (like List and Insert) and is achieved by properly setting
            ContextTypeName, Table, and Action properties. This is done in the PreRender phase if the NavigateUrl property is null (i.e. it has not
            been set explicitly or did not get set in one of the databinding scenarios.)</para>
            <para>Extra route parameters can be provided by declaring expando attributes on the controls markup.</para>
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicHyperLink.Action">
            <summary>
            The name of the action
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicHyperLink.ContextTypeName">
            <summary>
            The name of the context type
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicHyperLink.DataField">
            <summary>
            The name of the column whose value will be used to populate the Text
            property if it is not already set in data binding scenarios.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicHyperLink.TableName">
            <summary>
            The name of the table
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.FieldTemplateUserControl">
            <summary>
            The base class for all field template user controls
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.IFieldTemplate">
            <summary>
            Interface that represents a field template. Though by default field templates are User Controls (ascx)
            they don't have to be.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.IFieldTemplate.SetHost(System.Web.DynamicData.IFieldTemplateHost)">
            <summary>
            Sets the IFieldTemplateHost used by this field template to know what column it is dealing with
            </summary>
            <param name="host"></param>
        </member>
        <member name="M:System.Web.DynamicData.FieldTemplateUserControl.GetColumnValue(System.Web.DynamicData.MetaColumn)">
            <summary>
            Get the value of a specific column in the current row
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.FieldTemplateUserControl.BuildForeignKeyPath(System.String)">
            <summary>
            Same as ForeignKeyPath, except that it allows the path part of the URL to be overriden. This is
            used when using pages that don't live under DynamicData/CustomPages.
            </summary>
            <param name="path">The path override</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.FieldTemplateUserControl.BuildChildrenPath(System.String)">
            <summary>
            Same as ChildrenPath, except that it allows the path part of the URL to be overriden. This is
            used when using pages that don't live under DynamicData/CustomPages.
            </summary>
            <param name="path">The path override</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.FieldTemplateUserControl.FindOtherFieldTemplate(System.String)">
            <summary>
            Return the field template for another column
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.FieldTemplateUserControl.PopulateListControl(System.Web.UI.WebControls.ListControl)">
            <summary>
            Only applies to FK columns. Populate the list control with all the values from the parent table 
            </summary>
            <param name="listControl">The control to be populated</param>
        </member>
        <member name="M:System.Web.DynamicData.FieldTemplateUserControl.GetSelectedValueString">
            <summary>
            Gets a string representation of the column's value so that it can be matched with
            values populated in a dropdown. This currently works for FK and Enum columns only.
            The method returns null for other column types.
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.FieldTemplateUserControl.ExtractForeignKey(System.Collections.IDictionary,System.String)">
            <summary>
            Only applies to FK columns. This is used when saving the value of a foreign key, typically selected
            from a drop down.
            </summary>
            <param name="dictionary">The dictionary that contains all the new values</param>
            <param name="selectedValue">The value to be saved. Typically, this comes from DropDownList.SelectedValue</param>
        </member>
        <member name="M:System.Web.DynamicData.FieldTemplateUserControl.FormatFieldValue(System.Object)">
            <summary>
            Apply potential HTML encoding and formatting to a string that needs to be displayed
            </summary>
            <param name="fieldValue">The value that should be formatted</param>
            <returns>the formatted value</returns>
        </member>
        <member name="M:System.Web.DynamicData.FieldTemplateUserControl.ConvertEditedValue(System.String)">
            <summary>
            Return either the input value or null based on ConvertEmptyStringToNull and NullDisplayText
            </summary>
            <param name="value">The input value</param>
            <returns>The converted value</returns>
        </member>
        <member name="M:System.Web.DynamicData.FieldTemplateUserControl.SetUpValidator(System.Web.UI.WebControls.BaseValidator)">
            <summary>
            Set up a validator for dynamic data use. It sets the ValidationGroup on all validators,
            and also performs additional logic for some specific validator types. e.g. for a RangeValidator
            it sets the range values if they exist on the model.
            </summary>
            <param name="validator">The validator to be set up</param>
        </member>
        <member name="M:System.Web.DynamicData.FieldTemplateUserControl.SetUpValidator(System.Web.UI.WebControls.BaseValidator,System.Web.DynamicData.MetaColumn)">
            <summary>
            Set up a validator for dynamic data use. It sets the ValidationGroup on all validators,
            and also performs additional logic for some specific validator types. e.g. for a RangeValidator
            it sets the range values if they exist on the model.
            </summary>
            <param name="validator">The validator to be set up</param>
            <param name="column">The column for which the validator is getting set</param>
        </member>
        <member name="M:System.Web.DynamicData.FieldTemplateUserControl.IgnoreModelValidationAttribute(System.Type)">
            <summary>
            This method instructs the DynamicValidator to ignore a specific type of model
            validation attributes. This is called when that attribute type is already being
            fully handled by an ASP.NET validator controls. Without this call, the validation
            could happen twice, resulting in a duplicated error message
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.FieldTemplateUserControl.ExtractValues(System.Collections.Specialized.IOrderedDictionary)">
            <summary>
            Implementation of IBindableControl.ExtractValues
            </summary>
            <param name="dictionary">The dictionary that contains all the new values</param>
        </member>
        <member name="P:System.Web.DynamicData.FieldTemplateUserControl.Host">
            <summary>
            The host that provides context to this field template
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FieldTemplateUserControl.FormattingOptions">
            <summary>
            The formatting options that need to be applied to this field template
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FieldTemplateUserControl.Column">
            <summary>
            The MetaColumn that this field template is working with
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FieldTemplateUserControl.ContainerType">
            <summary>
            The ContainerType in which this 
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FieldTemplateUserControl.Table">
            <summary>
            The MetaTable that this field's column belongs to
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FieldTemplateUserControl.ForeignKeyColumn">
            <summary>
            Casts the MetaColumn to a MetaForeignKeyColumn. Throws if it is not an FK column.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FieldTemplateUserControl.ChildrenColumn">
            <summary>
            Casts the MetaColumn to a MetaChildrenColumn. Throws if it is not an Children column.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FieldTemplateUserControl.Mode">
            <summary>
            The mode (readonly, edit, insert) that the field template should use
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FieldTemplateUserControl.MetadataAttributes">
            <summary>
            The collection of metadata attributes that apply to this column
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FieldTemplateUserControl.DataControl">
            <summary>
            Returns the data control that handles the field inside the field template
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FieldTemplateUserControl.Row">
            <summary>
            The current data object. Equivalent to Page.GetDataItem()
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FieldTemplateUserControl.FieldValue">
            <summary>
            The value of the Column in the current Row
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FieldTemplateUserControl.FieldValueString">
            <summary>
            Return the field value as a formatted string
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FieldTemplateUserControl.FieldValueEditString">
            <summary>
            Similar to FieldValueString, but the string is to be used when the field is in edit mode
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FieldTemplateUserControl.ForeignKeyPath">
            <summary>
            Only applies to FK columns. Returns a URL that links to the page that displays the details
            of the foreign key entity. e.g. In the Product table's Category column, this produces a link
            that goes to the details of the category that the product is in
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FieldTemplateUserControl.ChildrenPath">
            <summary>
            Only applies to Children columns. Returns a URL that links to the page that displays the list
            of children entities. e.g. In the Category table's Products column, this produces a link
            that goes to the list of Products that are in this Category.
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.DynamicQueryStringParameter">
            <summary>
            DynamicQueryStringParameter allows a datasource to have its primary key easily fed from the query string.
            It does not require any attributes, and works even for multi-part primary keys.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicQueryStringParameter.GetWhereParameters(System.Web.DynamicData.IDynamicDataSource)">
            <summary>
            See IWhereParametersProvider.GetWhereParameters
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicQueryStringParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)">
            <summary>
            same as base
            </summary>
            <param name="context"></param>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="T:System.Web.DynamicData.DynamicDataRouteHandler">
            <summary>
            Route handler used for Dynamic Data
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.CreateHandler(System.Web.DynamicData.DynamicDataRoute,System.Web.DynamicData.MetaTable,System.String)">
            <summary>
            Create a handler to process a Dynamic Data request
            </summary>
            <param name="route">The Route that was matched</param>
            <param name="table">The MetaTable found in the route</param>
            <param name="action">The Action found in the route</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.GetCustomPageVirtualPath(System.Web.DynamicData.MetaTable,System.String)">
            <summary>
            Build the path to a custom page. By default, it looks like ~/DynamicData/CustomPages/[tablename]/[viewname].aspx
            </summary>
            <param name="table">The MetaTable that the page is for</param>
            <param name="viewName">The view name</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.GetScaffoldPageVirtualPath(System.Web.DynamicData.MetaTable,System.String)">
            <summary>
            Build the path to a page template. By default, it looks like ~/DynamicData/PageTemplates/[tablename]/[viewname].aspx
            </summary>
            <param name="table">The MetaTable that the page is for</param>
            <param name="viewName">The view name</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.GetRequestContext(System.Web.HttpContext)">
            <summary>
            Return the RequestContext for this request. A new one is created if needed (can happen if the current request
            is not a Dynamic Data request)
            </summary>
            <param name="httpContext">The current HttpContext</param>
            <returns>The RequestContext</returns>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.GetRequestMetaTable(System.Web.HttpContext)">
            <summary>
            The MetaTable associated with the current HttpRequest. Can be null for non-Dynamic Data requests.
            </summary>
            <param name="httpContext">The current HttpContext</param>
        </member>
        <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.SetRequestMetaTable(System.Web.HttpContext,System.Web.DynamicData.MetaTable)">
            <summary>
            Set the MetaTable associated with the current HttpRequest.  Normally, this is set automatically from the
            route, but this method is useful to set the table when used outside of routing.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicDataRouteHandler.Model">
            <summary>
            The MetaModel that the handler is associated with
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.ControlFilterExpression">
            <summary>
            A Dynamic Data-specific implementation of DataSourceExpression that modifies an IQueryable based on a data key (selected row)
            in a data bound controls such as GridView, ListView, DetailsView, or FormView.
            If the Column property is left empty, the control treats the data key as the primary key of current table (this is useful 
            in a List-Details scenario where the databound control and the datasource are displaying items of the same type). If the
            Column property is not empty, this control treats the data key as a foreign key (this is useful in a Parent-Children scenario,
            where the databound control is displaying a list of Categories, and the data source is to be filtered to only display the
            Products that belong to the selected Category).
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ControlFilterExpression.ControlID">
            <summary>
            The ID of a data-bound control such as a GridView, ListView, DetailsView, or FormView whose data key will be used to build
            the expression that gets used in a QueryExtender. 
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ControlFilterExpression.Column">
            <summary>
            Optional property which when set indicates that the data key should be treated as a foreign key.
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.MetaForeignKeyColumn">
            <summary>
            A special column representing many-1 relationships
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.Initialize">
            <summary>
            Perform initialization logic for this column
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.ExtractForeignKey(System.Collections.IDictionary,System.String)">
            <summary>
            This is used when saving the value of a foreign key, e.g. when selected from a drop down.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyValues(System.Object)">
            <summary>
            Return the value of all the foreign keys components for the passed in row
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyString(System.Object)">
            <summary>
            Get a comma separated list of values representing the foreign key 
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyDetailsPath(System.Object)">
            <summary>
            Shortcut for getting the path to the details action for the given row
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="P:System.Web.DynamicData.MetaForeignKeyColumn.ParentTable">
            <summary>
            The parent table of the relationship (e.g. Categories in Products-&gt;Categories)
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaForeignKeyColumn.IsPrimaryKeyInThisTable">
            <summary>
            Returns true if this foriegn key column is part of the primary key of its table
            e.g. Order and Product are PKs in the Order_Details table
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaForeignKeyColumn.SortExpressionInternal">
            <summary>
            Override allowing for sorting by the display column of the parent table (e.g. in the Products table, the Category column
            will be sorted by the Category.Name column order)
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaForeignKeyColumn.ForeignKeyNames">
            <summary>
            The names of the underlying foreign keys that make up this association
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.FieldTemplateFactory">
            <summary>
            Default implementation of IFieldTemplateFactory. It uses user controls for the field templates.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.FieldTemplateFactory.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)">
            <summary>
            Returns the virtual path of the field template user control to be used, based on various pieces of data
            </summary>
            <param name="column">The MetaColumn for which the field template is needed</param>
            <param name="mode">The mode (Readonly, Edit, Insert) for which the field template is needed</param>
            <param name="uiHint">The UIHint (if any) that should affect the field template lookup</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)">
            <summary>
            Gets a chance to change the mode.  e.g. an Edit mode request can be turned into ReadOnly mode
            if the column is a primary key
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)">
            <summary>
            Build the virtual path to the field template user control based on the template name and mode.
            By default, it returns names that look like TemplateName_ModeName.ascx, in the folder specified
            by TemplateFolderVirtualPath.
            </summary>
            <param name="templateName"></param>
            <param name="column"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)">
            <summary>
            See IFieldTemplateFactory for details.
            </summary>
            <returns></returns>
        </member>
        <member name="P:System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath">
            <summary>
            Sets the folder containing the user controls. By default, this is ~/DynamicData/FieldTemplates/
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.FieldTemplateFactory.Model">
            <summary>
            The MetaModel that the factory is associated with
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.ModelProviders.ColumnProvider">
            <summary>
            Base provider class for columns.
            Each provider type (e.g. Linq To Sql, Entity Framework, 3rd party) extends this class.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.ModelProviders.ColumnProvider.#ctor(System.Web.DynamicData.ModelProviders.TableProvider)">
            <summary>
            ctor
            </summary>
            <param name="table">the table this column belongs to</param>
        </member>
        <member name="M:System.Web.DynamicData.ModelProviders.ColumnProvider.ToString">
            <summary>
            readable representation
            </summary>
            <returns></returns>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Name">
            <summary>
            The name of the column
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.ColumnType">
            <summary>
            The CLR type of the column
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsPrimaryKey">
            <summary>
            Is this column a primary key in its table
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsReadOnly">
            <summary>
            Specifies if this column is read only
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsGenerated">
            <summary>
            Is it a database generated column
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsSortable">
            <summary>
            Returns whether the underlying model supports sorting of the table on this column
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.MaxLength">
            <summary>
            The maximun length allowed for this column (applies to string columns)
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Nullable">
            <summary>
            Does it allow null values (meaning it is not required)
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsCustomProperty">
            <summary>
            meant to indicate that a member is an extra property that was declared in a partial class
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Association">
            <summary>
            If the column represents and association with anther table, this returns the association information.
            Otherwise, null is returned.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Table">
            <summary>
            The table that this column belongs to
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.EntityTypeProperty">
            <summary>
            The PropertyInfo of the property that represents this column on the entity type
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsForeignKeyComponent">
            <summary>
            This is set for columns that are part of a foreign key. Note that it is NOT set for
            the strongly typed entity ref columns (though those columns 'use' one or more columns
            where IsForeignKeyComponent is set).
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.Misc.FindControl(System.Web.UI.Control,System.String)">
            <devdoc>
            Walks up the stack of NamingContainers starting at 'control' to find a control with the ID 'controlID'.
            Copied from DataBoundControlHelper.FindControl (System.Web)
            </devdoc>
        </member>
        <member name="T:System.Web.DynamicData.DynamicValidator">
            <summary>
            Validator that enforces model validation. It can be used either at the field level or the entity level
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicValidator.ControlPropertiesValid">
            <summary>
            Overridden from base
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicValidator.EvaluateIsValid">
            <summary>
            Overridden from base
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicValidator.OnInit(System.EventArgs)">
            <summary>
            Overridden from base
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicValidator.ValidateException(System.Exception)">
            <summary>
            Called when an exception happens. Typically, this sets the ValidationException
            </summary>
            <param name="exception">The exception</param>
        </member>
        <member name="M:System.Web.DynamicData.DynamicValidator.GetValidationColumnNames(System.Web.DynamicData.MetaColumn)">
            <summary>
            Get the names of all the columns that can throw an exception that will affect the setting of the 
            value of the given column.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicValidator.ColumnName">
            <summary>
            The name of the column to be validated, or null for entity level validation
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicValidator.Column">
            <summary>
            The column to be validated, or null for entity level validation
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicValidator.ValidationException">
            <summary>
            The validation exception that occurred, if any
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.MetaTable">
            <summary>
            Represents a database table for use by dynamic data pages
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.BuildAttributeCollection">
            <summary>
            Build the attribute collection, made publicly available through the Attributes property
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)">
            <summary>
            Returns whether the passed in user is allowed to delete items from the table
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)">
            <summary>
            Returns whether the passed in user is allowed to insert into the table
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)">
            <summary>
            Returns whether the passed in user is allowed to read from the table
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)">
            <summary>
            Returns whether the passed in user is allowed to make changes tothe table
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)">
            <summary>
            Instantiate a MetaChildrenColumn object. Can be overridden to instantiate a derived type 
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)">
            <summary>
            Instantiate a MetaColumn object. Can be overridden to instantiate a derived type 
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.CreateContext">
            <summary>
            Instantiate a data context that this table belongs to. Uses the instatiotion method specified when the context was registered.
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)">
            <summary>
            Instantiate a MetaForeignKeyColumn object. Can be overridden to instantiate a derived type 
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)">
            <summary>
            Gets the action path for the given row (to get primary key values for query string filters, etc.)
            </summary>
            <param name="action"></param>
            <param name="row">the instance of the row</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)">
            <summary>
            Gets the action path for the given row (to get primary key values for query string filters, etc.)
            </summary>
            <param name="action"></param>
            <param name="row">the instance of the row</param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String)">
            <summary>
            Gets the action path for the current table and the passed in action
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Gets the action path for the current table and the passed in action. Also, include all the passed in
            route values in the path
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})">
            <summary>
            Gets the action path for the current table and the passed in action. Also, include the passed in
            primary key as part of the route.
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)">
            <summary>
            Use the passed in path and append to it query string parameters for the passed in primary key values
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.GetColumn(System.String)">
            <summary>
            Looks up a column by the given name. If no column is found, an exception is thrown.
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.GetDataKeyFromRoute">
            <summary>
            Look for this table's primary key in the route values (i.e. typically the query string).
            If they're all found, return a DataKey containing the primary key values. Otherwise return null.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)">
            <summary>
            Gets the value to be used as the display string for an instance of a row of this table when used in FK relationships.
            If the row is null, returns an empty string. If the entity class has an overidden ToString() method, returns the result
            of that method. Otherwise, returns the ToString representation of the value of the display column (as returned by the DisplayColumn
            property) for the given row.
            </summary>
            <param name="row">the instance of the row</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.GetFilteredColumns">
            <summary>
            Returns an enumeration of columns that are filterable by default. A column is filterable if it
            <ul>
            <li>is decorated with FilterAttribte with Enabled=true</li>
            <li>is scaffold, is not a custom property, and is either a FK column or a Bool column</li>
            </ul>
            The enumeration is ordered by the value of the FilterAttribute.Order property. If a column
            does not have that attribute, the value 0 is used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)">
            <summary>
            Get a dictionary of primary key names and their values for the given row instance
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)">
            <summary>
            Get a comma separated list of values representing the primary key for the given row instance
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})">
            <summary>
            Get a comma separated list of values representing the primary key 
            </summary>
            <param name="primaryKeyValues"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)">
            <summary>
            Get the value of the primary key components for a given row
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.GetQuery">
            <summary>
            Get the IQueryable for the entity type represented by this table (i.e. IQueryable of Product). Retrieves it from a new context 
            instantiated using the CreateContext().
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.GetQuery(System.Object)">
            <summary>
            Get the IQueryable for the entity type represented by this table (i.e. IQueryable of Product). Retrieves it from the provided
            context instance, or instantiates a new context using the CreateContext().
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)">
            <summary>
            Returns an enumeration of columns that are to be displayed in a scaffolded context. By default all columns with the Scaffold
            property set to true are included, with the exception of:
            <ul>
            <li>Long-string columns (IsLongString property set to true) when the inListControl flag is true</li>
            <li>Children columns when mode is equal to Insert</li>
            </ul>
            </summary>
            <param name="mode">The mode, such as ReadOnly, Edit, or Insert.</param>
            <param name="inListControl">A flag indicating if the table is being displayed as an individual entity or as part of list-grid.</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.GetTable(System.Type)">
            <summary>
            Gets the table associated with the given type, regardless of which model it belongs to.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.Initialize">
            <summary>
            Perform initialization logic for this table
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.ResetMetadata">
            <summary>
            Resets cached table metadata (i.e. information coming from attributes) as well as metadata of all columns.
            The metadata cache will be rebuilt the next time any metadata-derived information gets requested.
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)">
            <summary>
            Tries to find a column by the given name. If a column is found, it is assigned to the column
            variable and the method returns true. Otherwise, it returns false and column is null.
            </summary>
            <param name="columnName"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)">
            <summary>
            Gets the table associated with the given type, regardless of which model it belongs to.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaTable.Attributes">
            <summary>
            A collection of attributes declared on this entity type (i.e. class-level attributes).
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaTable.Columns">
            <summary>
            All columns
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaTable.DataContextPropertyName">
            <summary>
            Name of table coming from the property on the data context. E.g. the value is "Products" for a table that is part of
            the NorthwindDataContext.Products collection.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaTable.DataContextType">
            <summary>
            The type of the data context this table belongs to.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaTable.DisplayColumn">
            <summary>
            Returns the column being used for display values when entries in this table are used as parents in foreign key relationships.
            Which column to use can be specified using DisplayColumnAttribute. If the attribute is not present, the following heuristic is used:
            1. First non-PK string column
            2. First PK string column
            3. First PK non-string column
            4. First column
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaTable.DisplayName">
            <summary>
            Gets the string to be user-friendly string representing this table. Defaults to the value of the Name property.
            Can be customized using DisplayNameAttribute.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaTable.EntityType">
            <summary>
            Return the type of the Entity represented by this table (e.g. Product)
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames">
            <summary>
            Get a comma separated list of foreign key names.  This is useful to set the IncludePaths on an EntityDataSource
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaTable.HasPrimaryKey">
            <summary>
            Returns true if the table has a primary key
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaTable.IsReadOnly">
            <summary>
            Returns true if this is a read-only table or view(has not PK).
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaTable.ListActionPath">
            <summary>
            Gets the action path to the list action for this table
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaTable.Model">
            <summary>
            The model this table belongs to.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaTable.Name">
            <summary>
            Unique name of table. This name is unique within a given data context. (e.g. "MyCustomName_Products")
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaTable.PrimaryKeyColumns">
            <summary>
            Columns that constitute the primary key of this table
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaTable.Provider">
            <summary>
            The underlying provider for this column
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaTable.RootEntityType">
            <summary>
            Return the root type of this entity's inheritance hierarchy; if the type is at the top
            of an inheritance hierarchy or does not have any inheritance, will return EntityType.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaTable.Scaffold">
            <summary>
            Whether or not to scaffold. This can be customized using ScaffoldAttribute
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaTable.SortColumn">
            <summary>
            Gets the column used as the sorting column when used FK relationships. Defaults to the same column that is returned by DisplayColumn.
            Can be customized using options on DisplayColumnAttribute.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.MetaTable.SortDescending">
            <summary>
            Returns true if the entries in this column are meant to be sorted in a descending order when used as parents in a FK relationship.
            Can be declared using options on DisplayColumnAttribute
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.DynamicField">
            <summary>
            Field type that can display DynamicData UI
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicField.CreateField">
            <summary>
            See base class documentation
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)">
            <summary>
            See base class documentation
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicField.CreateDynamicControl">
            <summary>
            Provides a way for classes deriving from DynamicField to override how DynamicControl gets created.
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)">
            <summary>
            Provides a hook to further modify a DynamicControl that was created by the InitializeCell method
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)">
            <summary>
            See base class documentation
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)">
            <summary>
            See base class documentation
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicField.GetAttribute(System.String)">
            <summary>
            See IAttributeAccessor
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)">
            <summary>
            See IAttributeAccessor
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicField.HeaderText">
            <summary>
            same as base. uses column's display name if possible
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicField.SortExpression">
            <summary>
            same as base. uses column's SortExpression property, if possible.
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicField.DataField">
            <summary>
            The name of the column that this field handles
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicField.Column">
            <summary>
            The MetaColumn that this fiedl is working with
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicField.UIHint">
            <summary>
            An optional UIHint specified on the field
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicField.ValidationGroup">
            <summary>
            The validation group that the field template needs to be in
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull">
            <summary>
            See IFieldFormattingOptions
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode">
            <summary>
            See IFieldFormattingOptions
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicField.DataFormatString">
            <summary>
            See IFieldFormattingOptions
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicField.HtmlEncode">
            <summary>
            See IFieldFormattingOptions
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.DynamicField.NullDisplayText">
            <summary>
            See IFieldFormattingOptions
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.DynamicControlParameter">
            <summary>
            DynamicControlParameter is similar to ControlParameter, but understainds higher level concepts.  e.g. in a 
            master-details scenario using a GridView and DetailsView, you only need to point the DetailsView's datasource
            to the GridView (using a DynamicControlParameter), and it does the right thing.  This works even for
            multi-part primary keys
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicControlParameter.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicControlParameter.#ctor(System.String)">
            <summary>
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicControlParameter.GetWhereParameters(System.Web.DynamicData.IDynamicDataSource)">
            <summary>
            See IWhereParametersProvider.GetWhereParameters
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.DynamicControlParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)">
            <summary>
            same as base
            </summary>
            <param name="context"></param>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="P:System.Web.DynamicData.DynamicControlParameter.ControlId">
            <summary>
            The ID of the control from which the parameter gets its data
            </summary>
        </member>
        <member name="T:System.Web.DynamicData.ContextConfiguration">
            <summary>
            Allows for providing extra config information to a context
            </summary>
        </member>
        <member name="M:System.Web.DynamicData.ContextConfiguration.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ContextConfiguration.MetadataProviderFactory">
            <summary>
            An optional factory for obtaining a metadata source for a given entity type
            </summary>
        </member>
        <member name="P:System.Web.DynamicData.ContextConfiguration.ScaffoldAllTables">
            <summary>
            scaffold all tables
            </summary>
        </member>
    </members>
</doc>
