<!-- 
// Copyright © Microsoft Corporation.
// This source is subject to the Microsoft Source License for Silverlight Controls (March 2008 Release).
// Please see http://go.microsoft.com/fwlink/?LinkID=111693 for details. 
// All other rights reserved.
-->
 
<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"> 


    <!-- Default style for System.Windows.Controls.Button --> 
    <Style TargetType="Button">
        <Setter Property="IsEnabled" Value="true" />
        <Setter Property="IsTabStop" Value="true" /> 
        <Setter Property="Background" Value="#FF003255" /> 
        <Setter Property="Foreground" Value="#FF313131" />
        <Setter Property="MinWidth" Value="5" /> 
        <Setter Property="MinHeight" Value="5" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" /> 
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="TextAlignment" Value="Left" /> 
        <Setter Property="TextWrapping" Value="NoWrap" /> 
        <!-- Cannot currently parse FontFamily type in XAML so it's being set in code -->
        <!-- <Setter Property="FontFamily" Value="Trebuchet MS" /> --> 
        <Setter Property="FontSize" Value="11" />
        <!-- Cannot currently parse FontWeight type in XAML so it's being set in code -->
        <!-- <Setter Property="FontWeight" Value="Bold" /> --> 
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button"> 
                    <Grid x:Name="RootElement"> 
                        <Grid.Resources>
                            <!-- Visual constants used by the template --> 
                            <Color x:Key="LinearBevelLightStartColor">#FCFFFFFF</Color>
                            <Color x:Key="LinearBevelLightEndColor">#F4FFFFFF</Color>
                            <Color x:Key="LinearBevelDarkStartColor">#E0FFFFFF</Color> 
                            <Color x:Key="LinearBevelDarkEndColor">#B2FFFFFF</Color>
                            <Color x:Key="MouseOverLinearBevelDarkEndColor">#7FFFFFFF</Color>
                            <Color x:Key="HoverLinearBevelLightStartColor">#FCFFFFFF</Color> 
                            <Color x:Key="HoverLinearBevelLightEndColor">#EAFFFFFF</Color> 
                            <Color x:Key="HoverLinearBevelDarkStartColor">#D8FFFFFF</Color>
                            <Color x:Key="HoverLinearBevelDarkEndColor">#4CFFFFFF</Color> 
                            <Color x:Key="CurvedBevelFillStartColor">#B3FFFFFF</Color>
                            <Color x:Key="CurvedBevelFillEndColor">#3CFFFFFF</Color>
                            <SolidColorBrush x:Key="BorderBrush" Color="#FF000000" /> 
                            <SolidColorBrush x:Key="AccentBrush" Color="#FFFFFFFF" />
                            <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF" />
                            <LinearGradientBrush x:Key="FocusedStrokeBrush" StartPoint="0.5,0" EndPoint="0.5,1"> 
                                <GradientStop Color="#B2FFFFFF" Offset="0" /> 
                                <GradientStop Color="#51FFFFFF" Offset="1" />
                                <GradientStop Color="#66FFFFFF" Offset="0.325" /> 
                                <GradientStop Color="#1EFFFFFF" Offset="0.325" />
                            </LinearGradientBrush>
 
                            <!-- Visual states of the template -->
                            <Storyboard x:Key="Normal State" />
                            <Storyboard x:Key="MouseOver State"> 
                                <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="LinearBevelDarkEnd" Storyboard.TargetProperty="Color" To="{StaticResource MouseOverLinearBevelDarkEndColor}" /> 
                            </Storyboard>
                            <Storyboard x:Key="Pressed State"> 
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd" Storyboard.TargetProperty="Offset" To=".2" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightStart" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelLightEndColor}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelLightEndColor}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkStart" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelDarkStartColor}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkEnd" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelDarkEndColor}" />
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="DownStroke" Storyboard.TargetProperty="Opacity" To="1" /> 
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="0" /> 
                            </Storyboard>
                            <Storyboard x:Key="Disabled State"> 
                                <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="Disabled" Storyboard.TargetProperty="Opacity" To="1" />
                            </Storyboard>
                        </Grid.Resources> 

                        <Rectangle x:Name="Background" RadiusX="4" RadiusY="4" Fill="{TemplateBinding Background}" />
                        <Rectangle x:Name="BackgroundGradient" RadiusX="4" RadiusY="4" StrokeThickness="1" Stroke="{StaticResource BorderBrush}"> 
                            <Rectangle.Fill> 
                                <LinearGradientBrush StartPoint="0.7,0" EndPoint="0.7,1">
                                    <GradientStop x:Name="LinearBevelLightStart" Color="{StaticResource LinearBevelLightStartColor}" Offset="0" /> 
                                    <GradientStop x:Name="LinearBevelLightEnd" Color="{StaticResource LinearBevelLightEndColor}" Offset="0.35" />
                                    <GradientStop x:Name="LinearBevelDarkStart" Color="{StaticResource LinearBevelDarkStartColor}" Offset="0.35" />
                                    <GradientStop x:Name="LinearBevelDarkEnd" Color="{StaticResource LinearBevelDarkEndColor}" Offset="1" /> 
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle> 
                        <Grid x:Name="CurvedBevelScale" Margin="2"> 
                            <Grid.RowDefinitions>
                                <RowDefinition Height="7*" /> 
                                <RowDefinition Height="3*" />
                            </Grid.RowDefinitions>
                            <Path x:Name="CurvedBevel" Stretch="Fill" Margin="3,0,3,0" Data="F1 M 0,0.02 V 0.15 C 0.15,0.22 0.30,0.25 0.50,0.26 C 0.70,0.26 0.85,0.22 1,0.15 V 0.02 L 0.97,0 H 0.02 L 0,0.02 Z"> 
                                <Path.Fill>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop x:Name="CurvedBevelFillStart" Color="{StaticResource CurvedBevelFillStartColor}" Offset="0" /> 
                                        <GradientStop x:Name="CurvedBevelFillEnd" Color="{StaticResource CurvedBevelFillEndColor}" Offset="1" /> 
                                    </LinearGradientBrush>
                                </Path.Fill> 
                            </Path>
                        </Grid>
                        <Rectangle x:Name="Accent" RadiusX="3" RadiusY="3" Margin="1" Stroke="{StaticResource AccentBrush}" StrokeThickness="1" /> 
                        <Grid x:Name="FocusVisualElement" Visibility="Collapsed">
                            <Rectangle RadiusX="3" RadiusY="3" Margin="2" Stroke="{StaticResource AccentBrush}" StrokeThickness="1" />
                            <Rectangle RadiusX="3" RadiusY="3" Stroke="{TemplateBinding Background}" StrokeThickness="2" /> 
                            <Rectangle RadiusX="3" RadiusY="3" Stroke="{StaticResource FocusedStrokeBrush}" StrokeThickness="2" /> 
                        </Grid>
                        <Grid x:Name="DownStroke" Opacity="0"> 
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="1" Opacity="0.05" Margin="1,2,1,1" />
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="1" Opacity="0.05" Margin="1,1.75,1,1" />
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="1" Opacity="0.05" Margin="1,1.5,1,1" /> 
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="1" Opacity="0.05" Margin="1,1.25,1,1" />
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="1" Opacity="1" Margin="1" />
                            <Rectangle RadiusX="4" RadiusY="4" StrokeThickness="1"  Margin="1"> 
                                <Rectangle.Stroke> 
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#A5FFFFFF" Offset="0" /> 
                                        <GradientStop Color="#FFFFFFFF" Offset="1" />
                                    </LinearGradientBrush>
                                </Rectangle.Stroke> 
                            </Rectangle>
                        </Grid>
                        <ContentPresenter 
                          Content="{TemplateBinding Content}" 
                          ContentTemplate="{TemplateBinding ContentTemplate}"
                          FontFamily="{TemplateBinding FontFamily}" 
                          FontSize="{TemplateBinding FontSize}"
                          FontStretch="{TemplateBinding FontStretch}"
                          FontStyle="{TemplateBinding FontStyle}" 
                          FontWeight="{TemplateBinding FontWeight}"
                          Foreground="{TemplateBinding Foreground}"
                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                          Padding="{TemplateBinding Padding}" 
                          TextAlignment="{TemplateBinding TextAlignment}"
                          TextDecorations="{TemplateBinding TextDecorations}" 
                          TextWrapping="{TemplateBinding TextWrapping}"
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                          Margin="4,5,4,4" /> 
                        <Rectangle x:Name="Disabled" RadiusX="4" RadiusY="4" Fill="{StaticResource DisabledBrush}" Opacity="0" IsHitTestVisible="false" />
                    </Grid>
                </ControlTemplate> 
            </Setter.Value> 
        </Setter>
    </Style> 


 
    <!-- Default style for System.Windows.Controls.CheckBox -->
    <Style TargetType="CheckBox">
        <!-- Cannot currently parse bool? type in XAML so it's being set in code --> 
        <!-- <Setter Property="IsEnabled" Value="false" /> --> 
        <Setter Property="IsEnabled" Value="true" />
        <Setter Property="IsTabStop" Value="true" /> 
        <Setter Property="Background" Value="#FF003255" />
        <Setter Property="Foreground" Value="#FF313131" />
        <Setter Property="Margin" Value="0" /> 
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Arrow" /> 
        <Setter Property="TextAlignment" Value="Left" /> 
        <Setter Property="TextWrapping" Value="NoWrap" />
        <!-- Cannot currently parse FontFamily type in XAML so it's being set in code --> 
        <!-- <Setter Property="FontFamily" Value="Trebuchet MS" /> -->
        <Setter Property="FontSize" Value="11" />
        <!-- Cannot currently parse FontWeight type in XAML so it's being set in code --> 
        <!-- <Setter Property="FontWeight" Value="Bold" /> -->
        <Setter Property="Template">
            <Setter.Value> 
                <ControlTemplate TargetType="CheckBox"> 
                    <Grid x:Name="RootElement" Cursor="Arrow">
                        <Grid.Resources> 
                            <!-- Visual constants used by the template -->
                            <SolidColorBrush x:Key="Background" Color="#FF003255" />
                            <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF" /> 
                            <LinearGradientBrush x:Key="BoxStrokeBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Color="#FF000000" Offset="0" />
                                <GradientStop Color="#FF000000" Offset="1" /> 
                                <GradientStop Color="#FF000000" Offset="0.325" /> 
                                <GradientStop Color="#FF000000" Offset="0.325" />
                            </LinearGradientBrush> 
                            <LinearGradientBrush x:Key="FocusedStrokeBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Color="#B2FFFFFF" Offset="0" />
                                <GradientStop Color="#51FFFFFF" Offset="1" /> 
                                <GradientStop Color="#66FFFFFF" Offset="0.325" />
                                <GradientStop Color="#1EFFFFFF" Offset="0.325" />
                            </LinearGradientBrush> 
                            <Color x:Key="BorderColor">#FF000000</Color> 
                            <Color x:Key="IconColor">#FF313131</Color>
                            <Color x:Key="PressedIconColor">#FF000000</Color> 
                            <Color x:Key="MiddleBoxStrokeBrush">#FFADADAD</Color>
                            <Color x:Key="MiddleBoxStrokeBrushOver">#FF656565</Color>
                            <Color x:Key="LinearBevelLightStartColor">#FFFFFFFF</Color> 
                            <Color x:Key="LinearBevelLightEndColor">#FFFFFFFF</Color>
                            <Color x:Key="LinearBevelDarkStartColor">#FFFFFFFF</Color>
                            <Color x:Key="LinearBevelDarkEndColor">#FFFFFFFF</Color> 
                            <Color x:Key="LinearBevelLightStartColor2">#FCFFFFFF</Color> 
                            <Color x:Key="LinearBevelLightEndColor2">#F4FFFFFF</Color>
                            <Color x:Key="LinearBevelDarkStartColor2">#E0FFFFFF</Color> 
                            <Color x:Key="LinearBevelDarkEndColor2">#19FFFFFF</Color>
                            <Color x:Key="LinearBevelLightEndColor3">#FCFFFFFF</Color>
                            <Color x:Key="LinearBevelDarkStartColor3">#FCFFFFFF</Color> 
                            <Color x:Key="LinearBevelDarkEndColor3">#FCFFFFFF</Color>
                            <Color x:Key="LinearBevelIndeterminateStartColor2">#BFFFFFFF</Color>
                            <Color x:Key="LinearBevelIndeterminateEndColor2">#E0FFFFFF</Color> 
                            <Color x:Key="FocusColor">#FF333333</Color> 

                            <!-- Visual states of the template --> 
                            <Storyboard x:Key="Normal State" />
                            <Storyboard x:Key="Checked State">
                                <DoubleAnimation Duration="0:0:0.0" Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="Opacity" To="1" /> 
                            </Storyboard>
                            <Storyboard x:Key="Indeterminate State">
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="BoxMiddleBackground" Storyboard.TargetProperty="Opacity" To="1" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightStart2" Storyboard.TargetProperty="Color" To="{StaticResource LinearBevelIndeterminateStartColor2}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd2" Storyboard.TargetProperty="Color" To="{StaticResource LinearBevelIndeterminateEndColor2}" />
                            </Storyboard> 
                            <Storyboard x:Key="MouseOver Unchecked State">
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="Box" Storyboard.TargetProperty="Opacity" To=".65" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="BoxMiddleStroke" Storyboard.TargetProperty="Color" To="{StaticResource MiddleBoxStrokeBrushOver}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd2" Storyboard.TargetProperty="Color" To="{StaticResource LinearBevelLightEndColor3}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkStart2" Storyboard.TargetProperty="Color" To="{StaticResource LinearBevelDarkStartColor3}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkEnd2" Storyboard.TargetProperty="Color" To="{StaticResource LinearBevelDarkEndColor3}" /> 
                            </Storyboard> 
                            <Storyboard x:Key="MouseOver Checked State">
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="Box" Storyboard.TargetProperty="Opacity" To=".65" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="BoxMiddleStroke" Storyboard.TargetProperty="Color" To="{StaticResource MiddleBoxStrokeBrushOver}" />
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="Opacity" To="1" />
                            </Storyboard> 
                            <Storyboard x:Key="MouseOver Indeterminate State">
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="Box" Storyboard.TargetProperty="Opacity" To=".65" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="BoxMiddleStroke" Storyboard.TargetProperty="Color" To="{StaticResource MiddleBoxStrokeBrushOver}" /> 
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="BoxMiddleBackground" Storyboard.TargetProperty="Opacity" To="1" /> 
                            </Storyboard>
                            <Storyboard x:Key="Pressed Unchecked State"> 
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="Box" Storyboard.TargetProperty="Opacity" To=".35" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="BoxMiddleStroke" Storyboard.TargetProperty="Color" To="{StaticResource MiddleBoxStrokeBrushOver}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd2" Storyboard.TargetProperty="Color" To="{StaticResource LinearBevelLightEndColor3}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkStart2" Storyboard.TargetProperty="Color" To="{StaticResource LinearBevelDarkStartColor3}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkEnd2" Storyboard.TargetProperty="Color" To="{StaticResource LinearBevelDarkEndColor3}" />
                            </Storyboard> 
                            <Storyboard x:Key="Pressed Checked State"> 
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="Box" Storyboard.TargetProperty="Opacity" To=".35" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="IconColor" Storyboard.TargetProperty="Color" To="{StaticResource PressedIconColor}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="BoxMiddleStroke" Storyboard.TargetProperty="Color" To="{StaticResource MiddleBoxStrokeBrushOver}" />
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="Opacity" To="1" />
                            </Storyboard> 
                            <Storyboard x:Key="Pressed Indeterminate State">
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="Box" Storyboard.TargetProperty="Opacity" To=".35" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="BoxMiddleStroke" Storyboard.TargetProperty="Color" To="{StaticResource MiddleBoxStrokeBrushOver}" /> 
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="BoxMiddleBackground" Storyboard.TargetProperty="Opacity" To="1" /> 
                            </Storyboard>
                            <Storyboard x:Key="Disabled Unchecked State"> 
                                <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="DisabledBox" Storyboard.TargetProperty="Opacity" To="1" />
                            </Storyboard>
                            <Storyboard x:Key="Disabled Checked State"> 
                                <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="DisabledBox" Storyboard.TargetProperty="Opacity" To="1" />
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="Opacity" To="1" />
                            </Storyboard> 
                            <Storyboard x:Key="Disabled Indeterminate State"> 
                                <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="DisabledBox" Storyboard.TargetProperty="Opacity" To="1" />
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="BoxMiddleBackground" Storyboard.TargetProperty="Opacity" To="1" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightStart2" Storyboard.TargetProperty="Color" To="{StaticResource LinearBevelIndeterminateStartColor2}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd2" Storyboard.TargetProperty="Color" To="{StaticResource LinearBevelIndeterminateEndColor2}" />
                            </Storyboard> 
                        </Grid.Resources>

                        <Grid.ColumnDefinitions> 
                            <ColumnDefinition Width="Auto" /> 
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions> 

                        <!-- CheckBox visual -->
                        <Rectangle x:Name="BoxBackground" Width="13" Height="13" RadiusX="1" RadiusY="1" StrokeThickness="1" Stroke="{StaticResource BoxStrokeBrush}" Fill="{TemplateBinding Background}" VerticalAlignment="Center" /> 
                        <Rectangle x:Name="Box" Width="12" Height="12" RadiusX="1" RadiusY="1" StrokeThickness="0" VerticalAlignment="Center" Opacity="1">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.7,0" EndPoint="0.7,1"> 
                                    <GradientStop x:Name="LinearBevelLightStart" Color="{StaticResource LinearBevelLightStartColor}" Offset="0" /> 
                                    <GradientStop x:Name="LinearBevelLightEnd" Color="{StaticResource LinearBevelLightEndColor}" Offset="0.35" />
                                    <GradientStop x:Name="LinearBevelDarkStart" Color="{StaticResource LinearBevelDarkStartColor}" Offset="0.35" /> 
                                    <GradientStop x:Name="LinearBevelDarkEnd" Color="{StaticResource LinearBevelDarkEndColor}" Offset="1" />
                                </LinearGradientBrush>
                            </Rectangle.Fill> 
                        </Rectangle>
                        <Rectangle x:Name="BoxMiddleBackground" Width="9" Height="9" RadiusX="1" RadiusY="1" StrokeThickness=".5" Fill="{TemplateBinding Background}" VerticalAlignment="Center" Opacity=".20" />
                        <Rectangle x:Name="BoxMiddle" Width="9" Height="9" RadiusX=".75" RadiusY=".75" StrokeThickness=".5" VerticalAlignment="Center"> 
                            <Rectangle.Stroke> 
                                <SolidColorBrush x:Name="BoxMiddleStroke"  Color="{StaticResource MiddleBoxStrokeBrush}" />
                            </Rectangle.Stroke> 
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.7,0" EndPoint="0.7,1">
                                    <GradientStop x:Name="LinearBevelLightStart2" Color="{StaticResource LinearBevelLightStartColor2}" Offset="0" /> 
                                    <GradientStop x:Name="LinearBevelLightEnd2" Color="{StaticResource LinearBevelLightEndColor2}" Offset="0.35" />
                                    <GradientStop x:Name="LinearBevelDarkStart2" Color="{StaticResource LinearBevelDarkStartColor2}" Offset="0.35" />
                                    <GradientStop x:Name="LinearBevelDarkEnd2" Color="{StaticResource LinearBevelDarkEndColor2}" Offset="1" /> 
                                </LinearGradientBrush> 
                            </Rectangle.Fill>
                        </Rectangle> 
                        <!-- Check visual -->
                        <Path x:Name="CheckIcon" Width="10" Height="10.25" StrokeThickness="0" Margin="1,0,0,1" Stretch="Fill" Opacity="0" Data="M102.25328,600.04001 L104.24903,598.36361 106.83701,601.34354 C106.83701,601.34354 107.69255,599.2869 108.115,597.98927 109.23287,594.55556 109.34883,594.62845 110.1473,593.3508 111.28679,591.5275 114.50233,591.36146 114.50233,591.36146 114.50233,591.36146 112.68588,593.07898 112.02753,594.15635 111.14921,595.59371 109.68054,598.69111 109.39256,599.26693 108.99332,600.06522 107.15683,604.13837 107.15683,604.13837 Z">
                            <Path.Fill> 
                                <SolidColorBrush x:Name="IconColor" Color="{StaticResource IconColor}" />
                            </Path.Fill>
                        </Path> 
                        <!-- Focus indicator --> 
                        <Rectangle Grid.Column="1" x:Name="ContentFocusVisualElement" StrokeDashCap="Round" Margin="2" StrokeDashArray=".2 2" Visibility="Collapsed" IsHitTestVisible="false">
                            <Rectangle.Stroke> 
                                <SolidColorBrush Color="{StaticResource FocusColor}" />
                            </Rectangle.Stroke>
                        </Rectangle> 
                        <!-- CheckBox content -->
                        <ContentPresenter
                          x:Name="Content" 
                          Grid.Column="1" 
                          Content="{TemplateBinding Content}"
                          ContentTemplate="{TemplateBinding ContentTemplate}" 
                          Background="Transparent"
                          FontFamily="{TemplateBinding FontFamily}"
                          FontSize="{TemplateBinding FontSize}" 
                          FontStretch="{TemplateBinding FontStretch}"
                          FontStyle="{TemplateBinding FontStyle}"
                          FontWeight="{TemplateBinding FontWeight}" 
                          Foreground="{TemplateBinding Foreground}" 
                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                          Padding="{TemplateBinding Padding}" 
                          TextAlignment="{TemplateBinding TextAlignment}"
                          TextDecorations="{TemplateBinding TextDecorations}"
                          TextWrapping="{TemplateBinding TextWrapping}" 
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                          Margin="6,5.5,4,4"
                          IsHitTestVisible="true" /> 
                        <!-- Disabled --> 
                        <Rectangle x:Name="DisabledBox" Width="13" Height="13" RadiusX="1" RadiusY="1" StrokeThickness=".75" Stroke="{StaticResource DisabledBrush}" Fill="{StaticResource DisabledBrush}" VerticalAlignment="Center" Opacity="0" />
                    </Grid> 
                </ControlTemplate>
            </Setter.Value>
        </Setter> 
    </Style>

 
 
    <!-- Default style for System.Windows.Controls.ContentControl -->
    <Style TargetType="ContentControl"> 
        <Setter Property="IsEnabled" Value="true" />
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="HorizontalContentAlignment" Value="Left" /> 
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="TextAlignment" Value="Left" /> 
        <Setter Property="TextWrapping" Value="NoWrap" /> 
        <!-- Cannot currently parse FontFamily type in XAML so it's being set in code -->
        <!-- <Setter Property="FontFamily" Value="Trebuchet MS" /> --> 
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Template">
            <Setter.Value> 
                <ControlTemplate TargetType="ContentControl">
                    <ContentPresenter
                      Content="{TemplateBinding Content}" 
                      ContentTemplate="{TemplateBinding ContentTemplate}" 
                      Cursor="{TemplateBinding Cursor}"
                      FontFamily="{TemplateBinding FontFamily}" 
                      FontSize="{TemplateBinding FontSize}"
                      FontStretch="{TemplateBinding FontStretch}"
                      FontStyle="{TemplateBinding FontStyle}" 
                      FontWeight="{TemplateBinding FontWeight}"
                      Foreground="{TemplateBinding Foreground}"
                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                      Padding="{TemplateBinding Padding}" 
                      TextAlignment="{TemplateBinding TextAlignment}"
                      TextDecorations="{TemplateBinding TextDecorations}" 
                      TextWrapping="{TemplateBinding TextWrapping}"
                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                </ControlTemplate> 
            </Setter.Value>
        </Setter>
    </Style> 
 

 
    <!-- Default style for System.Windows.Controls.ContentPresenter -->
    <Style TargetType="controls:ContentPresenter" xmlns:controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls">
        <Setter Property="Foreground" Value="#FF000000" /> 
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="TextAlignment" Value="Left" /> 
        <Setter Property="TextWrapping" Value="NoWrap" /> 
        <!-- Cannot currently parse FontFamily type in XAML -->
        <!-- <Setter Property="FontFamily" Value="Trebuchet MS" /> --> 
        <Setter Property="FontSize" Value="11" />
    </Style>
 


    <!-- Default style for System.Windows.Controls.HyperlinkButton --> 
    <Style TargetType="HyperlinkButton"> 
        <Setter Property="IsEnabled" Value="true" />
        <Setter Property="IsTabStop" Value="true" /> 
        <Setter Property="Foreground" Value="#FF417DA5" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="TextAlignment" Value="Left" /> 
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="TextWrapping" Value="NoWrap" /> 
        <!-- Cannot currently parse TextDecorationCollection type in XAML so it's being set in code --> 
        <!-- <Setter Property="TextDecorations" Value="Underline" /> -->
        <!-- Cannot currently parse FontFamily type in XAML so it's being set in code --> 
        <!-- <Setter Property="FontFamily" Value="Trebuchet MS" /> -->
        <Setter Property="FontSize" Value="11" />
        <!-- Cannot currently parse FontWeight type in XAML so it's being set in code --> 
        <!-- <Setter Property="FontWeight" Value="Bold" /> -->
        <Setter Property="Template">
            <Setter.Value> 
                <ControlTemplate TargetType="HyperlinkButton"> 
                    <Grid x:Name="RootElement" Cursor="{TemplateBinding Cursor}">
                        <Grid.Resources> 
                            <!-- Visual constants used by the template -->
                            <Color x:Key="FocusColor">#FF333333</Color>
                            <SolidColorBrush x:Name="HoverColor" Color="#FF99C3F7"/> 

                            <!-- Visual states of the template -->
                            <Storyboard x:Key="Normal State" /> 
                        </Grid.Resources> 

                        <!-- Focus indicator --> 
                        <Rectangle x:Name="FocusVisualElement" StrokeDashCap="Round" StrokeDashArray=".2 5" Visibility="Collapsed" IsHitTestVisible="false">
                            <Rectangle.Stroke>
                                <SolidColorBrush Color="{StaticResource FocusColor}" /> 
                            </Rectangle.Stroke>
                        </Rectangle>
                        <!-- HyperlinkButton content --> 
                        <ContentPresenter 
                          x:Name="Normal"
                          Background="{TemplateBinding Background}" 
                          Content="{TemplateBinding Content}"
                          ContentTemplate="{TemplateBinding ContentTemplate}"
                          FontFamily="{TemplateBinding FontFamily}" 
                          FontSize="{TemplateBinding FontSize}"
                          FontStretch="{TemplateBinding FontStretch}"
                          FontStyle="{TemplateBinding FontStyle}" 
                          FontWeight="{TemplateBinding FontWeight}" 
                          Foreground="{TemplateBinding Foreground}"
                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                          Padding="{TemplateBinding Padding}"
                          TextAlignment="{TemplateBinding TextAlignment}"
                          TextDecorations="{TemplateBinding TextDecorations}" 
                          TextWrapping="{TemplateBinding TextWrapping}"
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                          Margin="0,-2,0,0" /> 
                    </Grid> 
                </ControlTemplate>
            </Setter.Value> 
        </Setter>
    </Style>
 


    <!-- Default style for System.Windows.Controls.ListBox --> 
    <Style TargetType="ListBox"> 
        <!-- Should use Setter when supported by Silverlight
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" /> 
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" /> -->
        <Setter Property="Template">
            <Setter.Value> 
                <ControlTemplate TargetType="ListBox">
                    <Grid>
                        <Border BorderBrush="#FF000000" BorderThickness="1" CornerRadius="1"> 
                            <Border BorderBrush="#FFFFFFFF" BorderThickness="1" CornerRadius="1"> 
                                <ScrollViewer x:Name="ScrollViewerElement" Padding="{TemplateBinding Padding}">
                                    <ItemsPresenter /> 
                                </ScrollViewer>
                            </Border>
                        </Border> 
                    </Grid>
                </ControlTemplate>
            </Setter.Value> 
        </Setter> 
    </Style>
 


    <!-- Default style for System.Windows.Controls.ListBoxItem --> 
    <Style TargetType="ListBoxItem">
        <Setter Property="IsEnabled" Value="true" />
        <Setter Property="Foreground" Value="#FF000000" /> 
        <Setter Property="HorizontalContentAlignment" Value="Left" /> 
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Cursor" Value="Arrow" /> 
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="NoWrap" />
        <!-- Cannot currently parse FontFamily type in XAML so it's being set in code --> 
        <!-- <Setter Property="FontFamily" Value="Trebuchet MS" /> -->
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Background" Value="White" /> 
        <Setter Property="Padding" Value="2,0,0,0" /> 
        <Setter Property="Template">
            <Setter.Value> 
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid x:Name="RootElement" Background="{TemplateBinding Background}">
                        <Grid.Resources> 
                            <Storyboard x:Key="Normal State" />
                            <!-- <Storyboard x:Key="Unfocused Selected State"/> -->
                            <Storyboard x:Key="Normal Selected State"> 
                                <ColorAnimation Storyboard.TargetName="fillStop0" Storyboard.TargetProperty="Color" Duration="0" To="#FFD9EFFF"/> 
                                <ColorAnimation Storyboard.TargetName="fillStop1" Storyboard.TargetProperty="Color" Duration="0" To="#FFBDD2E6"/>
                                <ColorAnimation Storyboard.TargetName="fillStop2" Storyboard.TargetProperty="Color" Duration="0" To="#FFA1B6CD"/> 

                                <ColorAnimation Storyboard.TargetName="strokeStop0" Storyboard.TargetProperty="Color" Duration="0" To="#FF77B9EB"/>
                                <ColorAnimation Storyboard.TargetName="strokeStop1" Storyboard.TargetProperty="Color" Duration="0" To="#FF4887CD"/> 
                            </Storyboard>
                            <Storyboard x:Key="MouseOver State">
                                <ColorAnimation Storyboard.TargetName="fillStop0" Storyboard.TargetProperty="Color" Duration="0" To="#FFF9FAFA"/> 
                                <ColorAnimation Storyboard.TargetName="fillStop1" Storyboard.TargetProperty="Color" Duration="0" To="#FFE6EFF7"/> 
                                <ColorAnimation Storyboard.TargetName="fillStop2" Storyboard.TargetProperty="Color" Duration="0" To="#FFD3E4F5"/>
 
                                <ColorAnimation Storyboard.TargetName="strokeStop0" Storyboard.TargetProperty="Color" Duration="0" To="#00000000"/>
                                <ColorAnimation Storyboard.TargetName="strokeStop1" Storyboard.TargetProperty="Color" Duration="0" To="#00000000"/>
                            </Storyboard> 
                            <!-- <Storyboard x:Key="MouseOver Unfocused Selected State"/> -->
                            <Storyboard x:Key="MouseOver Selected State">
                                <ColorAnimation Storyboard.TargetName="fillStop0" Storyboard.TargetProperty="Color" Duration="0" To="#FFF9FAFA"/> 
                                <ColorAnimation Storyboard.TargetName="fillStop1" Storyboard.TargetProperty="Color" Duration="0" To="#FFE6EFF7"/> 
                                <ColorAnimation Storyboard.TargetName="fillStop2" Storyboard.TargetProperty="Color" Duration="0" To="#FFD3E4F5"/>
 
                                <ColorAnimation Storyboard.TargetName="strokeStop0" Storyboard.TargetProperty="Color" Duration="0" To="#FF77B9EB"/>
                                <ColorAnimation Storyboard.TargetName="strokeStop1" Storyboard.TargetProperty="Color" Duration="0" To="#FF4887CD"/>
                            </Storyboard> 
                        </Grid.Resources>

                        <Grid.RowDefinitions> 
                            <RowDefinition Height="*"/> 
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions> 

                        <Rectangle IsHitTestVisible="False">
                            <Rectangle.Fill> 
                                <LinearGradientBrush StartPoint="0.316111,0.0165521" EndPoint="0.316111,0.724833">
                                    <GradientStop Name="fillStop0" Color="#00000000" Offset="0"/>
                                    <GradientStop Name="fillStop1" Color="#00000000" Offset="0.682203"/> 
                                    <GradientStop Name="fillStop2" Color="#00000000" Offset="1"/> 
                                </LinearGradientBrush>
                            </Rectangle.Fill> 
                            <Rectangle.Stroke>
                                <LinearGradientBrush StartPoint="0.318122,0.0360108" EndPoint="0.318122,0.715784">
                                    <GradientStop Name="strokeStop0" Color="#00000000" Offset="0"/> 
                                    <GradientStop Name="strokeStop1" Color="#00000000" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Stroke> 
                        </Rectangle> 

                        <Rectangle x:Name="FocusVisualElement" Stroke="Black" StrokeDashArray="1,2" Visibility="Collapsed" IsHitTestVisible="False"/> 
                        <ContentPresenter
                          Content="{TemplateBinding Content}"
                          ContentTemplate="{TemplateBinding ContentTemplate}" 
                          FontFamily="{TemplateBinding FontFamily}"
                          FontSize="{TemplateBinding FontSize}"
                          FontStretch="{TemplateBinding FontStretch}" 
                          FontStyle="{TemplateBinding FontStyle}" 
                          FontWeight="{TemplateBinding FontWeight}"
                          Foreground="{TemplateBinding Foreground}" 
                          HorizontalAlignment="Left"
                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                          Padding="{TemplateBinding Padding}" 
                          TextAlignment="{TemplateBinding TextAlignment}"
                          TextDecorations="{TemplateBinding TextDecorations}"
                          TextWrapping="{TemplateBinding TextWrapping}" 
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" /> 
                        <Line Stretch="Fill" Grid.Row="1" X1="0" X2="1" Y1="0" Y2="0" StrokeThickness="1" Stroke="#FFA4A4A4" IsHitTestVisible="False"/>
                    </Grid> 
                </ControlTemplate>
            </Setter.Value>
        </Setter> 
    </Style>

 
 
    <!-- Default style for System.Windows.Controls.RadioButton -->
    <Style TargetType="RadioButton"> 
        <!-- Cannot currently parse bool? type in XAML so it's being set in code -->
        <!-- <Setter Property="IsChecked" Value="false" /> -->
        <Setter Property="IsEnabled" Value="true" /> 
        <Setter Property="IsTabStop" Value="true" />
        <Setter Property="Background" Value="#FF003255" />
        <Setter Property="Foreground" Value="#FF313131" /> 
        <Setter Property="Margin" Value="0" /> 
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" /> 
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="NoWrap" /> 
        <!-- Cannot currently parse FontFamily type in XAML so it's being set in code -->
        <!-- <Setter Property="FontFamily" Value="Trebuchet MS" /> -->
        <Setter Property="FontSize" Value="11" /> 
        <!-- Cannot currently parse FontWeight type in XAML so it's being set in code --> 
        <!-- <Setter Property="FontWeight" Value="Bold" /> -->
        <Setter Property="Template"> 
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid x:Name="RootElement" Cursor="Arrow"> 
                        <Grid.Resources>
                            <!-- Visual constants used by the template -->
                            <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF" /> 
                            <LinearGradientBrush x:Key="BoxStrokeBrush" StartPoint="0.5,0" EndPoint="0.5,1"> 
                                <GradientStop Color="#FF000000" Offset="0" />
                                <GradientStop Color="#FF000000" Offset="1" /> 
                                <GradientStop Color="#FF000000" Offset="0.325" />
                                <GradientStop Color="#FF000000" Offset="0.325" />
                            </LinearGradientBrush> 
                            <LinearGradientBrush x:Key="FocusedStrokeBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Color="#B2FFFFFF" Offset="0" />
                                <GradientStop Color="#51FFFFFF" Offset="1" /> 
                                <GradientStop Color="#66FFFFFF" Offset="0.325" /> 
                                <GradientStop Color="#1EFFFFFF" Offset="0.325" />
                            </LinearGradientBrush> 
                            <Color x:Key="BorderColor">#FF000000</Color>
                            <Color x:Key="IconColor">#FF313131</Color>
                            <Color x:Key="PressedIconColor">#FFFFFFFF</Color> 
                            <Color x:Key="IconColorBack">#FFFFFFFF</Color>
                            <Color x:Key="MiddleBoxStrokeBrush">#FFADADAD</Color>
                            <Color x:Key="MiddleBoxStrokeBrushOver">#FF656565</Color> 
                            <Color x:Key="LinearBevelLightStartColor">#FFFFFFFF</Color> 
                            <Color x:Key="LinearBevelLightEndColor">#FFFFFFFF</Color>
                            <Color x:Key="LinearBevelDarkStartColor">#FFFFFFFF</Color> 
                            <Color x:Key="LinearBevelDarkEndColor">#FFFFFFFF</Color>
                            <Color x:Key="LinearBevelLightStartColor2">#FCFFFFFF</Color>
                            <Color x:Key="LinearBevelLightEndColor2">#e4FFFFFF</Color> 
                            <Color x:Key="LinearBevelDarkStartColor2">#E0FFFFFF</Color>
                            <Color x:Key="LinearBevelDarkEndColor2">#19FFFFFF</Color>
                            <Color x:Key="LinearBevelLightEndColor3">#FCFFFFFF</Color> 
                            <Color x:Key="LinearBevelDarkStartColor3">#FCFFFFFF</Color> 
                            <Color x:Key="LinearBevelDarkEndColor3">#FCFFFFFF</Color>
                            <Color x:Key="LinearBevelIndeterminateStartColor2">#A0FFFFFF</Color> 
                            <Color x:Key="LinearBevelIndeterminateEndColor2">#19FFFFFF</Color>
                            <Color x:Key="FocusColor">#FF333333</Color>
 
                            <!-- Visual states of the template -->
                            <Storyboard x:Key="Normal State" />
                            <Storyboard x:Key="Checked State"> 
                                <DoubleAnimation Duration="0:0:0.0" Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="Opacity" To="1" /> 
                                <DoubleAnimation Duration="0:0:0.0" Storyboard.TargetName="CheckIconBack" Storyboard.TargetProperty="Opacity" To=".35" />
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="BoxMiddleBackground" Storyboard.TargetProperty="Opacity" To="1" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightStart2" Storyboard.TargetProperty="Color" To="{StaticResource LinearBevelIndeterminateStartColor2}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd2" Storyboard.TargetProperty="Color" To="{StaticResource LinearBevelIndeterminateStartColor2}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkStart2" Storyboard.TargetProperty="Color" To="{StaticResource LinearBevelIndeterminateStartColor2}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkEnd2" Storyboard.TargetProperty="Color" To="{StaticResource LinearBevelIndeterminateStartColor2}" />
                            </Storyboard>
                            <Storyboard x:Key="MouseOver Unchecked State"> 
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="Box" Storyboard.TargetProperty="Opacity" To=".65" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="BoxMiddleStroke" Storyboard.TargetProperty="Color" To="{StaticResource MiddleBoxStrokeBrushOver}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd2" Storyboard.TargetProperty="Color" To="{StaticResource LinearBevelLightEndColor3}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkStart2" Storyboard.TargetProperty="Color" To="{StaticResource LinearBevelDarkStartColor3}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkEnd2" Storyboard.TargetProperty="Color" To="{StaticResource LinearBevelDarkEndColor3}" />
                            </Storyboard> 
                            <Storyboard x:Key="MouseOver Checked State">
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="Box" Storyboard.TargetProperty="Opacity" To=".65" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="BoxMiddleStroke" Storyboard.TargetProperty="Color" To="{StaticResource MiddleBoxStrokeBrushOver}" /> 
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="Opacity" To="1" /> 
                                <DoubleAnimation Duration="0:0:0.0" Storyboard.TargetName="CheckIconBack" Storyboard.TargetProperty="Opacity" To=".3" />
                            </Storyboard> 
                            <Storyboard x:Key="Pressed Unchecked State">
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="Box" Storyboard.TargetProperty="Opacity" To=".35" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="BoxMiddleStroke" Storyboard.TargetProperty="Color" To="{StaticResource MiddleBoxStrokeBrushOver}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd2" Storyboard.TargetProperty="Color" To="{StaticResource LinearBevelLightEndColor3}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkStart2" Storyboard.TargetProperty="Color" To="{StaticResource LinearBevelDarkStartColor3}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkEnd2" Storyboard.TargetProperty="Color" To="{StaticResource LinearBevelDarkEndColor3}" /> 
                            </Storyboard> 
                            <Storyboard x:Key="Pressed Checked State">
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="Box" Storyboard.TargetProperty="Opacity" To=".35" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="BoxMiddleStroke" Storyboard.TargetProperty="Color" To="{StaticResource MiddleBoxStrokeBrushOver}" />
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="Opacity" To="1" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkStart2" Storyboard.TargetProperty="Color" To="{StaticResource LinearBevelDarkStartColor2}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkEnd2" Storyboard.TargetProperty="Color" To="{StaticResource LinearBevelDarkEndColor2}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightStart2" Storyboard.TargetProperty="Color" To="{StaticResource LinearBevelLightStartColor2}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd2" Storyboard.TargetProperty="Color" To="{StaticResource LinearBevelLightEndColor2}" /> 
                            </Storyboard> 
                            <Storyboard x:Key="Disabled Unchecked State">
                                <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="DisabledBox" Storyboard.TargetProperty="Opacity" To="1" /> 
                            </Storyboard>
                            <Storyboard x:Key="Disabled Checked State">
                                <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="DisabledBox" Storyboard.TargetProperty="Opacity" To="1" /> 
                                <DoubleAnimation Duration="0:0:0.0" Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="Opacity" To="1" />
                                <DoubleAnimation Duration="0:0:0.0" Storyboard.TargetName="CheckIconBack" Storyboard.TargetProperty="Opacity" To=".25" />
                            </Storyboard> 
                        </Grid.Resources> 

                        <Grid.ColumnDefinitions> 
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions> 

                        <!-- RadioButton visual -->
                        <Ellipse x:Name="BoxBackground" Width="13" Height="13" StrokeThickness="1" Stroke="{StaticResource BoxStrokeBrush}" Fill="{TemplateBinding Background}" VerticalAlignment="Center" /> 
                        <Ellipse x:Name="Box" Width="12" Height="12" StrokeThickness="0" VerticalAlignment="Center" Opacity="1"> 
                            <Ellipse.Fill>
                                <LinearGradientBrush StartPoint="0.7,0" EndPoint="0.7,1"> 
                                    <GradientStop x:Name="LinearBevelLightStart" Color="{StaticResource LinearBevelLightStartColor}" Offset="0" />
                                    <GradientStop x:Name="LinearBevelLightEnd" Color="{StaticResource LinearBevelLightEndColor}" Offset="0.35" />
                                    <GradientStop x:Name="LinearBevelDarkStart" Color="{StaticResource LinearBevelDarkStartColor}" Offset="0.35" /> 
                                    <GradientStop x:Name="LinearBevelDarkEnd" Color="{StaticResource LinearBevelDarkEndColor}" Offset="1" />
                                </LinearGradientBrush>
                            </Ellipse.Fill> 
                        </Ellipse> 
                        <Ellipse x:Name="BoxMiddleBackground" Width="9" Height="9" StrokeThickness=".5" Fill="{TemplateBinding Background}" VerticalAlignment="Center" Opacity=".20" />
                        <Ellipse x:Name="BoxMiddle" Width="9" Height="9" StrokeThickness=".5" VerticalAlignment="Center"> 
                            <Ellipse.Stroke>
                                <SolidColorBrush x:Name="BoxMiddleStroke"  Color="{StaticResource MiddleBoxStrokeBrush}" />
                            </Ellipse.Stroke> 
                            <Ellipse.Fill>
                                <LinearGradientBrush StartPoint="0.7,0" EndPoint="0.7,1">
                                    <GradientStop x:Name="LinearBevelLightStart2" Color="{StaticResource LinearBevelLightStartColor2}" Offset="0" /> 
                                    <GradientStop x:Name="LinearBevelLightEnd2" Color="{StaticResource LinearBevelLightEndColor2}" Offset="0.35" /> 
                                    <GradientStop x:Name="LinearBevelDarkStart2" Color="{StaticResource LinearBevelDarkStartColor2}" Offset="0.35" />
                                    <GradientStop x:Name="LinearBevelDarkEnd2" Color="{StaticResource LinearBevelDarkEndColor2}" Offset="1" /> 
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse> 
                        <!-- Checked visual -->
                        <Ellipse x:Name="CheckIconBack" Width="9" Height="9" StrokeThickness=".5" VerticalAlignment="Center" Opacity="0">
                            <Ellipse.Fill> 
                                <SolidColorBrush x:Name="IconColorBack"  Color="{StaticResource IconColorBack}" /> 
                            </Ellipse.Fill>
                        </Ellipse> 
                        <Ellipse x:Name="CheckIcon" Width="4" Height="4" Stretch="Fill" Opacity="0">
                            <Ellipse.Fill>
                                <SolidColorBrush x:Name="CheckIconColor"  Color="{StaticResource IconColor}" /> 
                            </Ellipse.Fill>
                        </Ellipse>
                        <!-- Focus indicator --> 
                        <Rectangle Grid.Column="1" x:Name="ContentFocusVisualElement" StrokeDashCap="Round" Margin="2" StrokeDashArray=".2 2" Visibility="Collapsed" IsHitTestVisible="false"> 
                            <Rectangle.Stroke>
                                <SolidColorBrush Color="{StaticResource FocusColor}" /> 
                            </Rectangle.Stroke>
                        </Rectangle>
 
                        <!-- RadioButton content -->
                        <ContentPresenter
                          Grid.Column="1" 
                          Content="{TemplateBinding Content}" 
                          ContentTemplate="{TemplateBinding ContentTemplate}"
                          Background="Transparent" 
                          FontFamily="{TemplateBinding FontFamily}"
                          FontSize="{TemplateBinding FontSize}"
                          FontStretch="{TemplateBinding FontStretch}" 
                          FontStyle="{TemplateBinding FontStyle}"
                          FontWeight="{TemplateBinding FontWeight}"
                          Foreground="{TemplateBinding Foreground}" 
                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                          Padding="{TemplateBinding Padding}"
                          TextAlignment="{TemplateBinding TextAlignment}" 
                          TextDecorations="{TemplateBinding TextDecorations}"
                          TextWrapping="{TemplateBinding TextWrapping}"
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                          Margin="6,5,4,4"
                          IsHitTestVisible="true" />
 
                        <!-- Disabled --> 
                        <Ellipse x:Name="DisabledBox" Width="13" Height="13" StrokeThickness=".75"  Stroke="{StaticResource DisabledBrush}"  Fill="{StaticResource DisabledBrush}"  VerticalAlignment="Center" Opacity="0" />
                    </Grid> 
                </ControlTemplate>
            </Setter.Value>
        </Setter> 
    </Style>

 
 
    <!-- Default style for System.Windows.Controls.Primitives.RepeatButton -->
    <Style TargetType="RepeatButton"> 
        <Setter Property="IsEnabled" Value="true" />
        <Setter Property="IsTabStop" Value="true" />
        <Setter Property="Background" Value="#FF003255" /> 
        <Setter Property="Foreground" Value="#FF313131" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" /> 
        <Setter Property="Cursor" Value="Arrow" /> 
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="NoWrap" /> 
        <!-- Cannot currently parse FontFamily type in XAML so it's being set in code -->
        <!-- <Setter Property="FontFamily" Value="Trebuchet MS" /> -->
        <Setter Property="FontSize" Value="11" /> 
        <!-- Cannot currently parse FontWeight type in XAML so it's being set in code -->
        <!-- <Setter Property="FontWeight" Value="Bold" /> -->
        <Setter Property="Template"> 
            <Setter.Value> 
                <ControlTemplate TargetType="RepeatButton">
                    <Grid x:Name="RootElement"> 
                        <Grid.Resources>
                            <!-- Visual constants used by the template -->
                            <Color x:Key="BaseColor">#FF003255</Color> 
                            <Color x:Key="LinearBevelLightStartColor">#FCFFFFFF</Color>
                            <Color x:Key="LinearBevelLightEndColor">#F4FFFFFF</Color>
                            <Color x:Key="LinearBevelDarkStartColor">#E0FFFFFF</Color> 
                            <Color x:Key="LinearBevelDarkEndColor">#B2FFFFFF</Color> 
                            <Color x:Key="MouseOverLinearBevelDarkEndColor">#7FFFFFFF</Color>
                            <Color x:Key="HoverLinearBevelLightStartColor">#FCFFFFFF</Color> 
                            <Color x:Key="HoverLinearBevelLightEndColor">#EAFFFFFF</Color>
                            <Color x:Key="HoverLinearBevelDarkStartColor">#D8FFFFFF</Color>
                            <Color x:Key="HoverLinearBevelDarkEndColor">#4CFFFFFF</Color> 
                            <Color x:Key="CurvedBevelFillStartColor">#B3FFFFFF</Color>
                            <Color x:Key="CurvedBevelFillEndColor">#3CFFFFFF</Color>
                            <SolidColorBrush x:Key="BorderBrush" Color="#FF000000" /> 
                            <SolidColorBrush x:Key="AccentBrush" Color="#FFFFFFFF" /> 
                            <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF" />
                            <LinearGradientBrush x:Key="FocusedStrokeBrush" StartPoint="0.5,0" EndPoint="0.5,1"> 
                                <GradientStop Color="#B2FFFFFF" Offset="0" />
                                <GradientStop Color="#51FFFFFF" Offset="1" />
                                <GradientStop Color="#66FFFFFF" Offset="0.325" /> 
                                <GradientStop Color="#1EFFFFFF" Offset="0.325" />
                            </LinearGradientBrush>
 
                            <!-- Visual states of the template --> 
                            <Storyboard x:Key="Normal State" />
                            <Storyboard x:Key="MouseOver State"> 
                                <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="LinearBevelDarkEnd" Storyboard.TargetProperty="Color" To="{StaticResource MouseOverLinearBevelDarkEndColor}" />
                            </Storyboard>
                            <Storyboard x:Key="Pressed State"> 
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd" Storyboard.TargetProperty="Offset" To=".2" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightStart" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelLightEndColor}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelLightEndColor}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkStart" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelDarkStartColor}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkEnd" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelDarkEndColor}" />
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="DownStroke" Storyboard.TargetProperty="Opacity" To="1" /> 
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="0" />
                            </Storyboard>
                            <Storyboard x:Key="Disabled State"> 
                                <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="Disabled" Storyboard.TargetProperty="Opacity" To="1" />
                            </Storyboard>
                        </Grid.Resources> 
 
                        <Rectangle x:Name="Background" RadiusX="4" RadiusY="4" Fill="{TemplateBinding Background}" />
                        <Rectangle x:Name="BackgroundGradient" RadiusX="4" RadiusY="4" StrokeThickness="1" Stroke="{StaticResource BorderBrush}"> 
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.7,0" EndPoint="0.7,1">
                                    <GradientStop x:Name="LinearBevelLightStart" Color="{StaticResource LinearBevelLightStartColor}" Offset="0" /> 
                                    <GradientStop x:Name="LinearBevelLightEnd" Color="{StaticResource LinearBevelLightEndColor}" Offset="0.35" />
                                    <GradientStop x:Name="LinearBevelDarkStart" Color="{StaticResource LinearBevelDarkStartColor}" Offset="0.35" />
                                    <GradientStop x:Name="LinearBevelDarkEnd" Color="{StaticResource LinearBevelDarkEndColor}" Offset="1" /> 
                                </LinearGradientBrush> 
                            </Rectangle.Fill>
                        </Rectangle> 
                        <Grid x:Name="CurvedBevelScale" Margin="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="7*" /> 
                                <RowDefinition Height="3*" />
                            </Grid.RowDefinitions>
                            <Path x:Name="CurvedBevel" Stretch="Fill" Margin="3,0,3,0" Data="F1 M 0,0.02 V 0.15 C 0.15,0.22 0.30,0.25 0.50,0.26 C 0.70,0.26 0.85,0.22 1,0.15 V 0.02 L 0.97,0 H 0.02 L 0,0.02 Z"> 
                                <Path.Fill> 
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop x:Name="CurvedBevelFillStart" Color="{StaticResource CurvedBevelFillStartColor}" Offset="0" /> 
                                        <GradientStop x:Name="CurvedBevelFillEnd" Color="{StaticResource CurvedBevelFillEndColor}" Offset="1" />
                                    </LinearGradientBrush>
                                </Path.Fill> 
                            </Path>
                        </Grid>
                        <Rectangle x:Name="Accent" RadiusX="3" RadiusY="3" Margin="1" Stroke="{StaticResource AccentBrush}" StrokeThickness="1" /> 
                        <Grid x:Name="FocusVisualElement" Visibility="Collapsed"> 
                            <Rectangle RadiusX="3" RadiusY="3" Margin="2" Stroke="{StaticResource AccentBrush}" StrokeThickness="1" />
                            <Rectangle RadiusX="3" RadiusY="3" Stroke="{TemplateBinding Background}" StrokeThickness="2" /> 
                            <Rectangle RadiusX="3" RadiusY="3" Stroke="{StaticResource FocusedStrokeBrush}" StrokeThickness="2" />
                        </Grid>
                        <Grid x:Name="DownStroke" Opacity="0"> 
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="1" Opacity="0.05" Margin="1,2,1,1" />
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="1" Opacity="0.05" Margin="1,1.75,1,1" />
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="1" Opacity="0.05" Margin="1,1.5,1,1" /> 
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="1" Opacity="0.05" Margin="1,1.25,1,1" /> 
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="1" Opacity="1" Margin="1" />
                            <Rectangle RadiusX="4" RadiusY="4" StrokeThickness="1"  Margin="1"> 
                                <Rectangle.Stroke>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#A5FFFFFF" Offset="0" /> 
                                        <GradientStop Color="#FFFFFFFF" Offset="1" />
                                    </LinearGradientBrush>
                                </Rectangle.Stroke> 
                            </Rectangle> 
                        </Grid>
                        <ContentPresenter 
                          Content="{TemplateBinding Content}"
                          ContentTemplate="{TemplateBinding ContentTemplate}"
                          FontFamily="{TemplateBinding FontFamily}" 
                          FontSize="{TemplateBinding FontSize}"
                          FontStretch="{TemplateBinding FontStretch}"
                          FontStyle="{TemplateBinding FontStyle}" 
                          FontWeight="{TemplateBinding FontWeight}" 
                          Foreground="{TemplateBinding Foreground}"
                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                          Padding="{TemplateBinding Padding}"
                          TextAlignment="{TemplateBinding TextAlignment}"
                          TextDecorations="{TemplateBinding TextDecorations}" 
                          TextWrapping="{TemplateBinding TextWrapping}"
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                          Margin="4,5,4,4" /> 
                        <Rectangle x:Name="Disabled" RadiusX="4" RadiusY="4" Fill="{StaticResource DisabledBrush}" Opacity="0" /> 
                    </Grid>
                </ControlTemplate> 
            </Setter.Value>
        </Setter>
    </Style> 


 
    <!-- Default style for System.Windows.Controls.Primitives.Thumb --> 
    <Style TargetType="Thumb">
        <Setter Property="Template"> 
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid x:Name="RootElement"> 
                        <Grid.Resources>
                            <!-- Visual constants used by the template -->
                            <SolidColorBrush x:Key="Background" Color="#FF003255"/> 
                            <!-- Normal --> 
                            <Color x:Key="ThumbOuterBorderFillColor1">#FFF9FAFA</Color>
                            <Color x:Key="ThumbOuterBorderFillColor2">#FFEDF1F4</Color> 
                            <Color x:Key="ThumbOuterBorderFillColor3">#FFE2E8EF</Color>
                            <Color x:Key="ThumbOuterBorderFillColor4">#FFAFB9C1</Color>
 
                            <SolidColorBrush x:Key="ThumbInnerRoundBorderBrush" Color="#FFFFFFFF" />
                            <SolidColorBrush x:Key="ThumbOuterRoundBorderBrush" Color="#FF000000" />
 
                            <Color x:Key="ThumbInnerBorderFillColor1">#CDFFFFFF</Color> 
                            <Color x:Key="ThumbInnerBorderFillColor2">#45FFFFFF</Color>
                            <!-- MouseOver --> 
                            <Color x:Key="MouseOverThumbOuterBorderFillColor1">#FFEAF0F0</Color>
                            <Color x:Key="MouseOverThumbOuterBorderFillColor2">#FFDCE5EC</Color>
                            <Color x:Key="MouseOverThumbOuterBorderFillColor3">#FFD5DDE6</Color> 
                            <Color x:Key="MouseOverThumbOuterBorderFillColor4">#FF798893</Color>

                            <Color x:Key="MouseOverThumbInnerBorderFillColor1">#CDFFFFFF</Color> 
                            <Color x:Key="MouseOverThumbInnerBorderFillColor2">#45FFFFFF</Color> 
                            <!-- Pressed -->
                            <Color x:Key="PressedThumbOuterBorderFillColor1">#FFEAF0F0</Color> 
                            <Color x:Key="PressedThumbOuterBorderFillColor2">#FFDCE5EC</Color>
                            <Color x:Key="PressedThumbOuterBorderFillColor3">#FFD5DDE6</Color>
                            <Color x:Key="PressedThumbOuterBorderFillColor4">#FF798893</Color> 

                            <Color x:Key="PressedThumbInnerBorderFillColor1">#CDFFFFFF</Color>
                            <Color x:Key="PressedThumbInnerBorderFillColor2">#45FFFFFF</Color> 
                            <!-- Disabled --> 
                            <Color x:Key="DisabledThumbOuterBorderFillColor1">#FFF9FAFA</Color>
                            <Color x:Key="DisabledThumbOuterBorderFillColor2">#FFEDF1F4</Color> 
                            <Color x:Key="DisabledThumbOuterBorderFillColor3">#FFE2E8EF</Color>
                            <Color x:Key="DisabledThumbOuterBorderFillColor4">#FFC3C9CD</Color>
 
                            <Color x:Key="DisabledThumbInnerBorderFillColor1">#CDFFFFFF</Color>
                            <Color x:Key="DisabledThumbInnerBorderFillColor2">#45FFFFFF</Color>
                            <!-- Transition to the button's default state --> 
                            <Storyboard x:Key="Normal State"> 
                            </Storyboard>
 
                            <!-- Transition to the button's mouseover state -->
                            <Storyboard x:Key="MouseOver State">
                                <ColorAnimation Duration="0:0:0.1" 
                                  Storyboard.TargetName="ThumbOuterBorderFillGradient2"
                                  Storyboard.TargetProperty="Color"
                                  To="{StaticResource MouseOverThumbOuterBorderFillColor2}" /> 
                                <ColorAnimation Duration="0:0:0.1" 
                                  Storyboard.TargetName="ThumbOuterBorderFillGradient3"
                                  Storyboard.TargetProperty="Color" 
                                  To="{StaticResource MouseOverThumbOuterBorderFillColor3}" />
                                <ColorAnimation Duration="0:0:0.1"
                                  Storyboard.TargetName="ThumbOuterBorderFillGradient4" 
                                  Storyboard.TargetProperty="Color"
                                  To="{StaticResource MouseOverThumbOuterBorderFillColor4}" />
 
                                <ColorAnimation Duration="0:0:0.1" 
                                  Storyboard.TargetName="ThumbInnerBorderFillGradient1"
                                  Storyboard.TargetProperty="Color" 
                                  To="{StaticResource MouseOverThumbInnerBorderFillColor1}" />
                                <ColorAnimation Duration="0:0:0.1"
                                  Storyboard.TargetName="ThumbInnerBorderFillGradient2" 
                                  Storyboard.TargetProperty="Color"
                                  To="{StaticResource MouseOverThumbInnerBorderFillColor2}" />
                            </Storyboard> 
 
                            <!-- Transition to the button's pressed state -->
                            <Storyboard x:Key="Pressed State"> 
                                <ColorAnimation Duration="0:0:0.1"
                                  Storyboard.TargetName="ThumbOuterBorderFillGradient1"
                                  Storyboard.TargetProperty="Color" 
                                  To="{StaticResource PressedThumbOuterBorderFillColor1}" />
                                <ColorAnimation Duration="0:0:0.1"
                                  Storyboard.TargetName="ThumbOuterBorderFillGradient2" 
                                  Storyboard.TargetProperty="Color" 
                                  To="{StaticResource PressedThumbOuterBorderFillColor2}" />
                                <ColorAnimation Duration="0:0:0.1" 
                                  Storyboard.TargetName="ThumbOuterBorderFillGradient3"
                                  Storyboard.TargetProperty="Color"
                                  To="{StaticResource PressedThumbOuterBorderFillColor3}" /> 
                                <ColorAnimation Duration="0:0:0.1"
                                  Storyboard.TargetName="ThumbOuterBorderFillGradient4"
                                  Storyboard.TargetProperty="Color" 
                                  To="{StaticResource PressedThumbOuterBorderFillColor4}" /> 

                                <DoubleAnimation Duration="0:0:0.1" 
                                  Storyboard.TargetName="DownStroke"
                                  Storyboard.TargetProperty="Opacity"
                                  To="1" /> 

                                <ColorAnimation Duration="0:0:0.1"
                                  Storyboard.TargetName="ThumbInnerBorderFillGradient1" 
                                  Storyboard.TargetProperty="Color" 
                                  To="{StaticResource PressedThumbInnerBorderFillColor1}" />
                                <ColorAnimation Duration="0:0:0.1" 
                                  Storyboard.TargetName="ThumbInnerBorderFillGradient2"
                                  Storyboard.TargetProperty="Color"
                                  To="{StaticResource PressedThumbInnerBorderFillColor2}" /> 
                            </Storyboard>

                            <!-- Transition to the button's disabled state --> 
                            <Storyboard x:Key="Disabled State"> 
                                <ColorAnimation Duration="0:0:0.1"
                                  Storyboard.TargetName="ThumbOuterBorderFillGradient1" 
                                  Storyboard.TargetProperty="Color"
                                  To="{StaticResource DisabledThumbOuterBorderFillColor1}" />
                                <ColorAnimation Duration="0:0:0.1" 
                                  Storyboard.TargetName="ThumbOuterBorderFillGradient2"
                                  Storyboard.TargetProperty="Color"
                                  To="{StaticResource DisabledThumbOuterBorderFillColor2}" /> 
                                <ColorAnimation Duration="0:0:0.1" 
                                  Storyboard.TargetName="ThumbOuterBorderFillGradient3"
                                  Storyboard.TargetProperty="Color" 
                                  To="{StaticResource DisabledThumbOuterBorderFillColor3}" />
                                <ColorAnimation Duration="0:0:0.1"
                                  Storyboard.TargetName="ThumbOuterBorderFillGradient4" 
                                  Storyboard.TargetProperty="Color"
                                  To="{StaticResource DisabledThumbOuterBorderFillColor4}" />
 
                                <ColorAnimation Duration="0:0:0.1" 
                                  Storyboard.TargetName="ThumbInnerBorderFillGradient1"
                                  Storyboard.TargetProperty="Color" 
                                  To="{StaticResource DisabledThumbInnerBorderFillColor1}" />
                                <ColorAnimation Duration="0:0:0.1"
                                  Storyboard.TargetName="ThumbInnerBorderFillGradient2" 
                                  Storyboard.TargetProperty="Color"
                                  To="{StaticResource DisabledThumbInnerBorderFillColor2}" />
                            </Storyboard> 
 
                        </Grid.Resources>
 
                        <Rectangle x:Name="ThumbOuterBorderFill" RadiusX="2.5" RadiusY="2.5" Stretch="Fill" Margin=".75" IsHitTestVisible="true">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.78721,0.0280347" EndPoint="0.75,1"> 
                                    <GradientStop x:Name="ThumbOuterBorderFillGradient1" Color="{StaticResource ThumbOuterBorderFillColor1}" Offset="0"/>
                                    <GradientStop x:Name="ThumbOuterBorderFillGradient2" Color="{StaticResource ThumbOuterBorderFillColor2}" Offset="0.37"/>
                                    <GradientStop x:Name="ThumbOuterBorderFillGradient3" Color="{StaticResource ThumbOuterBorderFillColor3}" Offset="0.37"/> 
                                    <GradientStop x:Name="ThumbOuterBorderFillGradient4" Color="{StaticResource ThumbOuterBorderFillColor4}" Offset="1"/> 
                                </LinearGradientBrush>
                            </Rectangle.Fill> 
                        </Rectangle>
                        <Rectangle x:Name="ThumbOuterRoundBorder" RadiusX="2.5" RadiusY="2.5" Stretch="Fill" StrokeThickness="1" Stroke="{StaticResource ThumbOuterRoundBorderBrush}"/>
                        <Rectangle x:Name="ThumbInnerRoundBorder" RadiusX="2.5" RadiusY="2.5" Margin=".75" Stretch="Fill" StrokeThickness="1" Stroke="{StaticResource ThumbInnerRoundBorderBrush}"/> 
                        <Path x:Name="ThumbInnerBorderFill" Margin="2.25,1.75,2.25,5.75" Stretch="Fill" Data="F1 M 11.653,2.38219L 2.00772,2.38219L 2.00772,8.95955C 3.42004,11.3623 5.069,12.7418 6.83035,12.7418C 8.59167,12.7418 10.2406,11.3623 11.653,8.95955L 11.653,2.38219 Z ">
                            <Path.Fill>
                                <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,1"> 
                                    <GradientStop x:Name="ThumbInnerBorderFillGradient1" Color="{StaticResource ThumbInnerBorderFillColor1}" Offset="0"/> 
                                    <GradientStop x:Name="ThumbInnerBorderFillGradient2" Color="{StaticResource ThumbInnerBorderFillColor2}" Offset="1"/>
                                </LinearGradientBrush> 
                            </Path.Fill>
                        </Path>
                        <Grid x:Name="DownStroke" Opacity="0"> 
                            <Rectangle Stroke="{StaticResource Background}" RadiusX="2.5" RadiusY="2.5" StrokeThickness="1" Opacity="0.05" Margin="0.75,2,0.75,0.75" />
                            <Rectangle Stroke="{StaticResource Background}" RadiusX="2.5" RadiusY="2.5" StrokeThickness="1" Opacity="0.05" Margin="0.75,1.7,0.75,0.75" />
                            <Rectangle Stroke="{StaticResource Background}" RadiusX="2.5" RadiusY="2.5" StrokeThickness="1" Opacity="0.05" Margin="0.75,1.5,0.75,0.75" /> 
                            <Rectangle Stroke="{StaticResource Background}" RadiusX="2.5" RadiusY="2.5" StrokeThickness="1" Opacity="0.05" Margin="0.75,1.25,0.75,0.75" /> 
                            <Rectangle Stroke="{StaticResource Background}" RadiusX="2.5" RadiusY="2.5" StrokeThickness="1" Opacity="0.05" Margin="0.75,1,0.75,0.75" />
                            <Rectangle Stroke="{StaticResource Background}" RadiusX="2.5" RadiusY="2.5" StrokeThickness="1" Opacity="1" Margin=".75" /> 
                            <Rectangle RadiusX="2.5" RadiusY="2.5" StrokeThickness="1"  Margin=".75" >
                                <Rectangle.Stroke>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0"> 
                                        <GradientStop Color="#A5FFFFFF" Offset="0" />
                                        <GradientStop Color="#FFFFFFFF" Offset="1" />
                                        <GradientStop Color="#D5FFFFFF" Offset="0.371"/> 
                                        <GradientStop Color="#DAFFFFFF" Offset="0.379"/> 
                                    </LinearGradientBrush>
                                </Rectangle.Stroke> 
                            </Rectangle>
                            <Rectangle RadiusX="2.5" RadiusY="2.5" StrokeThickness="1"  Margin="0.75,0.75,0.75,1" >
                                <Rectangle.Stroke> 
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#00FFFFFF" Offset="0" />
                                        <GradientStop Color="#FFFFFFFF" Offset="1" /> 
                                        <GradientStop Color="#00FFFFFF" Offset="0.371"/> 
                                        <GradientStop Color="#00FFFFFF" Offset="0.393"/>
                                    </LinearGradientBrush> 
                                </Rectangle.Stroke>
                            </Rectangle>
                        </Grid> 
                    </Grid>
                </ControlTemplate>
            </Setter.Value> 
        </Setter> 
    </Style>
 

    <!-- Default style for System.Windows.Controls.Primitives.ScrollBar -->
    <Style TargetType="ScrollBar"> 
        <!-- Any other properties you want to set -->
        <Setter Property="Template">
            <Setter.Value> 
                <ControlTemplate TargetType="ScrollBar"> 
                    <Grid x:Name="RootElement">
                        <!-- States --> 
                        <Grid.Resources>
                            <!-- Transition to the slider's default state -->
                            <Storyboard x:Key="Normal State"> 
                                <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="RootElement" Storyboard.TargetProperty="Opacity" To="1" />
                            </Storyboard>
 
                            <!-- Transition to the slider's mouseover state --> 
                            <Storyboard x:Key="MouseOver State">
                                <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="RootElement" Storyboard.TargetProperty="Opacity" To="1" /> 
                            </Storyboard>

                            <!-- Transition to the slider's disabled state --> 
                            <Storyboard x:Key="Disabled State">
                                <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="RootElement" Storyboard.TargetProperty="Opacity" To="0.5" />
                            </Storyboard> 
 
                            <!-- RepeatButton Templates -->
                            <ControlTemplate x:Key="RepeatButtonTemplate"> 
                                <Grid x:Name="RootElement" Background="Transparent" />
                            </ControlTemplate>
 
                            <ControlTemplate x:Key="HorizontalIncrementTemplate">
                                <Grid x:Name="RootElement" Background="#00000000">
                                    <Grid.Resources> 
                                        <Storyboard x:Key="Normal State" /> 
                                        <Storyboard x:Key="MouseOver State">
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="ButtonColor" Storyboard.TargetProperty="Color" To="#FF557E9A" /> 
                                        </Storyboard>
                                        <Storyboard x:Key="Disabled State">
                                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="ButtonVisual" Storyboard.TargetProperty="Opacity" To=".6" /> 
                                        </Storyboard>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions> 
                                        <ColumnDefinition Width="35*"/> 
                                        <ColumnDefinition Width="30*"/>
                                        <ColumnDefinition Width="35*"/> 
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="25*"/> 
                                        <RowDefinition Height="50*"/>
                                        <RowDefinition Height="25*"/>
                                    </Grid.RowDefinitions> 
                                    <Path x:Name="ButtonVisual" Grid.Column="1" Grid.Row="1" Stretch="Fill" Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z "> 
                                        <Path.Fill>
                                            <SolidColorBrush x:Name="ButtonColor" Color="#FF313131" /> 
                                        </Path.Fill>
                                    </Path>
                                    <Rectangle x:Name="FocusVisualElement" Grid.ColumnSpan="3" Grid.RowSpan="3"  Stroke="#666666" Fill="#00000000"  StrokeDashArray=".2 5" StrokeDashCap="Round" IsHitTestVisible="false" Opacity="0" /> 
                                </Grid>
                            </ControlTemplate>
 
                            <ControlTemplate x:Key="HorizontalDecrementTemplate"> 
                                <Grid x:Name="RootElement" Background="#00000000">
                                    <Grid.Resources> 
                                        <Storyboard x:Key="Normal State" />
                                        <Storyboard x:Key="MouseOver State">
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="ButtonColor" Storyboard.TargetProperty="Color" To="#FF557E9A" /> 
                                        </Storyboard>
                                        <Storyboard x:Key="Disabled State">
                                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="ButtonVisual" Storyboard.TargetProperty="Opacity" To=".6" /> 
                                        </Storyboard> 
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions> 
                                        <ColumnDefinition Width="35*"/>
                                        <ColumnDefinition Width="30*"/>
                                        <ColumnDefinition Width="35*"/> 
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="25*"/> 
                                        <RowDefinition Height="50*"/> 
                                        <RowDefinition Height="25*"/>
                                    </Grid.RowDefinitions> 
                                    <Path Grid.Column="1" Grid.Row="1" Stretch="Fill" Data="F1 M 110.692,342.252L 110.692,352.682L 104.594,347.467L 110.692,342.252 Z ">
                                        <Path.Fill>
                                            <SolidColorBrush x:Name="ButtonColor" Color="#FF313131" /> 
                                        </Path.Fill>
                                    </Path>
                                    <Rectangle x:Name="FocusVisualElement" Grid.ColumnSpan="3" Grid.RowSpan="3"  Stroke="#666666" Fill="#00000000"  StrokeDashArray=".2 5" StrokeDashCap="Round" IsHitTestVisible="false" Opacity="0" /> 
                                </Grid> 
                            </ControlTemplate>
 
                            <ControlTemplate x:Key="VerticalIncrementTemplate">
                                <Grid x:Name="RootElement" Background="#00000000">
                                    <Grid.Resources> 
                                        <Storyboard x:Key="Normal State" />
                                        <Storyboard x:Key="MouseOver State">
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="ButtonColor" Storyboard.TargetProperty="Color" To="#FF557E9A" /> 
                                        </Storyboard> 
                                        <Storyboard x:Key="Disabled State">
                                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="ButtonVisual" Storyboard.TargetProperty="Opacity" To=".6" /> 
                                        </Storyboard>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions> 
                                        <ColumnDefinition Width="25*"/>
                                        <ColumnDefinition Width="50*"/>
                                        <ColumnDefinition Width="25*"/> 
                                    </Grid.ColumnDefinitions> 
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="35*"/> 
                                        <RowDefinition Height="30*"/>
                                        <RowDefinition Height="35*"/>
                                    </Grid.RowDefinitions> 
                                    <Path Grid.Column="1" Grid.Row="1" Stretch="Fill" Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z ">
                                        <Path.Fill>
                                            <SolidColorBrush x:Name="ButtonColor" Color="#FF313131" /> 
                                        </Path.Fill> 
                                    </Path>
                                    <Rectangle x:Name="FocusVisualElement" Grid.ColumnSpan="3" Grid.RowSpan="3"  Stroke="#666666" Fill="#00000000"  StrokeDashArray=".2 5" StrokeDashCap="Round" IsHitTestVisible="false" Opacity="0" /> 
                                </Grid>
                            </ControlTemplate>
 
                            <ControlTemplate x:Key="VerticalDecrementTemplate">
                                <Grid x:Name="RootElement" Background="#00000000">
                                    <Grid.Resources> 
                                        <Storyboard x:Key="Normal State" /> 
                                        <Storyboard x:Key="MouseOver State">
                                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="ButtonColor" Storyboard.TargetProperty="Color" To="#FF557E9A" /> 
                                        </Storyboard>
                                        <Storyboard x:Key="Disabled State">
                                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="ButtonVisual" Storyboard.TargetProperty="Opacity" To=".6" /> 
                                        </Storyboard>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions> 
                                        <ColumnDefinition Width="25*"/> 
                                        <ColumnDefinition Width="50*"/>
                                        <ColumnDefinition Width="25*"/> 
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="35*"/> 
                                        <RowDefinition Height="30*"/>
                                        <RowDefinition Height="35*"/>
                                    </Grid.RowDefinitions> 
                                    <Path Grid.Column="1" Grid.Row="1" Stretch="Fill" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z "> 
                                        <Path.Fill>
                                            <SolidColorBrush x:Name="ButtonColor" Color="#FF313131" /> 
                                        </Path.Fill>
                                    </Path>
                                    <Rectangle x:Name="FocusVisualElement" Grid.ColumnSpan="3" Grid.RowSpan="3"  Stroke="#666666" Fill="#00000000"  StrokeDashArray=".2 5" StrokeDashCap="Round" IsHitTestVisible="false" Opacity="0" /> 
                                </Grid>
                            </ControlTemplate>
 
                            <!-- Thumb Templates --> 
                            <ControlTemplate x:Key="VerticalThumbTemplate">
                                <Grid x:Name="RootElement"> 
                                    <Grid.Resources>
                                        <!--Colors-->
                                        <SolidColorBrush x:Key="Background" Color="#FF003255" /> 
                                        <Color x:Key="LinearBevelLightStartColor">#FCFFFFFF</Color>
                                        <Color x:Key="LinearBevelLightEndColor">#F4FFFFFF</Color>
                                        <Color x:Key="LinearBevelDarkStartColor">#E0FFFFFF</Color> 
                                        <Color x:Key="LinearBevelDarkEndColor">#B2FFFFFF</Color> 
                                        <Color x:Key="HoverLinearBevelLightStartColor">#FCFFFFFF</Color>
                                        <Color x:Key="HoverLinearBevelLightEndColor">#EAFFFFFF</Color> 
                                        <Color x:Key="HoverLinearBevelDarkStartColor">#D8FFFFFF</Color>
                                        <Color x:Key="HoverLinearBevelDarkEndColor">#4CFFFFFF</Color>
                                        <!--Storyboards--> 
                                        <Storyboard x:Key="Normal State" />
                                        <Storyboard x:Key="MouseOver State">
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightStart" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelLightEndColor}" /> 
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelLightEndColor}" /> 
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkStart" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelDarkStartColor}" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkEnd" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelDarkEndColor}" /> 
                                        </Storyboard>
                                        <Storyboard x:Key="Disabled State">
                                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="ThumbVisual" Storyboard.TargetProperty="Opacity" To="0" /> 
                                        </Storyboard>
                                    </Grid.Resources>
                                    <Grid x:Name="ThumbVisual"> 
                                        <Rectangle x:Name="Background" Margin="2.5,.5,2.5,.5" RadiusX="2.5" RadiusY="2.5" Fill="{StaticResource Background}" /> 
                                        <Rectangle Margin="2,0,2,0" RadiusX="2.5" RadiusY="2.5" Stroke="#FF777777" StrokeThickness="1">
                                            <Rectangle.Fill> 
                                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                    <GradientStop x:Name="LinearBevelLightStart" Color="{StaticResource LinearBevelLightStartColor}" Offset="0" />
                                                    <GradientStop x:Name="LinearBevelLightEnd" Color="{StaticResource LinearBevelLightEndColor}" Offset="0.35" /> 
                                                    <GradientStop x:Name="LinearBevelDarkStart" Color="{StaticResource LinearBevelDarkStartColor}" Offset="0.35" />
                                                    <GradientStop x:Name="LinearBevelDarkEnd" Color="{StaticResource LinearBevelDarkEndColor}" Offset="1" />
                                                </LinearGradientBrush> 
                                            </Rectangle.Fill> 
                                        </Rectangle>
                                        <Rectangle Margin="3,1,3,1"  RadiusX="2.5" RadiusY="2.5" StrokeThickness="1" Stroke="White" Fill="#00000000" /> 
                                    </Grid>
                                </Grid>
                            </ControlTemplate> 

                            <ControlTemplate x:Key="HorizontalThumbTemplate">
                                <Grid x:Name="RootElement"> 
                                    <Grid.Resources> 
                                        <!--Colors-->
                                        <SolidColorBrush x:Key="Background" Color="#FF003255" /> 
                                        <Color x:Key="LinearBevelLightStartColor">#FCFFFFFF</Color>
                                        <Color x:Key="LinearBevelLightEndColor">#F4FFFFFF</Color>
                                        <Color x:Key="LinearBevelDarkStartColor">#E0FFFFFF</Color> 
                                        <Color x:Key="LinearBevelDarkEndColor">#B2FFFFFF</Color>
                                        <Color x:Key="HoverLinearBevelLightStartColor">#FCFFFFFF</Color>
                                        <Color x:Key="HoverLinearBevelLightEndColor">#EAFFFFFF</Color> 
                                        <Color x:Key="HoverLinearBevelDarkStartColor">#D8FFFFFF</Color> 
                                        <Color x:Key="HoverLinearBevelDarkEndColor">#4CFFFFFF</Color>
                                        <!--Storyboards--> 
                                        <Storyboard x:Key="Normal State" />
                                        <Storyboard x:Key="MouseOver State">
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightStart" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelLightEndColor}" /> 
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelLightEndColor}" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkStart" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelDarkStartColor}" />
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkEnd" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelDarkEndColor}" /> 
                                        </Storyboard> 
                                        <Storyboard x:Key="Disabled State">
                                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="ThumbVisual" Storyboard.TargetProperty="Opacity" To="0" /> 
                                        </Storyboard>
                                    </Grid.Resources>
                                    <Grid x:Name="ThumbVisual"> 
                                        <Rectangle x:Name="Background" Margin=".5,2.5,.5,2.5" RadiusX="2.5" RadiusY="2.5" Fill="{StaticResource Background}" />
                                        <Rectangle Margin="0,2,0,2"  RadiusX="2.5" RadiusY="2.5" Stroke="#FF777777" StrokeThickness="1">
                                            <Rectangle.Fill> 
                                                <LinearGradientBrush StartPoint="0.5,-0.11" EndPoint="0.5,1.11"> 
                                                    <GradientStop x:Name="LinearBevelLightStart" Color="{StaticResource LinearBevelLightStartColor}" Offset="0" />
                                                    <GradientStop x:Name="LinearBevelLightEnd" Color="{StaticResource LinearBevelLightEndColor}" Offset="0.35" /> 
                                                    <GradientStop x:Name="LinearBevelDarkStart" Color="{StaticResource LinearBevelDarkStartColor}" Offset="0.35" />
                                                    <GradientStop x:Name="LinearBevelDarkEnd" Color="{StaticResource LinearBevelDarkEndColor}" Offset="1" />
                                                </LinearGradientBrush> 
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Rectangle Margin="1,3,1,3"  RadiusX="2.5" RadiusY="2.5" StrokeThickness="1" Stroke="White" Fill="#00000000" /> 
                                    </Grid> 
                                </Grid>
                            </ControlTemplate> 
                        </Grid.Resources>

                        <!-- Horizontal Template --> 
                        <Grid x:Name="HorizontalRootElement">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" /> 
                                <ColumnDefinition Width="Auto" /> 
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" /> 
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
 
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition /> 
                            </Grid.RowDefinitions> 

                            <!-- Track Layer --> 
                            <Rectangle Grid.RowSpan="2" Grid.ColumnSpan="5"  Stroke="#FFCCCCCC" RadiusX="1" RadiusY="1">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1"> 
                                        <GradientStop Color="#FFF9FAFA" Offset="0"/>
                                        <GradientStop Color="#FFEDF1F4" Offset="0.37259"/>
                                        <GradientStop Color="#FFE2E8EF" Offset="0.372881"/> 
                                        <GradientStop Color="#FFC3C9CD" Offset="1"/> 
                                    </LinearGradientBrush>
                                </Rectangle.Fill> 
                            </Rectangle>
                            <Rectangle Grid.RowSpan="2" Grid.ColumnSpan="5" Margin="0,1,1,0"  Stretch="Fill" StrokeThickness="1" StrokeLineJoin="Round" Stroke="#FFFFFFFF"/>
                            <Path Grid.ColumnSpan="5" Margin="3,3,3,0" Stretch="Fill" Data="F1 M 523.135,337.329L 99.2482,337.329L 99.2482,346.75C 161.317,350.192 233.785,352.168 311.192,352.168C 388.598,352.168 461.067,350.192 523.135,346.75L 523.135,337.329 Z "> 
                                <Path.Fill>
                                    <LinearGradientBrush StartPoint="0.5125,-0.0864589" EndPoint="0.5125,1.00202" >
                                        <GradientStop Color="#B3FFFFFF" Offset="0"/> 
                                        <GradientStop Color="#3CFFFFFF" Offset="1"/> 
                                    </LinearGradientBrush>
                                </Path.Fill> 
                            </Path>

                            <!-- Repeat Buttons + Thumb --> 
                            <RepeatButton x:Name="HorizontalSmallDecreaseElement" Grid.Column="0" Grid.RowSpan="2" Width="16" IsTabStop="False" Interval="50" Template="{StaticResource HorizontalDecrementTemplate}" />
                            <RepeatButton x:Name="HorizontalLargeDecreaseElement" Grid.Column="1" Grid.RowSpan="2" Width="0" Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" />
                            <Thumb x:Name="HorizontalThumbElement" MinWidth="10" Width="20" Grid.Column="2" Grid.RowSpan="2" Template="{StaticResource HorizontalThumbTemplate}" /> 
                            <RepeatButton x:Name="HorizontalLargeIncreaseElement" Grid.Column="3" Grid.RowSpan="2" Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" /> 
                            <RepeatButton x:Name="HorizontalSmallIncreaseElement" Grid.Column="4" Grid.RowSpan="2" Width="16" IsTabStop="False" Interval="50" Template="{StaticResource HorizontalIncrementTemplate}" />
                        </Grid> 

                        <!-- Vertical Template -->
                        <Grid x:Name="VerticalRootElement" Visibility="Collapsed"> 
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" /> 
                                <RowDefinition Height="Auto" /> 
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" /> 
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions> 
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions> 
 
                            <!-- Track Layer -->
                            <Rectangle Grid.ColumnSpan="2" Grid.RowSpan="5"  Stroke="#FFCCCCCC" RadiusX="1" RadiusY="1"> 
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                        <GradientStop Color="#FFF9FAFA" Offset="0"/> 
                                        <GradientStop Color="#FFEDF1F4" Offset="0.37259"/>
                                        <GradientStop Color="#FFE2E8EF" Offset="0.372881"/>
                                        <GradientStop Color="#FFC3C9CD" Offset="1"/> 
                                    </LinearGradientBrush> 
                                </Rectangle.Fill>
                            </Rectangle> 
                            <Rectangle Grid.ColumnSpan="2" Grid.RowSpan="5" Margin="1,0,0,1"  StrokeThickness="1" Stroke="#FFFFFFFF"/>
                            <Path Grid.RowSpan="5" Margin="3,3,0,3" Stretch="Fill" Data="F1 M 526.184,161.772L 526.184,333.391L 535.606,333.391C 539.047,308.261 541.023,278.921 541.023,247.581C 541.023,216.242 539.047,186.902 535.606,161.772L 526.184,161.772 Z ">
                                <Path.Fill> 
                                    <LinearGradientBrush StartPoint="0.5125,-0.0864589" EndPoint="0.5125,1.00202" >
                                        <GradientStop Color="#B3FFFFFF" Offset="0"/>
                                        <GradientStop Color="#3CFFFFFF" Offset="1"/> 
                                    </LinearGradientBrush> 
                                </Path.Fill>
                            </Path> 

                            <!-- Repeat Buttons + Thumb -->
                            <RepeatButton x:Name="VerticalSmallDecreaseElement" Grid.Row="0" Grid.ColumnSpan="2" Height="16" IsTabStop="False" Interval="50" Template="{StaticResource VerticalDecrementTemplate}" /> 
                            <RepeatButton x:Name="VerticalLargeDecreaseElement" Grid.Row="1" Grid.ColumnSpan="2" Height="0" Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" />
                            <Thumb x:Name="VerticalThumbElement" MinHeight="10" Height="20" Grid.Row="2" Grid.ColumnSpan="2" Template="{StaticResource VerticalThumbTemplate}" />
                            <RepeatButton x:Name="VerticalLargeIncreaseElement" Grid.Row="3" Grid.ColumnSpan="2" Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" /> 
                            <RepeatButton x:Name="VerticalSmallIncreaseElement" Grid.Row="4" Grid.ColumnSpan="2" Height="16" IsTabStop="False" Interval="50" Template="{StaticResource VerticalIncrementTemplate}" /> 
                        </Grid>
                    </Grid> 
                </ControlTemplate>
            </Setter.Value>
        </Setter> 
    </Style>

 
    <!-- Default style for System.Windows.Controls.ScrollViewer --> 
    <Style TargetType="ScrollViewer">
        <Setter Property="IsEnabled" Value="true" /> 
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" /> 
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="NoWrap" /> 
        <!-- Cannot currently parse FontFamily type in XAML so it's being set in code --> 
        <!-- <Setter Property="FontFamily" Value="Trebuchet MS" /> -->
        <Setter Property="FontSize" Value="11" /> 
        <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
        <Setter Property="Template">
            <Setter.Value> 
                <ControlTemplate TargetType="ScrollViewer">
                    <Border CornerRadius="1" BorderBrush="#FFA4A4A4" BorderThickness="1">
                        <Grid Background="{TemplateBinding Background}"> 
                            <Grid.ColumnDefinitions> 
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/> 
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/> 
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Rectangle Grid.Column="1" Grid.Row="1" Fill="#FFE9E9E9" /> 
                            <!-- Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" --> 
                            <ScrollContentPresenter
                              x:Name="ScrollContentPresenterElement" 
                              Grid.Column="0"
                              Grid.Row="0"
                              Content="{TemplateBinding Content}" 
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              Cursor="{TemplateBinding Cursor}"
                              Background="{TemplateBinding Background}" 
                              FontFamily="{TemplateBinding FontFamily}" 
                              FontSize="{TemplateBinding FontSize}"
                              FontStretch="{TemplateBinding FontStretch}" 
                              FontStyle="{TemplateBinding FontStyle}"
                              FontWeight="{TemplateBinding FontWeight}"
                              Foreground="{TemplateBinding Foreground}" 
                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                              TextAlignment="{TemplateBinding TextAlignment}"
                              TextDecorations="{TemplateBinding TextDecorations}" 
                              TextWrapping="{TemplateBinding TextWrapping}" 
                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                              Margin="{TemplateBinding Padding}" /> 
                            <ScrollBar
                              x:Name="VerticalScrollBarElement"
                              Grid.Column="1" 
                              Grid.Row="0"
                              Orientation="Vertical"
                              Cursor="Arrow" 
                              Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                              ViewportSize="{TemplateBinding ViewportHeight}"
                              Minimum="0" 
                              Maximum="{TemplateBinding ScrollableHeight}"
                              Value="{TemplateBinding VerticalOffset}"
                              Width="18"/> 
                            <ScrollBar
                              x:Name="HorizontalScrollBarElement"
                              Grid.Column="0" 
                              Grid.Row="1" 
                              Orientation="Horizontal"
                              Cursor="Arrow" 
                              Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                              ViewportSize="{TemplateBinding ViewportWidth}"
                              Minimum="0" 
                              Maximum="{TemplateBinding ScrollableWidth}"
                              Value="{TemplateBinding HorizontalOffset}"
                              Height="18"/> 
                        </Grid> 
                    </Border>
                </ControlTemplate> 
            </Setter.Value>
        </Setter>
    </Style> 


    <!-- Default style for System.Windows.Controls.Primitives.ToggleButton --> 
    <Style TargetType="ToggleButton"> 
        <!-- Cannot currently parse bool? type in XAML so it's being set in code -->
        <!-- <Setter Property="IsChecked" Value="false" /> --> 
        <Setter Property="IsEnabled" Value="true" />
        <Setter Property="IsTabStop" Value="true" />
        <Setter Property="Background" Value="#FF003255" /> 
        <Setter Property="Foreground" Value="#FF313131" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" /> 
        <Setter Property="VerticalContentAlignment" Value="Center" /> 
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="TextAlignment" Value="Left" /> 
        <Setter Property="TextWrapping" Value="NoWrap" />
        <!-- Cannot currently parse FontFamily type in XAML so it's being set in code -->
        <!-- <Setter Property="FontFamily" Value="Trebuchet MS" /> --> 
        <Setter Property="FontSize" Value="11" />
        <!-- Cannot currently parse FontWeight type in XAML so it's being set in code -->
        <!-- <Setter Property="FontWeight" Value="Bold" /> --> 
        <Setter Property="Template"> 
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton"> 
                    <Grid x:Name="RootElement">
                        <Grid.Resources>
                            <!-- Visual constants used by the template --> 
                            <Color x:Key="BaseColor">#FF003255</Color>
                            <Color x:Key="LinearBevelLightStartColor">#FCFFFFFF</Color>
                            <Color x:Key="LinearBevelLightEndColor">#F4FFFFFF</Color> 
                            <Color x:Key="LinearBevelDarkStartColor">#E0FFFFFF</Color> 
                            <Color x:Key="LinearBevelDarkEndColor">#B2FFFFFF</Color>
                            <Color x:Key="MouseOverLinearBevelDarkEndColor">#7FFFFFFF</Color> 
                            <Color x:Key="HoverLinearBevelLightStartColor">#ECFFFFFF</Color>
                            <Color x:Key="HoverLinearBevelLightEndColor">#DAFFFFFF</Color>
                            <Color x:Key="HoverLinearBevelDarkStartColor">#C4FFFFFF</Color> 
                            <Color x:Key="HoverLinearBevelDarkEndColor">#44FFFFFF</Color>
                            <Color x:Key="CheckedLinearBevelLightStartColor">#FCFFFFFF</Color>
                            <Color x:Key="CheckedLinearBevelLightEndColor">#EAFFFFFF</Color> 
                            <Color x:Key="CheckedLinearBevelDarkStartColor">#D8FFFFFF</Color> 
                            <Color x:Key="CheckedLinearBevelDarkEndColor">#4CFFFFFF</Color>
                            <Color x:Key="CurvedBevelFillStartColor">#B3FFFFFF</Color> 
                            <Color x:Key="CurvedBevelFillEndColor">#3CFFFFFF</Color>
                            <Color x:Key="HoverPressedCurvedBevelFillStartColor">#6FFFFFFF</Color>
                            <Color x:Key="HoverPressedCurvedBevelFillEndColor">#39FFFFFF</Color> 
                            <SolidColorBrush x:Key="BorderBrush" Color="#FF000000" />
                            <SolidColorBrush x:Key="AccentBrush" Color="#FFFFFFFF" />
                            <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF" /> 
                            <LinearGradientBrush x:Key="FocusedStrokeBrush" StartPoint="0.5,0" EndPoint="0.5,1"> 
                                <GradientStop Color="#B2FFFFFF" Offset="0" />
                                <GradientStop Color="#51FFFFFF" Offset="1" /> 
                                <GradientStop Color="#66FFFFFF" Offset="0.325" />
                                <GradientStop Color="#1EFFFFFF" Offset="0.325" />
                            </LinearGradientBrush> 

                            <!-- Visual states of the template -->
                            <Storyboard x:Key="Normal State" /> 
                            <Storyboard x:Key="Checked State"> 
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd" Storyboard.TargetProperty="Offset" To=".2" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightStart" Storyboard.TargetProperty="Color" To="{StaticResource CheckedLinearBevelLightEndColor}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd" Storyboard.TargetProperty="Color" To="{StaticResource CheckedLinearBevelLightEndColor}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkStart" Storyboard.TargetProperty="Color" To="{StaticResource CheckedLinearBevelDarkStartColor}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkEnd" Storyboard.TargetProperty="Color" To="{StaticResource CheckedLinearBevelDarkEndColor}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="CurvedBevelFillStart" Storyboard.TargetProperty="Color" To="{StaticResource CurvedBevelFillStartColor}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="CurvedBevelFillEnd" Storyboard.TargetProperty="Color" To="{StaticResource CurvedBevelFillEndColor}" />
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="Checked" Storyboard.TargetProperty="Opacity" To="1" /> 
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="0" /> 
                            </Storyboard>
                            <Storyboard x:Key="Indeterminate State"> 
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd" Storyboard.TargetProperty="Offset" To=".2" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightStart" Storyboard.TargetProperty="Color" To="{StaticResource CheckedLinearBevelLightEndColor}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd" Storyboard.TargetProperty="Color" To="{StaticResource CheckedLinearBevelLightEndColor}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkStart" Storyboard.TargetProperty="Color" To="{StaticResource CheckedLinearBevelDarkStartColor}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkEnd" Storyboard.TargetProperty="Color" To="{StaticResource CheckedLinearBevelDarkEndColor}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="CurvedBevelFillStart" Storyboard.TargetProperty="Color" To="{StaticResource CurvedBevelFillStartColor}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="CurvedBevelFillEnd" Storyboard.TargetProperty="Color" To="{StaticResource CurvedBevelFillEndColor}" /> 
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="Indeterminate" Storyboard.TargetProperty="Opacity" To="1" />
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="0" /> 
                            </Storyboard>
                            <Storyboard x:Key="MouseOver Unchecked State">
                                <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="LinearBevelDarkEnd" Storyboard.TargetProperty="Color" To="{StaticResource MouseOverLinearBevelDarkEndColor}" /> 
                            </Storyboard>
                            <Storyboard x:Key="MouseOver Checked State">
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd" Storyboard.TargetProperty="Offset" To=".2" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightStart" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelLightEndColor}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelLightEndColor}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkStart" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelDarkStartColor}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkEnd" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelDarkEndColor}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="CurvedBevelFillStart" Storyboard.TargetProperty="Color" To="{StaticResource HoverPressedCurvedBevelFillStartColor}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="CurvedBevelFillEnd" Storyboard.TargetProperty="Color" To="{StaticResource HoverPressedCurvedBevelFillEndColor}" /> 
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="Checked" Storyboard.TargetProperty="Opacity" To="1" />
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="0" />
                            </Storyboard> 
                            <Storyboard x:Key="MouseOver Indeterminate State"> 
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd" Storyboard.TargetProperty="Offset" To=".2" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightStart" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelLightEndColor}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelLightEndColor}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkStart" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelDarkStartColor}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkEnd" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelDarkEndColor}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="CurvedBevelFillStart" Storyboard.TargetProperty="Color" To="{StaticResource HoverPressedCurvedBevelFillStartColor}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="CurvedBevelFillEnd" Storyboard.TargetProperty="Color" To="{StaticResource HoverPressedCurvedBevelFillEndColor}" />
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="Indeterminate" Storyboard.TargetProperty="Opacity" To="1" /> 
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="0" /> 
                            </Storyboard>
                            <Storyboard x:Key="Pressed Unchecked State"> 
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd" Storyboard.TargetProperty="Offset" To=".2" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightStart" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelLightEndColor}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelLightEndColor}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkStart" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelDarkStartColor}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkEnd" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelDarkEndColor}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="CurvedBevelFillStart" Storyboard.TargetProperty="Color" To="{StaticResource HoverPressedCurvedBevelFillStartColor}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="CurvedBevelFillEnd" Storyboard.TargetProperty="Color" To="{StaticResource HoverPressedCurvedBevelFillEndColor}" /> 
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="Checked" Storyboard.TargetProperty="Opacity" To="1" />
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="0" /> 
                            </Storyboard>
                            <Storyboard x:Key="Pressed Checked State">
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd" Storyboard.TargetProperty="Offset" To=".2" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightStart" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelLightEndColor}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelLightEndColor}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkStart" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelDarkStartColor}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkEnd" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelDarkEndColor}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="CurvedBevelFillStart" Storyboard.TargetProperty="Color" To="{StaticResource HoverPressedCurvedBevelFillStartColor}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="CurvedBevelFillEnd" Storyboard.TargetProperty="Color" To="{StaticResource HoverPressedCurvedBevelFillEndColor}" /> 
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="CheckedPressed" Storyboard.TargetProperty="Opacity" To="1" />
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="0" />
                            </Storyboard> 
                            <Storyboard x:Key="Pressed Indeterminate State">
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd" Storyboard.TargetProperty="Offset" To=".2" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightStart" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelLightEndColor}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelLightEnd" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelLightEndColor}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkStart" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelDarkStartColor}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="LinearBevelDarkEnd" Storyboard.TargetProperty="Color" To="{StaticResource HoverLinearBevelDarkEndColor}" /> 
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="CurvedBevelFillStart" Storyboard.TargetProperty="Color" To="{StaticResource HoverPressedCurvedBevelFillStartColor}" />
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="CurvedBevelFillEnd" Storyboard.TargetProperty="Color" To="{StaticResource HoverPressedCurvedBevelFillEndColor}" />
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="IndeterminatePressed" Storyboard.TargetProperty="Opacity" To="1" /> 
                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="0" />
                            </Storyboard>
                            <Storyboard x:Key="Disabled Unchecked State"> 
                                <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="Disabled" Storyboard.TargetProperty="Opacity" To="1" /> 
                            </Storyboard>
                            <Storyboard x:Key="Disabled Checked State"> 
                                <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="Disabled" Storyboard.TargetProperty="Opacity" To="1" />
                            </Storyboard>
                        </Grid.Resources> 

                        <Rectangle x:Name="Background" RadiusX="4" RadiusY="4" Fill="{TemplateBinding Background}" />
                        <Rectangle x:Name="BackgroundGradient" RadiusX="4" RadiusY="4" StrokeThickness="1" Stroke="{StaticResource BorderBrush}"> 
                            <Rectangle.Fill> 
                                <LinearGradientBrush StartPoint="0.7,0" EndPoint="0.7,1">
                                    <GradientStop x:Name="LinearBevelLightStart" Color="{StaticResource LinearBevelLightStartColor}" Offset="0" /> 
                                    <GradientStop x:Name="LinearBevelLightEnd" Color="{StaticResource LinearBevelLightEndColor}" Offset="0.35" />
                                    <GradientStop x:Name="LinearBevelDarkStart" Color="{StaticResource LinearBevelDarkStartColor}" Offset="0.35" />
                                    <GradientStop x:Name="LinearBevelDarkEnd" Color="{StaticResource LinearBevelDarkEndColor}" Offset="1" /> 
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle> 
                        <Grid x:Name="CurvedBevelScale" Margin="2"> 
                            <Grid.RowDefinitions>
                                <RowDefinition Height="7*" /> 
                                <RowDefinition Height="3*" />
                            </Grid.RowDefinitions>
                            <Path x:Name="CurvedBevel" Stretch="Fill" Margin="3,0,3,0" Data="F1 M 0,0.02 V 0.15 C 0.15,0.22 0.30,0.25 0.50,0.26 C 0.70,0.26 0.85,0.22 1,0.15 V 0.02 L 0.97,0 H 0.02 L 0,0.02 Z"> 
                                <Path.Fill>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop x:Name="CurvedBevelFillStart" Color="{StaticResource CurvedBevelFillStartColor}" Offset="0" /> 
                                        <GradientStop x:Name="CurvedBevelFillEnd" Color="{StaticResource CurvedBevelFillEndColor}" Offset="1" /> 
                                    </LinearGradientBrush>
                                </Path.Fill> 
                            </Path>
                        </Grid>
                        <Rectangle x:Name="Accent" RadiusX="3" RadiusY="3" Margin="1" Stroke="{StaticResource AccentBrush}" StrokeThickness="1" /> 
                        <Grid x:Name="FocusVisualElement" Visibility="Collapsed">
                            <Rectangle RadiusX="3" RadiusY="3" Margin="2" Stroke="{StaticResource AccentBrush}" StrokeThickness="1" />
                            <Rectangle RadiusX="3" RadiusY="3" Stroke="{TemplateBinding Background}" StrokeThickness="2" /> 
                            <Rectangle RadiusX="3" RadiusY="3" Stroke="{StaticResource FocusedStrokeBrush}" StrokeThickness="2" /> 
                        </Grid>
                        <Grid x:Name="Checked" Opacity="0"> 
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="1.5" Opacity="0.05" Margin=".5,2.5,.5,.5" />
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="1.5" Opacity="0.05" Margin=".5,2.25,.5,.5" />
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="1.5" Opacity="0.05" Margin=".5,2,.5,.5" /> 
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="1.5" Opacity="0.05" Margin=".5,1.75,.5,.5" />
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="1.5" Opacity="1" Margin=".5" />
                            <Rectangle RadiusX="4" RadiusY="4" StrokeThickness="1.5"  Margin=".5"> 
                                <Rectangle.Stroke> 
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#90FFFFFF" Offset="0" /> 
                                        <GradientStop Color="#FFFFFFFF" Offset="1" />
                                    </LinearGradientBrush>
                                </Rectangle.Stroke> 
                            </Rectangle>
                        </Grid>
                        <Grid x:Name="CheckedPressed" Opacity="0"> 
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="2" Opacity="0.05" Margin=".5,2.5,.5,.5" /> 
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="2" Opacity="0.05" Margin=".5,2.25,.5,.5" />
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="2" Opacity="0.05" Margin=".5,2,.5,.5" /> 
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="2" Opacity="0.05" Margin=".5,1.75,.5,.5" />
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="2" Opacity="1" Margin=".5" />
                            <Rectangle RadiusX="4" RadiusY="4" StrokeThickness="2"  Margin=".5"> 
                                <Rectangle.Stroke>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#90FFFFFF" Offset="0" /> 
                                        <GradientStop Color="#FFFFFFFF" Offset="1" /> 
                                    </LinearGradientBrush>
                                </Rectangle.Stroke> 
                            </Rectangle>
                        </Grid>
                        <Grid x:Name="Indeterminate" Opacity="0"> 
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="1.5" Opacity="0.05" Margin=".5,3.25,.5,.5" />
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="1.5" Opacity="0.05" Margin=".5,3,.5,.5" />
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="1.5" Opacity="0.05" Margin=".5,2.75,.5,.5" /> 
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="1.5" Opacity="0.05" Margin=".5,2.5,.5,.5" /> 
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="1.5" Opacity="0.05" Margin=".5,2.25,.5,.5" />
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="1.5" Opacity="0.05" Margin=".5,2,.5,.5" /> 
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="1.5" Opacity="0.05" Margin=".5,1.75,.5,.5" />
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="1.5" Opacity="1" Margin=".5" />
                            <Rectangle RadiusX="4" RadiusY="4" StrokeThickness="2"  Margin=".5"> 
                                <Rectangle.Stroke>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#33FFFFFF" Offset="0" /> 
                                        <GradientStop Color="#E0FFFFFF" Offset="1" /> 
                                    </LinearGradientBrush>
                                </Rectangle.Stroke> 
                            </Rectangle>
                        </Grid>
                        <Grid x:Name="IndeterminatePressed" Opacity="0"> 
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="2.5" Opacity="0.05" Margin=".5,3.25,.5,.5" />
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="2.5" Opacity="0.05" Margin=".5,3,.5,.5" />
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="2.5" Opacity="0.05" Margin=".5,2.75,.5,.5" /> 
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="2.5" Opacity="0.05" Margin=".5,2.5,.5,.5" /> 
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="2.5" Opacity="0.05" Margin=".5,2.25,.5,.5" />
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="2.5" Opacity="0.05" Margin=".5,2,.5,.5" /> 
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="2.5" Opacity="0.05" Margin=".5,1.75,.5,.5" />
                            <Rectangle Stroke="{TemplateBinding Background}" RadiusX="3" RadiusY="3" StrokeThickness="2.5" Opacity="1" Margin=".5" />
                            <Rectangle RadiusX="4" RadiusY="4" StrokeThickness="2.5"  Margin=".5"> 
                                <Rectangle.Stroke>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#33FFFFFF" Offset="0" /> 
                                        <GradientStop Color="#E0FFFFFF" Offset="1" /> 
                                    </LinearGradientBrush>
                                </Rectangle.Stroke> 
                            </Rectangle>
                        </Grid>
                        <!-- ToggleButton content --> 
                        <ContentPresenter
                          Content="{TemplateBinding Content}"
                          ContentTemplate="{TemplateBinding ContentTemplate}" 
                          FontFamily="{TemplateBinding FontFamily}" 
                          FontSize="{TemplateBinding FontSize}"
                          FontStretch="{TemplateBinding FontStretch}" 
                          FontStyle="{TemplateBinding FontStyle}"
                          FontWeight="{TemplateBinding FontWeight}"
                          Foreground="{TemplateBinding Foreground}" 
                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                          Padding="{TemplateBinding Padding}"
                          TextAlignment="{TemplateBinding TextAlignment}" 
                          TextDecorations="{TemplateBinding TextDecorations}" 
                          TextWrapping="{TemplateBinding TextWrapping}"
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                          Margin="4,5,4,4"
                          IsHitTestVisible="false" />
                        <Rectangle x:Name="Disabled" RadiusX="4" RadiusY="4" Fill="{StaticResource DisabledBrush}" Opacity="0" /> 
                    </Grid>
                </ControlTemplate>
            </Setter.Value> 
        </Setter> 
    </Style>
 

    <!-- Default style for System.Windows.Controls.ToolTip -->
    <Style TargetType="ToolTip"> 
        <Setter Property="Foreground" Value="#FF313131" />
        <!-- Cannot currently parse FontFamily type in XAML so it's being set in code -->
        <!-- <Setter Property="FontFamily" Value="Trebuchet MS" /> --> 
        <Setter Property="FontSize" Value="11" /> 
        <Setter Property="Background">
            <Setter.Value> 
                <LinearGradientBrush x:Name="ToolTipBackground" StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Color="#FFF9FAFA" Offset="0" /> 
                        <GradientStop Color="#FFEDF1F4" Offset="0.37259" />
                        <GradientStop Color="#FFE2E8EF" Offset="0.372881" />
                        <GradientStop Color="#FFC3C9CD" Offset="1" /> 
                    </LinearGradientBrush.GradientStops> 
                </LinearGradientBrush>
            </Setter.Value> 
        </Setter>
        <Setter Property="Template" >
            <Setter.Value> 
                <ControlTemplate TargetType="ToolTip">
                    <Border Background="#06000000"
                            Padding="1.5" 
                            CornerRadius="2"> 
                        <Border Background="#06000000"
                                Padding="1.5" 
                                CornerRadius="1.5">
                            <Border Background="#FFFFFFFF"
                                    BorderThickness=".5" 
                                    BorderBrush="#FF000000"
                                    CornerRadius="1.5"
                                    Padding="1"> 
                                <Border Name="RootElement" 
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="1" 
                                        BorderBrush="#FFFFFFFF"
                                        CornerRadius="1.25"
                                        Padding="4,4,4,3"> 
                                    <Border.Resources>
                                        <Storyboard x:Key="Visible State"/>
                                        <Storyboard x:Key="Normal State"/> 
                                    </Border.Resources> 
                                    <ContentPresenter
                                      Content="{TemplateBinding Content}" 
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Cursor="{TemplateBinding Cursor}"
                                      FontFamily="{TemplateBinding FontFamily}" 
                                      FontSize="{TemplateBinding FontSize}"
                                      FontStretch="{TemplateBinding FontStretch}"
                                      FontStyle="{TemplateBinding FontStyle}" 
                                      FontWeight="{TemplateBinding FontWeight}" 
                                      Foreground="{TemplateBinding Foreground}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                      Padding="{TemplateBinding Padding}"
                                      TextAlignment="{TemplateBinding TextAlignment}"
                                      TextDecorations="{TemplateBinding TextDecorations}" 
                                      TextWrapping="{TemplateBinding TextWrapping}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border> 
                            </Border> 
                        </Border>
                    </Border> 
                </ControlTemplate>
            </Setter.Value>
        </Setter> 
    </Style>
</ResourceDictionary>
