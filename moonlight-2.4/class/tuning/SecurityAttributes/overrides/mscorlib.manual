# manual override file for [SecurityCritical] and  [SecuritySafeCritical] attributes

# available on SL2 (even if it returns an IntPtr that cannot be cast back to a GCHandle)
-SC-M: System.IntPtr System.Runtime.InteropServices.GCHandle::op_Explicit(System.Runtime.InteropServices.GCHandle)
# but since it calls IntPtr::op_Explicit (SecurityCritical) we turn it into a SecuritySafeCritical
+SSC-M: System.IntPtr System.Runtime.InteropServices.GCHandle::op_Explicit(System.Runtime.InteropServices.GCHandle)

# use Activator.CreateInstance to create (inaccessible) GenericComparer<T>
+SSC-M: System.Void System.Collections.Generic.Comparer`1::.cctor()

# use Activator.CreateInstance to create (inaccessible) GenericEqualityComparer<T>
+SSC-M: System.Void System.Collections.Generic.EqualityComparer`1::.cctor()

# corlib now use (internal)SafeFileHandle which inherits a SC type (SafeHandleZeroOrMinusOneIsInvalid)
+SC-T: Microsoft.Win32.SafeHandles.SafeFileHandle

# corlib calls System.Windows.Application.OnUnhandledException using reflection
+SSC-M: System.Void System.Threading.Thread::MoonlightUnhandledException(System.Exception)

# delegate checks are at creation, not invoke, time. this makes [Multicast]Delegate.DynamicInvoke [SecuritySafeCritical] methods
+SC-M: System.Object System.Delegate::DynamicInvokeImpl(System.Object[])

# deserializable between threads (e.g. CurrentCulture) requires reflection
+SSC-M: System.Void System.Runtime.Serialization.Formatters.Binary.ObjectReader::SetObjectValue(System.Object,System.String,System.Reflection.MemberInfo,System.Runtime.Serialization.SerializationInfo,System.Object,System.Type,System.Int32[])

# 5 Module methods depends on this icall - GetField[s], GetMethod[Impl][s]
-SC-M: System.Type System.Reflection.Module::GetGlobalType()
+SSC-M: System.Type System.Reflection.Module::GetGlobalType()

# 4 StackFrame ctor all depends on the same icall
-SC-M: System.Boolean System.Diagnostics.StackFrame::get_frame_info(System.Int32,System.Boolean,System.Reflection.MethodBase&,System.Int32&,System.Int32&,System.String&,System.Int32&,System.Int32&)
+SSC-M: System.Boolean System.Diagnostics.StackFrame::get_frame_info(System.Int32,System.Boolean,System.Reflection.MethodBase&,System.Int32&,System.Int32&,System.String&,System.Int32&,System.Int32&)

# mark as [SecurityCritical] since different validations are done by callers (i.e. they are the safe critical)
+SC-M: System.Int32 System.Array::DoBinarySearch(System.Array,System.Int32,System.Int32,System.Object,System.Collections.IComparer)
# remove SSC from unused internal (2.1) overload
+SC-M: System.Int32 System.Array::BinarySearch(System.Array,System.Int32,System.Int32,System.Object)

# the code under CompareInfo::internal_* does not do all the validations, so we must review the (more numerous) callers
+SC-M: System.Int32 System.Globalization.CompareInfo::internal_compare_switch(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)
+SC-M: System.Int32 System.Globalization.CompareInfo::internal_index_switch(System.String,System.Int32,System.Int32,System.Char,System.Globalization.CompareOptions,System.Boolean)
+SC-M: System.Int32 System.Globalization.CompareInfo::internal_index_switch(System.String,System.Int32,System.Int32,System.String,System.Globalization.CompareOptions,System.Boolean)

# validate the (parameter-less) icall instead of its (multiple) callers
-SC-M: System.Threading.ThreadState System.Threading.Thread::GetState()
+SSC-M: System.Threading.ThreadState System.Threading.Thread::GetState()

# unvalidated (by design) methods - they cannot be made safe, only their callers (which validates their parameters)
+SC-M: System.Void System.String::CharCopy(System.String,System.Int32,System.Char[],System.Int32,System.Int32)
+SC-M: System.Void System.String::CharCopy(System.String,System.Int32,System.String,System.Int32,System.Int32)
+SC-M: System.Void System.String::CharCopyReverse(System.String,System.Int32,System.String,System.Int32,System.Int32)
+SC-M: System.String System.String::ConcatInternal(System.String[],System.Int32)
+SC-M: System.String System.String::JoinUnchecked(System.String,System.String[],System.Int32,System.Int32)
+SC-M: System.String System.String::SubstringUnchecked(System.Int32,System.Int32)
+SC-M: System.String System.String::ReplaceFallback(System.String,System.String,System.Int32)

# types unavailable in ML2 but that we can't easily remove from Mono's mscorlib.dll
+SC-T: System.Array/SimpleEnumerator
+SC-T: System.ArgIterator
+SC-T: System.Runtime.Remoting.Activation.ActivationServices
+SC-T: System.Runtime.Remoting.Activation.AppDomainLevelActivator
+SC-T: System.Runtime.Remoting.Activation.ConstructionLevelActivator
+SC-T: System.Runtime.Remoting.Activation.ContextLevelActivator
+SC-T: System.Runtime.Remoting.Activation.RemoteActivator
+SC-T: System.Runtime.Remoting.ChannelInfo
+SC-T: System.Runtime.Remoting.Channels.CADSerializer
+SC-T: System.Runtime.Remoting.Channels.ChannelServices
+SC-T: System.Runtime.Remoting.Channels.CrossAppDomainChannel
+SC-T: System.Runtime.Remoting.Channels.CrossAppDomainData
+SC-T: System.Runtime.Remoting.Channels.CrossAppDomainSink
+SC-T: System.Runtime.Remoting.ClientActivatedIdentity
+SC-T: System.Runtime.Remoting.ClientIdentity
+SC-T: System.Runtime.Remoting.ConfigHandler
+SC-T: System.Runtime.Remoting.Contexts.Context
+SC-T: System.Runtime.Remoting.Contexts.ContextAttribute
+SC-T: System.Runtime.Remoting.Contexts.CrossContextChannel
+SC-T: System.Runtime.Remoting.Contexts.SynchronizationAttribute
+SC-T: System.Runtime.Remoting.Contexts.SynchronizedClientContextSink
+SC-T: System.Runtime.Remoting.Contexts.SynchronizedContextReplySink
+SC-T: System.Runtime.Remoting.Contexts.SynchronizedServerContextSink
+SC-T: System.Runtime.Remoting.InternalRemotingServices
+SC-T: System.Runtime.Remoting.Lifetime.Lease
+SC-T: System.Runtime.Remoting.Lifetime.LeaseManager
+SC-T: System.Runtime.Remoting.Lifetime.LeaseSink
+SC-T: System.Runtime.Remoting.Lifetime.LifetimeServices
+SC-T: System.Runtime.Remoting.Messaging.CADMessageBase
+SC-T: System.Runtime.Remoting.Messaging.CADMethodCallMessage
+SC-T: System.Runtime.Remoting.Messaging.CADMethodReturnMessage
+SC-T: System.Runtime.Remoting.Messaging.CADObjRef
+SC-T: System.Runtime.Remoting.Messaging.ClientContextReplySink
+SC-T: System.Runtime.Remoting.Messaging.ClientContextTerminatorSink
+SC-T: System.Runtime.Remoting.Messaging.ConstructionCall
+SC-T: System.Runtime.Remoting.Messaging.ConstructionResponse
+SC-T: System.Runtime.Remoting.Messaging.EnvoyTerminatorSink
+SC-T: System.Runtime.Remoting.Messaging.MethodCall
+SC-T: System.Runtime.Remoting.Messaging.MethodResponse
+SC-T: System.Runtime.Remoting.Messaging.ObjRefSurrogate
+SC-T: System.Runtime.Remoting.Messaging.RemotingSurrogate
+SC-T: System.Runtime.Remoting.Messaging.RemotingSurrogateSelector
+SC-T: System.Runtime.Remoting.Messaging.ServerContextTerminatorSink
+SC-T: System.Runtime.Remoting.Messaging.ServerObjectTerminatorSink
+SC-T: System.Runtime.Remoting.Messaging.StackBuilderSink
+SC-T: System.Runtime.Remoting.Metadata.SoapMethodAttribute
+SC-T: System.Runtime.Remoting.Metadata.SoapTypeAttribute
+SC-T: System.Runtime.Remoting.ObjRef
+SC-T: System.Runtime.Remoting.Proxies.ProxyAttribute
+SC-T: System.Runtime.Remoting.Proxies.RealProxy
+SC-T: System.Runtime.Remoting.Proxies.RemotingProxy
+SC-T: System.Runtime.Remoting.RemotingConfiguration
+SC-T: System.Runtime.Remoting.RemotingServices
+SC-T: System.Runtime.Remoting.ServerIdentity
+SC-T: System.Runtime.Remoting.SingleCallIdentity
+SC-T: System.Runtime.Remoting.SingletonIdentity
+SC-T: System.Runtime.Remoting.SoapServices
+SC-T: System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
+SC-T: System.Runtime.Serialization.Formatters.Binary.CodeGenerator
+SC-T: System.Runtime.Serialization.Formatters.Binary.MemberTypeMetadata
+SC-T: System.Runtime.Serialization.Formatters.Binary.MessageFormatter
+SC-T: System.Runtime.Serialization.Formatters.Binary.SerializableTypeMetadata
+SC-T: System.Runtime.Serialization.FormatterServices
+SC-T: System.Runtime.Serialization.ObjectIDGenerator
+SC-T: System.Runtime.Serialization.ObjectIDGenerator/InstanceComparer
+SC-T: System.Threading.Mutex

# needed by smcs/SRE but not available in ML API
+SC-M: System.Boolean Mono.Security.StrongName::Sign(System.String)
+SC-T: System.Resources.ResourceReader
+SC-T: System.Resources.ResourceWriter
+SC-T: System.Resources.RuntimeResourceSet
+SC-M: System.Resources.IResourceWriter System.Reflection.Emit.AssemblyBuilder::DefineResource(System.String,System.String,System.String,System.Reflection.ResourceAttributes)
+SC-M: System.Void System.Reflection.Emit.AssemblyBuilder::DefineUnmanagedResource(System.String)
+SC-M: System.Void System.Reflection.Emit.AssemblyBuilder::DefineIconResource(System.String)
+SC-M: System.Void System.Reflection.Emit.AssemblyBuilder::EmbedResourceFile(System.String,System.String,System.Reflection.ResourceAttributes)
+SC-M: System.Reflection.Module System.Reflection.Emit.AssemblyBuilder::AddModule(System.String)
+SC-M: System.Resources.IResourceWriter System.Reflection.Emit.AssemblyBuilder::DefineResource(System.String,System.String,System.String)
+SC-M: System.Void System.Reflection.Emit.AssemblyBuilder::Save(System.String)
+SC-M: System.Void System.Reflection.Emit.AssemblyBuilder::Save(System.String,System.Reflection.PortableExecutableKinds,System.Reflection.ImageFileMachine)
+SC-M: System.Void System.Reflection.Emit.AssemblyBuilder::check_name_and_filename(System.String,System.String,System.Boolean)
+SC-M: System.Void System.Reflection.Emit.AssemblyBuilder::AddResourceFile(System.String,System.String,System.Reflection.ResourceAttributes,System.Boolean)
+SC-M: System.Void System.Reflection.Emit.AssemblyBuilder::EmbedResourceFile(System.String,System.String)
+SC-M: System.Resources.IResourceWriter System.Reflection.Emit.ModuleBuilder::DefineResource(System.String,System.String)
+SC-M: System.Resources.IResourceWriter System.Reflection.Emit.ModuleBuilder::DefineResource(System.String,System.String,System.Reflection.ResourceAttributes)
+SC-M: System.IO.UnmanagedMemoryStream System.Resources.ResourceSet::GetStream(System.String,System.Boolean)
+SC-M: System.Void System.ModuleHandle::GetPEKind(System.Reflection.PortableExecutableKinds&,System.Reflection.ImageFileMachine&)
+SC-M: System.Void System.Reflection.Module::GetPEKind(System.Reflection.PortableExecutableKinds&,System.Reflection.ImageFileMachine&)

# extra, non-safe, non-visible methods
+SC-M: System.String System.AppDomainSetup::GetAppBase(System.String)
+SC-M: System.Void System.AppDomain::ProcessMessageInDomain(System.Byte[],System.Runtime.Remoting.Messaging.CADMethodCallMessage,System.Byte[]&,System.Runtime.Remoting.Messaging.CADMethodReturnMessage&)
+SC-M: System.Runtime.Remoting.Identity System.MarshalByRefObject::GetObjectIdentity(System.MarshalByRefObject,System.Boolean&)
+SC-M: System.Runtime.Remoting.ObjRef System.MarshalByRefObject::CreateObjRef(System.Type)
+SC-M: System.Object System.MarshalByRefObject::GetLifetimeService()
+SC-M: System.Object System.MarshalByRefObject::InitializeLifetimeService()
+SC-M: System.Boolean System.IO.MonoIO::Exists(System.String,System.IO.MonoIOError&)
+SC-M: System.Boolean System.IO.MonoIO::ExistsFile(System.String,System.IO.MonoIOError&)
+SC-M: System.Boolean System.IO.MonoIO::ExistsDirectory(System.String,System.IO.MonoIOError&)
+SC-M: System.Boolean System.IO.MonoIO::ExistsSymlink(System.String,System.IO.MonoIOError&)
+SC-M: System.Void Mono.Globalization.Unicode.MSCompatUnicodeTable::BuildTailoringTables(System.Globalization.CultureInfo,Mono.Globalization.Unicode.TailoringInfo,Mono.Globalization.Unicode.Contraction[]&,Mono.Globalization.Unicode.Level2Map[]&)
+SC-M: System.IntPtr Mono.Globalization.Unicode.MSCompatUnicodeTable::GetResource(System.String)
+SC-M: System.Void Mono.Globalization.Unicode.MSCompatUnicodeTable::FillCJKCore(System.String,Mono.Globalization.Unicode.CodePointIndexer&,System.Byte*&,System.Byte*&,Mono.Globalization.Unicode.CodePointIndexer&,System.Byte*&)
+SC-M: System.Globalization.SortKey Mono.Globalization.Unicode.SimpleCollator::GetSortKey(System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)
+SC-M: System.Boolean Mono.Globalization.Unicode.SimpleCollator::IsPrefix(System.String,System.String,System.Globalization.CompareOptions)
+SC-M: System.Boolean Mono.Globalization.Unicode.SimpleCollator::IsSuffix(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)
+SC-M: System.Void Mono.Globalization.Unicode.MSCompatUnicodeTable::FillCJK(System.String,Mono.Globalization.Unicode.CodePointIndexer&,System.Byte*&,System.Byte*&,Mono.Globalization.Unicode.CodePointIndexer&,System.Byte*&)
+SC-M: System.Void Mono.Globalization.Unicode.SimpleCollator::.ctor(System.Globalization.CultureInfo)
+SC-M: System.Globalization.SortKey Mono.Globalization.Unicode.SimpleCollator::GetSortKey(System.String,System.Globalization.CompareOptions)
+SC-M: System.Boolean Mono.Globalization.Unicode.SimpleCollator::IsSuffix(System.String,System.String,System.Globalization.CompareOptions)
+SC-M: System.Void Mono.Globalization.Unicode.SimpleCollator::SetCJKTable(System.Globalization.CultureInfo,Mono.Globalization.Unicode.CodePointIndexer&,System.Byte*&,System.Byte*&,Mono.Globalization.Unicode.CodePointIndexer&,System.Byte*&)
+SC-M: System.Int32 System.Runtime.Serialization.Formatters.Binary.ObjectWriter::RegisterAssembly(System.String,System.Boolean&)
+SC-M: System.IO.DirectoryInfo System.IO.Directory::CreateDirectoriesInternal(System.String)
+SC-M: System.Void System.IO.Directory::RecursiveDelete(System.String)
+SC-M: Microsoft.Win32.SafeHandles.SafeFileHandle System.IO.FileStream::get_SafeFileHandle()
+SC-M: System.Globalization.SortKey System.Globalization.CompareInfo::GetSortKey(System.String,System.Globalization.CompareOptions)
+SC-M: System.Globalization.SortKey System.Globalization.CompareInfo::GetSortKey(System.String)
+SC-M: System.Void System.IO.FileStream::Lock(System.Int64,System.Int64)
+SC-M: System.Void System.IO.FileStream::Unlock(System.Int64,System.Int64)
+SC-M: System.IO.FileAttributes System.IO.File::GetAttributes(System.String)
+SC-M: System.Byte[] System.IO.File::ReadAllBytes(System.String)
+SC-M: System.String System.Environment::get_CommandLine()
+SC-M: System.String System.Environment::get_UserDomainName()
+SC-M: System.String System.Environment::GetEnvironmentVariable(System.String)
+SC-M: System.Collections.Hashtable System.Environment::GetEnvironmentVariablesNoCase()
+SC-M: System.Collections.IDictionary System.Environment::GetEnvironmentVariables()
+SC-M: System.String[] System.Environment::GetLogicalDrives()
+SC-M: System.String System.Environment::ReadXdgUserDir(System.String,System.String,System.String,System.String)
+SC-M: System.String System.Environment::ExpandEnvironmentVariables(System.String)
+SC-M: System.String System.Environment::InternalGetFolderPath(System.Environment/SpecialFolder)
+SC-M: System.Void System.GC::Collect(System.Int32)
+SC-M: System.Void System.GC::Collect(System.Int32,System.GCCollectionMode)
+SC-M: System.Void System.GC::AddMemoryPressure(System.Int64)
+SC-M: System.Void System.GC::RemoveMemoryPressure(System.Int64)
+SC-M: System.Int32 System.GC::GetGeneration(System.WeakReference)
+SC-M: System.Object System.Activator::CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
+SC-M: System.Object System.Activator::CreateInstance(System.Type,System.Boolean)
+SC-M: System.Object System.Activator::CreateInstance(System.Type,System.Object[],System.Object[])
+SC-M: System.Object System.Activator::CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
+SC-M: System.Object System.Reflection.Assembly::CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
+SC-M: System.Reflection.Assembly System.Reflection.Assembly::ReflectionOnlyLoadFrom(System.String)
+SC-M: System.Reflection.Assembly System.Reflection.Assembly::ReflectionOnlyLoad(System.Byte[])
+SC-M: System.Reflection.Assembly System.Reflection.Assembly::ReflectionOnlyLoad(System.String)
+SC-M: System.Reflection.Assembly System.Reflection.Assembly::LoadFrom(System.String,System.Security.Policy.Evidence)
+SC-M: System.Reflection.Assembly System.Reflection.Assembly::LoadWithPartialName(System.String,System.Security.Policy.Evidence,System.Boolean)
+SC-M: System.Reflection.Assembly System.Reflection.Assembly::LoadWithPartialName(System.String,System.Security.Policy.Evidence)
+SC-M: System.Reflection.Assembly System.Reflection.Assembly::LoadWithPartialName(System.String)
+SC-M: System.Reflection.Assembly System.Reflection.Assembly::Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
+SC-M: System.Reflection.Assembly System.Reflection.Assembly::Load(System.String,System.Security.Policy.Evidence)
+SC-M: System.Reflection.Assembly System.Reflection.Assembly::Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)
+SC-M: System.Reflection.Assembly System.Reflection.Assembly::LoadFile(System.String,System.Security.Policy.Evidence)
+SC-M: System.Reflection.Assembly System.Reflection.Assembly::LoadFile(System.String)
+SC-M: System.Reflection.ManifestResourceInfo System.Reflection.Assembly::GetManifestResourceInfo(System.String)
+SC-M: System.Reflection.Assembly System.AppDomain::LoadSatellite(System.Reflection.AssemblyName)
+SC-M: System.Reflection.Assembly System.AppDomain::Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
+SC-M: System.Reflection.Assembly System.AppDomain::Load(System.String,System.Security.Policy.Evidence,System.Boolean)
+SC-M: System.Reflection.Assembly System.AppDomain::Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence,System.Boolean)
+SC-M: System.Reflection.Assembly System.AppDomain::Load(System.Reflection.AssemblyName)
+SC-M: System.Reflection.Assembly System.AppDomain::Load(System.String)
+SC-M: System.Reflection.Assembly System.AppDomain::Load(System.String,System.Security.Policy.Evidence)
+SC-M: System.Reflection.Assembly System.AppDomain::Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)
+SC-M: System.Reflection.Assembly System.AppDomain::Load(System.Byte[])
+SC-M: System.Reflection.Assembly System.AppDomain::Load(System.Byte[],System.Byte[])
+SC-M: System.Object System.AppDomain::InvokeInDomain(System.AppDomain,System.Reflection.MethodInfo,System.Object,System.Object[])
+SC-M: System.Object System.AppDomain::InvokeInDomainByID(System.Int32,System.Reflection.MethodInfo,System.Object,System.Object[])
+SC-M: System.Int32 System.AppDomain::ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])
+SC-M: System.Int32 System.AppDomain::ExecuteAssemblyInternal(System.Reflection.Assembly,System.String[])
+SC-M: System.Int32 System.AppDomain::ExecuteAssembly(System.String,System.Security.Policy.Evidence)
+SC-M: System.Int32 System.AppDomain::ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[],System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
+SC-M: System.Int32 System.AppDomain::ExecuteAssembly(System.String)
+SC-M: System.Reflection.Assembly[] System.AppDomain::GetAssemblies()
+SC-M: System.String System.Reflection.Assembly::GetCodeBase(System.Boolean)
+SC-M: System.Reflection.AssemblyName System.Reflection.Assembly::UnprotectedGetName()
+SC-M: System.AppDomainSetup System.AppDomain::get_SetupInformationNoCopy()
+SC-M: System.AppDomainSetup System.AppDomain::get_SetupInformation()
+SC-M: System.AppDomain System.AppDomain::get_DefaultDomain()
+SC-M: System.String System.AppDomain::GetProcessGuid()
+SC-M: System.Boolean System.AppDomain::IsFinalizingForUnload()
+SC-M: System.Int32 System.AppDomain::getDomainID()
+SC-M: System.Void System.AppDomain::Unload(System.AppDomain)
+SC-M: System.Reflection.Assembly System.AppDomain::DoAssemblyResolve(System.String,System.Boolean)
+SC-M: System.Reflection.Assembly System.AppDomain::DoTypeResolve(System.Object)
+SC-M: System.Reflection.AssemblyName System.Reflection.Emit.AssemblyBuilder::UnprotectedGetName()
+SC-M: System.IO.Stream System.Console::Open(System.IntPtr,System.IO.FileAccess,System.Int32)
+SC-M: System.IO.Stream System.Console::OpenStandardError(System.Int32)
+SC-M: System.IO.Stream System.Console::OpenStandardError()
+SC-M: System.IO.Stream System.Console::OpenStandardInput(System.Int32)
+SC-M: System.IO.Stream System.Console::OpenStandardInput()
+SC-M: System.IO.Stream System.Console::OpenStandardOutput(System.Int32)
+SC-M: System.IO.Stream System.Console::OpenStandardOutput()
+SC-M: System.Boolean System.Globalization.CultureInfo::IsIDNeutralCulture(System.Int32)
+SC-M: System.String[] System.IO.Directory::GetFileSystemEntries(System.String,System.String,System.IO.FileAttributes,System.IO.FileAttributes)
+SC-M: System.Void System.IO.FileStream::.ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean,System.Boolean)
+SC-M: System.Type System.Reflection.Module::MonoDebugger_ResolveType(System.Reflection.Module,System.Int32)
+SC-M: System.String System.IO.Path::CanonicalizePath(System.String)
+SC-M: System.String System.IO.Path::WindowsDriveAdjustment(System.String)
+SC-M: System.String System.IO.Path::InsecureGetFullPath(System.String)
+SC-M: System.Void System.Globalization.RegionInfo::.ctor(System.Int32)
+SC-M: System.Boolean System.Globalization.RegionInfo::GetByTerritory(System.Globalization.CultureInfo)
+SC-M: System.Void System.Diagnostics.StackTrace::init_frames(System.Int32,System.Boolean)
+SC-M: System.Type System.Type::ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)
+SC-M: System.Byte[] System.Security.Cryptography.X509Certificates.X509Certificate::Load(System.String)
+SC-M: System.IntPtr System.RuntimeMethodHandle::GetFunctionPointer()
+SC-M: System.Reflection.Emit.UnmanagedMarshal System.Reflection.FieldInfo::get_UMarshal()
+SC-M: System.Type[] System.Reflection.FieldInfo::GetOptionalCustomModifiers()
+SC-M: System.Type[] System.Reflection.FieldInfo::GetRequiredCustomModifiers()
+SC-M: System.Object[] System.Reflection.FieldInfo::GetPseudoCustomAttributes()
+SC-M: System.String System.Environment::get_StackTrace()
+SC-M: System.Int32 System.Reflection.Module::get_MDStreamVersion()
+SC-M: System.Reflection.FieldInfo System.Reflection.Module::ResolveField(System.Int32)
+SC-M: System.Reflection.FieldInfo System.Reflection.Module::ResolveField(System.Int32,System.Type[],System.Type[])
+SC-M: System.Reflection.MemberInfo System.Reflection.Module::ResolveMember(System.Int32)
+SC-M: System.Reflection.MemberInfo System.Reflection.Module::ResolveMember(System.Int32,System.Type[],System.Type[])
+SC-M: System.Byte[] System.Reflection.Module::ResolveSignature(System.Int32)
+SC-M: System.Guid System.Reflection.Module::GetModuleVersionId()
+SC-M: System.Guid System.Reflection.Module::get_MvId()
+SC-M: System.Guid System.Reflection.Module::get_ModuleVersionId()
+SC-M: System.Guid System.Reflection.Module::Mono_GetGuid(System.Reflection.Module)
+SC-M: System.Guid System.Reflection.Emit.ModuleBuilder::Mono_GetGuid(System.Reflection.Emit.ModuleBuilder)
+SC-M: System.Void System.Reflection.Emit.ModuleBuilder::Save()

+SC-M: System.Boolean System.Globalization.CultureInfo::ConstructInternalLocaleFromLcid(System.Int32)
+SC-M: System.Void System.Globalization.CultureInfo::.ctor(System.Int32,System.Boolean,System.Boolean)
+SC-M: System.Boolean System.Globalization.CultureInfo::ConstructInternalLocaleFromSpecificName(System.Globalization.CultureInfo,System.String)
+SC-M: System.Void System.Globalization.CultureInfo::.ctor(System.Int32,System.Boolean)
+SC-M: System.Globalization.CultureInfo System.Globalization.CultureInfo::CreateSpecificCulture(System.String)
+SC-M: System.Globalization.CultureInfo System.Globalization.CultureInfo::GetCultureInfo(System.Int32)
+SC-M: System.Globalization.CultureInfo System.Globalization.CultureInfo::get_InstalledUICulture()

+SC-M: System.Boolean System.Threading.Monitor::Wait(System.Object,System.Int32,System.Boolean)
+SC-M: System.Boolean System.Threading.Monitor::Wait(System.Object,System.TimeSpan,System.Boolean)
+SC-M: System.Boolean System.Threading.WaitHandle::WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)
+SC-M: System.Boolean System.Threading.WaitHandle::WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)
+SC-M: System.Int32 System.Threading.WaitHandle::WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)
+SC-M: System.Int32 System.Threading.WaitHandle::WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)
+SC-M: System.Boolean System.Threading.WaitHandle::WaitOne(System.Int32,System.Boolean)
+SC-M: System.Boolean System.Threading.WaitHandle::WaitOne(System.TimeSpan,System.Boolean)
+SC-M: System.String System.Exception::get_Source()
+SC-M: System.Reflection.MethodBase System.Exception::get_TargetSite()
+SC-M: System.Void System.Diagnostics.StackTrace::.ctor(System.Exception,System.Int32,System.Boolean,System.Boolean)

+SC-M: System.Void System.Runtime.CompilerServices.RuntimeHelpers::RunModuleConstructor(System.ModuleHandle)
+SC-M: System.IntPtr System.Threading.WaitHandle::get_Handle()
+SC-M: System.Void System.Threading.WaitHandle::set_Handle(System.IntPtr)
+SC-M: System.Void System.Threading.Thread::.ctor(System.Threading.ThreadStart,System.Int32)
+SC-M: System.Void System.Threading.Thread::.ctor(System.Threading.ParameterizedThreadStart,System.Int32)
+SC-M: System.Runtime.Remoting.Contexts.Context System.Threading.Thread::get_CurrentContext()
+SC-M: System.Void System.Threading.Thread::ResetAbort()
+SC-M: System.Void System.Threading.RegisteredWaitHandle::Wait(System.Object)
+SC-M: System.Void System.Threading.RegisteredWaitHandle::DoCallBack(System.Object)
+SC-M: System.Void System.Threading.Timer/Scheduler::.ctor()
+SC-M: System.Void System.Threading.Timer/Scheduler::SchedulerThread()

# almost but not all (explicit) visible methods are [SecurityCritical]
+SC-M: System.Void System.Runtime.InteropServices.GCHandle::.ctor(System.Object)
+SC-M: System.Void System.Runtime.InteropServices.GCHandle::.ctor(System.Object,System.Runtime.InteropServices.GCHandleType)
+SC-M: System.Runtime.InteropServices.GCHandle System.Runtime.InteropServices.GCHandle::FromIntPtr(System.IntPtr)

+SC-M: System.Void System.Array::slow_swapper(System.Int32,System.Int32)
+SC-M: System.Void System.Array::swap(System.Array,System.Array,System.Int32,System.Int32)
+SC-M: System.Void System.Array::slow_swapper(System.Int32,System.Int32)
+SC-M: System.Void System.Array::qsort(System.Array,System.Array,System.Int32,System.Int32,System.Collections.IComparer)
+SC-M: System.Void System.Array::swap(System.Array,System.Array,System.Int32,System.Int32)
+SC-M: System.Array/Swapper System.Array::get_swapper(System.Array)
+SC-M: System.Array/Swapper System.Array::get_swapper<T>(T[])
+SC-M: System.Void System.Resources.ResourceSet::.ctor(System.IO.UnmanagedMemoryStream)
+SC-M: System.String System.IO.IsolatedStorage.IsolatedStorage::TryDirectory(System.String)
+SC-M: System.String System.IO.IsolatedStorage.IsolatedStorageFile::Verify(System.String)
+SC-M: System.String System.IO.IsolatedStorage.IsolatedStorage::GetIsolatedStorageRoot()
+SC-M: System.Void System.IO.IsolatedStorage.IsolatedStorage::SetupSite(System.String)
+SC-M: System.Void System.IO.IsolatedStorage.IsolatedStorage::LoadConfiguration()
+SC-M: System.Void System.IO.IsolatedStorage.IsolatedStorage::SaveConfiguration()
+SC-M: System.Void System.IO.IsolatedStorage.IsolatedStorage::SetupApplication(System.String,System.String,System.String)
+SC-M: System.Void System.IO.IsolatedStorage.IsolatedStorage::SetupApplication(System.String,System.String,System.String)
+SC-M: System.String System.IO.IsolatedStorage.IsolatedStorage::TryDirectory(System.String)
+SC-M: System.Void System.IO.IsolatedStorage.IsolatedStorage::Remove(System.String)

+SC-M: System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandleNoGenericCheck(System.RuntimeMethodHandle)
+SC-M: System.Reflection.MethodBody System.Reflection.MethodBase::GetMethodBody(System.IntPtr)
+SC-M: System.Reflection.MethodBody System.Reflection.MethodBase::GetMethodBody()
+SC-M: System.Reflection.MethodBody System.Reflection.MonoCMethod::GetMethodBody()
+SC-M: System.Reflection.MethodBody System.Reflection.MonoMethod::GetMethodBody()

+SC-M: System.Type[] System.Reflection.ParameterInfo::GetOptionalCustomModifiers()
+SC-M: System.Type[] System.Reflection.ParameterInfo::GetRequiredCustomModifiers()
+SC-M: System.Type[] System.Reflection.PropertyInfo::GetOptionalCustomModifiers()
+SC-M: System.Type[] System.Reflection.PropertyInfo::GetRequiredCustomModifiers()
+SC-M: System.Type[] System.Reflection.MonoProperty::GetOptionalCustomModifiers()
+SC-M: System.Type[] System.Reflection.MonoProperty::GetRequiredCustomModifiers()
+SC-M: System.Object[] System.MonoCustomAttrs::GetPseudoCustomAttributes(System.Reflection.ICustomAttributeProvider,System.Type)
+SC-M: System.AttributeUsageAttribute System.MonoCustomAttrs::RetrieveAttributeUsage(System.Type)
+SC-M: System.Double System.Math::Round(System.Double,System.Int32,System.MidpointRounding)
+SC-M: System.Boolean System.Threading.WaitHandle::SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)
+SC-M: System.Boolean System.Threading.WaitHandle::SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)
+SC-M: System.Boolean System.Threading.WaitHandle::SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)
+SC-M: System.Void System.Globalization.CultureInfo::.ctor(System.String,System.Boolean)
+SC-M: System.Void System.Globalization.CultureInfo::.ctor(System.String,System.Boolean,System.Boolean)
+SC-M: System.Boolean System.Globalization.CultureInfo::ConstructInternalLocaleFromName(System.String)
+SC-M: System.Globalization.CultureInfo System.Globalization.CultureInfo::CreateCulture(System.String,System.Boolean)
+SC-M: System.Globalization.CultureInfo System.Globalization.CultureInfo::GetCultureInfo(System.String)
+SC-M: System.Globalization.CultureInfo System.Globalization.CultureInfo::GetCultureInfo(System.String,System.String)
+SC-M: System.Globalization.CultureInfo System.Globalization.CultureInfo::GetCultureInfoByIetfLanguageTag(System.String)

+SC-M: System.String System.IO.FileStream::GetSecureFileName(System.String)
+SC-M: System.String System.IO.FileStream::GetSecureFileName(System.String,System.Boolean)

+SC-M: System.Delegate System.DelegateSerializationHolder/DelegateEntry::DeserializeDelegate(System.Runtime.Serialization.SerializationInfo)
+SC-M: System.Void System.DelegateSerializationHolder::.ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)

+SC-M: System.Int32 System.Runtime.Serialization.Formatters.Binary.ObjectWriter::WriteAssemblyName(System.IO.BinaryWriter,System.String)
+SC-M: System.Int32 System.Runtime.Serialization.Formatters.Binary.ObjectWriter::WriteAssembly(System.IO.BinaryWriter,System.Reflection.Assembly)
+SC-M: System.Void System.Runtime.Serialization.Formatters.Binary.ObjectWriter::WriteGenericArray(System.IO.BinaryWriter,System.Int64,System.Array)
+SC-M: System.Void System.Runtime.Serialization.Formatters.Binary.ObjectWriter::WriteArray(System.IO.BinaryWriter,System.Int64,System.Array)
+SC-M: System.Runtime.Serialization.Formatters.Binary.TypeMetadata System.Runtime.Serialization.Formatters.Binary.ObjectWriter::CreateMemberTypeMetadata(System.Type)

+SC-M: System.Reflection.Emit.AssemblyBuilder System.AppDomain::DefineInternalDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)
+SC-M: System.Void System.Reflection.Emit.AssemblyBuilder::.ctor(System.Reflection.AssemblyName,System.String,System.Reflection.Emit.AssemblyBuilderAccess,System.Boolean)
+SC-M: System.Void System.Reflection.Emit.ConstructorBuilder::.ctor(System.Reflection.Emit.TypeBuilder,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[],System.Type[][],System.Type[][])
+SC-M: System.Void System.Reflection.Emit.EnumBuilder::.ctor(System.Reflection.Emit.ModuleBuilder,System.String,System.Reflection.TypeAttributes,System.Type)
+SC-M: System.Void System.Reflection.Emit.GenericTypeParameterBuilder::.ctor(System.Reflection.Emit.TypeBuilder,System.Reflection.Emit.MethodBuilder,System.String,System.Int32)
+SC-M: System.Void System.Reflection.Emit.MethodBuilder::.ctor(System.Reflection.Emit.TypeBuilder,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])
+SC-M: System.Void System.Reflection.Emit.MethodBuilder::.ctor(System.Reflection.Emit.TypeBuilder,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][],System.String,System.String,System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)
+SC-M: System.Object[] System.MonoCustomAttrs::GetCustomAttributesBase(System.Reflection.ICustomAttributeProvider,System.Type)

+SC-M: System.Int32 System.IO.FileStream::ReadData(System.IntPtr,System.Byte[],System.Int32,System.Int32)
+SC-M: System.Int32 System.IO.FileStream::ReadInternal(System.Byte[],System.Int32,System.Int32)
+SC-M: System.Void System.IO.FileStream::WriteInternal(System.Byte[],System.Int32,System.Int32)
+SC-M: System.Void System.IO.FileStream::RefillBuffer()
+SC-M: System.Void System.IO.IsolatedStorage.IsolatedStorage::set_Quota(System.Int64)
+SC-M: System.Void System.IO.DirectoryInfo::.ctor(System.String,System.Boolean)

