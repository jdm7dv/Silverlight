//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.CommentWidgetViewModel2
{
	using System; 

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class CommentWidgetViewModel2 { }
#else

	public class CommentWidgetViewModel2 : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		public CommentWidgetViewModel2()
		{
			try
			{
				System.Uri resourceUri = new System.Uri("/Silverlight.Weblog.Client.Default.Widgets;component/SampleData/CommentWidgetViewModel2/CommentWidgetViewModel2.xaml", System.UriKind.Relative);
				if (System.Windows.Application.GetResourceStream(resourceUri) != null)
				{
					System.Windows.Application.LoadComponent(this, resourceUri);
				}
			}
			catch (System.Exception)
			{
			}
		}

		private Model _Model = new Model();

		public Model Model
		{
			get
			{
				return this._Model;
			}

			set
			{
				if (this._Model != value)
				{
					this._Model = value;
					this.OnPropertyChanged("Model");
				}
			}
		}

		private ChildViewModelComments1 _ChildViewModelComments = new ChildViewModelComments1();

		public ChildViewModelComments1 ChildViewModelComments
		{
			get
			{
				return this._ChildViewModelComments;
			}
		}

		private string _LinkUri = string.Empty;

		public string LinkUri
		{
			get
			{
				return this._LinkUri;
			}

			set
			{
				if (this._LinkUri != value)
				{
					this._LinkUri = value;
					this.OnPropertyChanged("LinkUri");
				}
			}
		}
	}

	public class ChildViewModelCommentsItem : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private string _LinkUri = string.Empty;

		public string LinkUri
		{
			get
			{
				return this._LinkUri;
			}

			set
			{
				if (this._LinkUri != value)
				{
					this._LinkUri = value;
					this.OnPropertyChanged("LinkUri");
				}
			}
		}

		private ChildViewModelComments _ChildViewModelComments = new ChildViewModelComments();

		public ChildViewModelComments ChildViewModelComments
		{
			get
			{
				return this._ChildViewModelComments;
			}
		}
	}

	public class ChildViewModelComments : System.Collections.ObjectModel.ObservableCollection<ChildViewModelCommentsItem>
	{ 
	}

	public class Model : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private string _HTML = string.Empty;

		public string HTML
		{
			get
			{
				return this._HTML;
			}

			set
			{
				if (this._HTML != value)
				{
					this._HTML = value;
					this.OnPropertyChanged("HTML");
				}
			}
		}

		private string _Url = string.Empty;

		public string Url
		{
			get
			{
				return this._Url;
			}

			set
			{
				if (this._Url != value)
				{
					this._Url = value;
					this.OnPropertyChanged("Url");
				}
			}
		}

		private string _Email = string.Empty;

		public string Email
		{
			get
			{
				return this._Email;
			}

			set
			{
				if (this._Email != value)
				{
					this._Email = value;
					this.OnPropertyChanged("Email");
				}
			}
		}

		private string _Name = string.Empty;

		public string Name
		{
			get
			{
				return this._Name;
			}

			set
			{
				if (this._Name != value)
				{
					this._Name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}
	}

	public class ChildViewModelCommentsItem1 : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private ChildViewModelComments1 _ChildViewModelComments = new ChildViewModelComments1();

		public ChildViewModelComments1 ChildViewModelComments
		{
			get
			{
				return this._ChildViewModelComments;
			}
		}

		private string _LinkUri = string.Empty;

		public string LinkUri
		{
			get
			{
				return this._LinkUri;
			}

			set
			{
				if (this._LinkUri != value)
				{
					this._LinkUri = value;
					this.OnPropertyChanged("LinkUri");
				}
			}
		}

		private Model1 _Model = new Model1();

		public Model1 Model
		{
			get
			{
				return this._Model;
			}

			set
			{
				if (this._Model != value)
				{
					this._Model = value;
					this.OnPropertyChanged("Model");
				}
			}
		}
	}

	public class ChildViewModelComments1 : System.Collections.ObjectModel.ObservableCollection<ChildViewModelCommentsItem1>
	{ 
	}

	public class Model1 : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private string _Email = string.Empty;

		public string Email
		{
			get
			{
				return this._Email;
			}

			set
			{
				if (this._Email != value)
				{
					this._Email = value;
					this.OnPropertyChanged("Email");
				}
			}
		}

		private string _Url = string.Empty;

		public string Url
		{
			get
			{
				return this._Url;
			}

			set
			{
				if (this._Url != value)
				{
					this._Url = value;
					this.OnPropertyChanged("Url");
				}
			}
		}

		private string _HTML = string.Empty;

		public string HTML
		{
			get
			{
				return this._HTML;
			}

			set
			{
				if (this._HTML != value)
				{
					this._HTML = value;
					this.OnPropertyChanged("HTML");
				}
			}
		}

		private string _Name = string.Empty;

		public string Name
		{
			get
			{
				return this._Name;
			}

			set
			{
				if (this._Name != value)
				{
					this._Name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}
	}
#endif
}
